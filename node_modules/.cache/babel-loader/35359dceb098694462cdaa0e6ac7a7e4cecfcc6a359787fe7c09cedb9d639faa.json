{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */function () {\n  function ColumnWidthService(parent) {\n    this.parent = parent;\n  }\n  ColumnWidthService.prototype.setWidthToColumns = function () {\n    var i = 0;\n    var indexes = this.parent.getColumnIndexesInView();\n    var wFlag = true;\n    var totalColumnsWidth = 0;\n    if (this.parent.allowGrouping) {\n      for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n          wFlag = false;\n          continue;\n        }\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }), i);\n      }\n    }\n    if (this.parent.detailTemplate || this.parent.childGrid) {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), i);\n      i++;\n    }\n    var columns = this.parent.getColumns();\n    for (var j = 0; j < columns.length; j++) {\n      this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n    }\n    if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n      this.setColumnWidth(new Column({\n        width: '30px'\n      }), columns.length);\n    }\n    totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n    if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n      this.setMinwidthBycalculation(totalColumnsWidth);\n    }\n  };\n  ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n    var difference = 0;\n    var collection = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width) || a.width === 'auto';\n    });\n    if (collection.length) {\n      if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' && typeof this.parent.width === 'string' && this.parent.width.indexOf('%') === -1) {\n        difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n      } else {\n        difference = this.parent.element.getBoundingClientRect().width - tWidth;\n      }\n      var tmWidth = 0;\n      for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n        var cols = collection_1[_i];\n        tmWidth += !isNullOrUndefined(cols.minWidth) ? typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth : 0;\n      }\n      for (var i = 0; i < collection.length; i++) {\n        if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && i !== collection.length - 1) {\n          this.setUndefinedColumnWidth(collection);\n        }\n        var index = this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount();\n        if (tWidth !== 0 && difference < tmWidth) {\n          this.setWidth(collection[i].minWidth, index);\n        } else if (tWidth !== 0 && difference > tmWidth) {\n          this.setWidth('', index, true);\n        }\n      }\n    }\n  };\n  ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n    for (var k = 0; k < collection.length; k++) {\n      if (k !== collection.length - 1) {\n        collection[k].width = 200;\n        this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n      }\n    }\n  };\n  ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n    if (this.parent.getColumns().length < 1) {\n      return;\n    }\n    var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n    var cWidth = this.getWidth(column);\n    var tgridWidth = this.getTableWidth(this.parent.getColumns());\n    if (cWidth !== null) {\n      this.setWidth(cWidth, columnIndex);\n      if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n        this.setMinwidthBycalculation(tgridWidth);\n      }\n      if (this.parent.allowResizing && module === 'resize' || this.parent.getFrozenColumns() && this.parent.allowResizing) {\n        this.setWidthToTable();\n      }\n      this.parent.notify(columnWidthChanged, {\n        index: columnIndex,\n        width: cWidth,\n        column: column,\n        module: module\n      });\n    }\n  };\n  ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n    if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n      var elementWidth = this.parent.element.offsetWidth;\n      width = (30 / elementWidth * 100).toFixed(1) + '%';\n    }\n    var header = this.parent.getHeaderTable();\n    var content = this.parent.getContentTable();\n    var fWidth = formatUnit(width);\n    var headerCol;\n    var frzCols = this.parent.getFrozenColumns();\n    var isDraggable = this.parent.isRowDragable();\n    frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n    var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n    var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n    var freezeRight = this.parent.getFrozenRightColumnsCount();\n    var movableCount = this.parent.getMovableColumnsCount();\n    var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n    if (frzCols && index >= frzCols) {\n      if (!mHdr || !mHdr.querySelector(literals.colGroup)) {\n        return;\n      }\n      headerCol = mHdr.querySelector(literals.colGroup).children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mHdr.scrollLeft > 0) {\n      var colGroup = mHdr.querySelector(literals.colGroup);\n      headerCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n      if (freezeLeft && !freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        target = index < freezeLeft ? header : mHdr;\n      } else if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? header : mHdr;\n      } else if (freezeLeft && freezeRight) {\n        index = isDraggable ? index - 1 : index;\n        var frHdr = this.parent.getFrozenRightHeader();\n        target = index < freezeLeft ? header : index < freezeLeft + movableCount ? mHdr : frHdr;\n      }\n      headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n      if (!headerCol) {\n        return;\n      }\n    } else {\n      headerCol = header.querySelector(literals.colGroup).children[index];\n    }\n    if (headerCol && !clear) {\n      headerCol.style.width = fWidth;\n    } else if (headerCol && clear) {\n      headerCol.style.width = '';\n    }\n    var contentCol;\n    if (frzCols && index >= frzCols) {\n      contentCol = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector(literals.colGroup).children[index - frzCols];\n    } else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis() && mCont.scrollLeft > 0) {\n      var colGroup = this.parent.getContent().querySelector('.' + literals.movableContent).querySelector(literals.colGroup);\n      contentCol = colGroup.children[colGroup.children.length - 1 - index];\n    } else if (isColFrozen) {\n      var target = void 0;\n      if (freezeLeft && !freezeRight) {\n        target = index < freezeLeft ? content : mCont;\n      }\n      if (!freezeLeft && freezeRight) {\n        target = index >= movableCount ? content : mCont;\n      }\n      if (freezeLeft && freezeRight) {\n        var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n        target = index < freezeLeft ? content : index < freezeLeft + movableCount ? mCont : frCont;\n      }\n      contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n    } else {\n      contentCol = content.querySelector(literals.colGroup).children[index];\n    }\n    if (contentCol && !clear) {\n      contentCol.style.width = fWidth;\n    } else if (contentCol && clear) {\n      contentCol.style.width = '';\n    }\n    if (!this.parent.enableColumnVirtualization) {\n      var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n      var editTableCol = [];\n      for (var i = 0; i < edit.length; i++) {\n        if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n          for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n            editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n          }\n        }\n      }\n      if (edit.length && editTableCol.length) {\n        editTableCol[index].style.width = fWidth;\n      }\n    }\n    if (this.parent.isFrozenGrid()) {\n      this.refreshFrozenScrollbar();\n    }\n  };\n  ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n    if (!ele || !ele.querySelector(literals.colGroup)) {\n      return null;\n    }\n    var columns = this.parent.getColumns();\n    var isDrag = this.parent.isRowDragable();\n    var frzMode = this.parent.getFrozenMode();\n    var headerCol;\n    var colGroup = [].slice.call(ele.querySelector(literals.colGroup).children);\n    if (frzMode === 'Right' && isDrag && index === movable + this.parent.getFrozenRightColumnsCount()) {\n      headerCol = colGroup[colGroup.length - 1];\n    } else if (isDrag && index === -1) {\n      headerCol = colGroup[0];\n    } else if (columns[index].freeze === 'Left') {\n      headerCol = colGroup[isDrag ? index + 1 : index];\n    } else if (columns[index].freeze === 'Right') {\n      headerCol = colGroup[index - (left + movable)];\n    } else {\n      headerCol = colGroup[index - left];\n    }\n    return headerCol;\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n    var args = {\n      cancel: false\n    };\n    this.parent.notify(preventFrozenScrollRefresh, args);\n    if (args.cancel) {\n      return;\n    }\n    var scrollWidth = getScrollBarWidth();\n    var frozenScrollbar = this.parent.element.querySelector('.e-frozenscrollbar');\n    var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n    var frozencontent = this.parent.getContent().querySelector('.' + literals.frozenContent);\n    var movableContent = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var frozenWidth = frozencontent.firstElementChild.getBoundingClientRect().width;\n    var movableWidth = movableContent.firstElementChild.getBoundingClientRect().width;\n    if (this.parent.getFrozenMode() === 'Right') {\n      frozenWidth = frozenWidth + scrollWidth;\n    }\n    frozenScrollbar.style.width = frozenWidth + 'px';\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      var frozenRightScrollbar = this.parent.element.querySelector('.e-frozen-right-scrollbar');\n      var frozenRightWidth = this.parent.getContent().querySelector('.e-frozen-right-content').firstElementChild.getBoundingClientRect().width;\n      if (this.parent.height !== 'auto') {\n        frozenRightWidth = frozenRightWidth + scrollWidth;\n      }\n      frozenRightScrollbar.style.width = frozenRightWidth + 'px';\n    } else {\n      if (this.parent.enableColumnVirtualization) {\n        var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n        if (placeHolder) {\n          movableWidth = placeHolder.scrollWidth;\n        }\n      }\n      if (this.parent.getFrozenMode() !== 'Right' && this.parent.height !== 'auto') {\n        movableWidth = movableWidth + scrollWidth;\n      }\n    }\n    movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n  };\n  ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n    var previous = this.getHeightFromDirection(element, 'previous');\n    var next = this.getHeightFromDirection(element, 'next');\n    return previous + next;\n  };\n  ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n    var sibling = element[direction + 'ElementSibling'];\n    var result = 0;\n    var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n    while (sibling) {\n      if (classList.some(function (value) {\n        return sibling.classList.contains(value);\n      })) {\n        result += sibling.offsetHeight;\n      }\n      sibling = sibling[direction + 'ElementSibling'];\n    }\n    return result;\n  };\n  ColumnWidthService.prototype.isWidthUndefined = function () {\n    var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n      return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n    }).length;\n    return this.parent.getColumns().length === isWidUndefCount;\n  };\n  ColumnWidthService.prototype.getWidth = function (column) {\n    if (isNullOrUndefined(column.width) && this.parent.allowResizing && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n      column.width = 200;\n    }\n    if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) && (column.getFreezeTableName() === literals.frozenLeft || column.getFreezeTableName() === literals.frozenRight)) {\n      column.width = 200;\n    }\n    if (!column.width) {\n      return null;\n    }\n    var width = parseInt(column.width.toString(), 10);\n    if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n      return column.minWidth;\n    } else if (column.maxWidth && width > parseInt(column.maxWidth.toString(), 10)) {\n      return column.maxWidth;\n    } else {\n      return column.width;\n    }\n  };\n  ColumnWidthService.prototype.getTableWidth = function (columns) {\n    var tWidth = 0;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      var cWidth = this.getWidth(column);\n      if (column.width === 'auto') {\n        cWidth = 0;\n      }\n      if (column.visible !== false && cWidth !== null) {\n        tWidth += parseInt(cWidth.toString(), 10);\n      }\n    }\n    return tWidth;\n  };\n  ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n    var columns = this.parent.getColumns().slice();\n    var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n    var movable = this.parent.getMovableColumnsCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    if (tableType === 'movable') {\n      if (right) {\n        columns.splice(left + movable, columns.length);\n      }\n      if (left) {\n        columns.splice(0, left);\n      }\n    } else if (tableType === 'freeze-left') {\n      columns.splice(left, columns.length);\n    } else if (tableType === 'freeze-right') {\n      columns.splice(0, left + movable);\n    }\n    return formatUnit(this.getTableWidth(columns));\n  };\n  ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.' + literals.table);\n    var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n    headerTbl.style.width = freezeWidth;\n    cntTbl.style.width = freezeWidth;\n  };\n  ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.getHeaderTable().style.width = freezeWidth;\n    this.parent.getContentTable().style.width = freezeWidth;\n  };\n  ColumnWidthService.prototype.setWidthToMovableTable = function () {\n    var movableWidth = '';\n    var isColUndefined = this.parent.getColumns().filter(function (a) {\n      return isNullOrUndefined(a.width);\n    }).length >= 1;\n    var isWidthAuto = this.parent.getColumns().filter(function (a) {\n      return a.width === 'auto';\n    }).length >= 1;\n    if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n      movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n    } else if (!isColUndefined && !isWidthAuto) {\n      movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    }\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n    if (this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild) {\n      this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild.style.width = movableWidth;\n    }\n    this.parent.getContent().querySelector('.' + literals.movableContent).firstElementChild.style.width = movableWidth;\n  };\n  ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n    var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n    freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n  };\n  ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n    var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n    movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n    this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n  };\n  ColumnWidthService.prototype.setWidthToTable = function () {\n    var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n    if (this.parent.isFrozenGrid()) {\n      if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n        this.setWidthToFrozenLeftTable();\n      }\n      this.setWidthToMovableTable();\n      if (this.parent.getFrozenRightColumnsCount()) {\n        this.setWidthToFrozenRightTable();\n      }\n    } else {\n      if (this.parent.detailTemplate || this.parent.childGrid) {\n        this.setColumnWidth(new Column({\n          width: '30px'\n        }));\n      }\n      tWidth = this.isAutoResize() ? '100%' : tWidth;\n      this.parent.getHeaderTable().style.width = tWidth;\n      this.parent.getContentTable().style.width = tWidth;\n    }\n    var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n    if (edit && this.parent.getFrozenColumns()) {\n      this.setWidthToFrozenEditTable();\n      this.setWidthToMovableEditTable();\n    } else if (edit) {\n      edit.style.width = tWidth;\n    }\n  };\n  ColumnWidthService.prototype.isAutoResize = function () {\n    return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n  };\n  return ColumnWidthService;\n}();\nexport { ColumnWidthService };","map":{"version":3,"names":["isNullOrUndefined","formatUnit","columnWidthChanged","preventFrozenScrollRefresh","Column","parentsUntil","ispercentageWidth","getScrollBarWidth","literals","ColumnWidthService","parent","prototype","setWidthToColumns","i","indexes","getColumnIndexesInView","wFlag","totalColumnsWidth","allowGrouping","len","groupSettings","columns","length","enableColumnVirtualization","indexOf","setColumnWidth","width","detailTemplate","childGrid","isRowDragable","getFrozenMode","getColumns","j","undefined","getTableWidth","toString","setMinwidthBycalculation","tWidth","difference","collection","filter","a","parseInt","element","getBoundingClientRect","tmWidth","_i","collection_1","cols","minWidth","allowResizing","isWidthUndefined","setUndefinedColumnWidth","index","getColumnIndexByField","field","getIndentCount","setWidth","k","column","module","columnIndex","getNormalizedColumnIndex","uid","cWidth","getWidth","tgridWidth","getFrozenColumns","setWidthToTable","notify","clear","elementWidth","offsetWidth","toFixed","header","getHeaderTable","content","getContentTable","fWidth","headerCol","frzCols","isDraggable","mHdr","getHeaderContent","querySelector","movableHeader","mCont","getContent","movableContent","freezeLeft","getFrozenLeftColumnsCount","freezeRight","getFrozenRightColumnsCount","movableCount","getMovableColumnsCount","isColFrozen","colGroup","children","contentModule","isXaxis","scrollLeft","target","frHdr","getFrozenRightHeader","getColumnLevelFrozenColgroup","style","contentCol","frCont","edit","querySelectorAll","editTableCol","id","push","isFrozenGrid","refreshFrozenScrollbar","left","movable","ele","isDrag","frzMode","slice","call","freeze","args","cancel","scrollWidth","frozenScrollbar","movableScrollbar","frozencontent","frozenContent","frozenWidth","firstElementChild","movableWidth","leftRight","frozenRightScrollbar","frozenRightWidth","height","placeHolder","getMovableVirtualContent","getSiblingsHeight","previous","getHeightFromDirection","next","direction","sibling","result","classList","gridHeader","gridFooter","some","value","contains","offsetHeight","isWidUndefCount","col","getFreezeTableName","frozenLeft","frozenRight","maxWidth","columns_1","visible","calcMovableOrFreezeColWidth","tableType","right","splice","setWidthToFrozenRightTable","freezeWidth","isAutoResize","headerTbl","table","cntTbl","setWidthToFrozenLeftTable","setWidthToMovableTable","isColUndefined","isWidthAuto","split","setWidthToFrozenEditTable","setWidthToMovableEditTable","resizeSettings","mode"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/services/width-controller.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { formatUnit } from '@syncfusion/ej2-base';\nimport { columnWidthChanged, preventFrozenScrollRefresh } from '../base/constant';\nimport { Column } from '../models/column';\nimport { parentsUntil, ispercentageWidth, getScrollBarWidth } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * ColumnWidthService\n *\n * @hidden\n */\nvar ColumnWidthService = /** @class */ (function () {\n    function ColumnWidthService(parent) {\n        this.parent = parent;\n    }\n    ColumnWidthService.prototype.setWidthToColumns = function () {\n        var i = 0;\n        var indexes = this.parent.getColumnIndexesInView();\n        var wFlag = true;\n        var totalColumnsWidth = 0;\n        if (this.parent.allowGrouping) {\n            for (var len = this.parent.groupSettings.columns.length; i < len; i++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(i) === -1) {\n                    wFlag = false;\n                    continue;\n                }\n                this.setColumnWidth(new Column({ width: '30px' }), i);\n            }\n        }\n        if (this.parent.detailTemplate || this.parent.childGrid) {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() !== 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), i);\n            i++;\n        }\n        var columns = this.parent.getColumns();\n        for (var j = 0; j < columns.length; j++) {\n            this.setColumnWidth(columns[j], wFlag && this.parent.enableColumnVirtualization ? undefined : j + i);\n        }\n        if (this.parent.isRowDragable() && this.parent.getFrozenMode() === 'Right') {\n            this.setColumnWidth(new Column({ width: '30px' }), columns.length);\n        }\n        totalColumnsWidth = this.getTableWidth(this.parent.getColumns());\n        if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n            this.setMinwidthBycalculation(totalColumnsWidth);\n        }\n    };\n    ColumnWidthService.prototype.setMinwidthBycalculation = function (tWidth) {\n        var difference = 0;\n        var collection = this.parent.getColumns().filter(function (a) {\n            return isNullOrUndefined(a.width) || a.width === 'auto';\n        });\n        if (collection.length) {\n            if (!isNullOrUndefined(this.parent.width) && this.parent.width !== 'auto' &&\n                typeof (this.parent.width) === 'string' && this.parent.width.indexOf('%') === -1) {\n                difference = (typeof this.parent.width === 'string' ? parseInt(this.parent.width, 10) : this.parent.width) - tWidth;\n            }\n            else {\n                difference = this.parent.element.getBoundingClientRect().width - tWidth;\n            }\n            var tmWidth = 0;\n            for (var _i = 0, collection_1 = collection; _i < collection_1.length; _i++) {\n                var cols = collection_1[_i];\n                tmWidth += !isNullOrUndefined(cols.minWidth) ?\n                    ((typeof cols.minWidth === 'string' ? parseInt(cols.minWidth, 10) : cols.minWidth)) : 0;\n            }\n            for (var i = 0; i < collection.length; i++) {\n                if (tWidth === 0 && this.parent.allowResizing && this.isWidthUndefined() && (i !== collection.length - 1)) {\n                    this.setUndefinedColumnWidth(collection);\n                }\n                var index = this.parent.getColumnIndexByField(collection[i].field) + this.parent.getIndentCount();\n                if (tWidth !== 0 && difference < tmWidth) {\n                    this.setWidth(collection[i].minWidth, index);\n                }\n                else if (tWidth !== 0 && difference > tmWidth) {\n                    this.setWidth('', index, true);\n                }\n            }\n        }\n    };\n    ColumnWidthService.prototype.setUndefinedColumnWidth = function (collection) {\n        for (var k = 0; k < collection.length; k++) {\n            if (k !== collection.length - 1) {\n                collection[k].width = 200;\n                this.setWidth(200, this.parent.getColumnIndexByField(collection[k].field));\n            }\n        }\n    };\n    ColumnWidthService.prototype.setColumnWidth = function (column, index, module) {\n        if (this.parent.getColumns().length < 1) {\n            return;\n        }\n        var columnIndex = isNullOrUndefined(index) ? this.parent.getNormalizedColumnIndex(column.uid) : index;\n        var cWidth = this.getWidth(column);\n        var tgridWidth = this.getTableWidth(this.parent.getColumns());\n        if (cWidth !== null) {\n            this.setWidth(cWidth, columnIndex);\n            if (this.parent.width !== 'auto' && this.parent.width.toString().indexOf('%') === -1) {\n                this.setMinwidthBycalculation(tgridWidth);\n            }\n            if ((this.parent.allowResizing && module === 'resize') || (this.parent.getFrozenColumns() && this.parent.allowResizing)) {\n                this.setWidthToTable();\n            }\n            this.parent.notify(columnWidthChanged, { index: columnIndex, width: cWidth, column: column, module: module });\n        }\n    };\n    ColumnWidthService.prototype.setWidth = function (width, index, clear) {\n        if (this.parent.groupSettings.columns.length > index && ispercentageWidth(this.parent)) {\n            var elementWidth = this.parent.element.offsetWidth;\n            width = (30 / elementWidth * 100).toFixed(1) + '%';\n        }\n        var header = this.parent.getHeaderTable();\n        var content = this.parent.getContentTable();\n        var fWidth = formatUnit(width);\n        var headerCol;\n        var frzCols = this.parent.getFrozenColumns();\n        var isDraggable = this.parent.isRowDragable();\n        frzCols = frzCols && isDraggable ? frzCols + 1 : frzCols;\n        var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n        var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var freezeLeft = this.parent.getFrozenLeftColumnsCount();\n        var freezeRight = this.parent.getFrozenRightColumnsCount();\n        var movableCount = this.parent.getMovableColumnsCount();\n        var isColFrozen = freezeLeft !== 0 || freezeRight !== 0;\n        if (frzCols && index >= frzCols) {\n            if (!mHdr || !mHdr.querySelector(literals.colGroup)) {\n                return;\n            }\n            headerCol = mHdr.querySelector(literals.colGroup).children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mHdr.scrollLeft > 0) {\n            var colGroup = mHdr.querySelector(literals.colGroup);\n            headerCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                target = index < freezeLeft ? header : mHdr;\n            }\n            else if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? header : mHdr;\n            }\n            else if (freezeLeft && freezeRight) {\n                index = isDraggable ? index - 1 : index;\n                var frHdr = this.parent.getFrozenRightHeader();\n                target = index < freezeLeft ? header : index < (freezeLeft + movableCount) ? mHdr : frHdr;\n            }\n            headerCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n            if (!headerCol) {\n                return;\n            }\n        }\n        else {\n            headerCol = header.querySelector(literals.colGroup).children[index];\n        }\n        if (headerCol && !clear) {\n            headerCol.style.width = fWidth;\n        }\n        else if (headerCol && clear) {\n            headerCol.style.width = '';\n        }\n        var contentCol;\n        if (frzCols && index >= frzCols) {\n            contentCol = this.parent.getContent().querySelector('.' + literals.movableContent)\n                .querySelector(literals.colGroup).children[index - frzCols];\n        }\n        else if (this.parent.enableColumnVirtualization && frzCols && this.parent.contentModule.isXaxis()\n            && mCont.scrollLeft > 0) {\n            var colGroup = this.parent.getContent().querySelector('.' + literals.movableContent)\n                .querySelector(literals.colGroup);\n            contentCol = colGroup.children[(colGroup.children.length - 1) - index];\n        }\n        else if (isColFrozen) {\n            var target = void 0;\n            if (freezeLeft && !freezeRight) {\n                target = index < freezeLeft ? content : mCont;\n            }\n            if (!freezeLeft && freezeRight) {\n                target = index >= movableCount ? content : mCont;\n            }\n            if (freezeLeft && freezeRight) {\n                var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n                target = index < freezeLeft ? content : index < (freezeLeft + movableCount) ? mCont : frCont;\n            }\n            contentCol = this.getColumnLevelFrozenColgroup(index, freezeLeft, movableCount, target);\n        }\n        else {\n            contentCol = content.querySelector(literals.colGroup).children[index];\n        }\n        if (contentCol && !clear) {\n            contentCol.style.width = fWidth;\n        }\n        else if (contentCol && clear) {\n            contentCol.style.width = '';\n        }\n        if (!this.parent.enableColumnVirtualization) {\n            var edit = this.parent.element.querySelectorAll('.e-table.e-inline-edit');\n            var editTableCol = [];\n            for (var i = 0; i < edit.length; i++) {\n                if (parentsUntil(edit[i], 'e-grid').id === this.parent.element.id) {\n                    for (var j = 0; j < edit[i].querySelector('colgroup').children.length; j++) {\n                        editTableCol.push(edit[i].querySelector('colgroup').children[j]);\n                    }\n                }\n            }\n            if (edit.length && editTableCol.length) {\n                editTableCol[index].style.width = fWidth;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            this.refreshFrozenScrollbar();\n        }\n    };\n    ColumnWidthService.prototype.getColumnLevelFrozenColgroup = function (index, left, movable, ele) {\n        if (!ele || !ele.querySelector(literals.colGroup)) {\n            return null;\n        }\n        var columns = this.parent.getColumns();\n        var isDrag = this.parent.isRowDragable();\n        var frzMode = this.parent.getFrozenMode();\n        var headerCol;\n        var colGroup = [].slice.call(ele.querySelector(literals.colGroup).children);\n        if (frzMode === 'Right' && isDrag && index === (movable + this.parent.getFrozenRightColumnsCount())) {\n            headerCol = colGroup[colGroup.length - 1];\n        }\n        else if (isDrag && index === -1) {\n            headerCol = colGroup[0];\n        }\n        else if (columns[index].freeze === 'Left') {\n            headerCol = colGroup[isDrag ? (index + 1) : index];\n        }\n        else if (columns[index].freeze === 'Right') {\n            headerCol = colGroup[index - (left + movable)];\n        }\n        else {\n            headerCol = colGroup[index - left];\n        }\n        return headerCol;\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnWidthService.prototype.refreshFrozenScrollbar = function () {\n        var args = { cancel: false };\n        this.parent.notify(preventFrozenScrollRefresh, args);\n        if (args.cancel) {\n            return;\n        }\n        var scrollWidth = getScrollBarWidth();\n        var frozenScrollbar = this.parent.element.querySelector('.e-frozenscrollbar');\n        var movableScrollbar = this.parent.element.querySelector('.e-movablescrollbar');\n        var frozencontent = this.parent.getContent().querySelector('.' + literals.frozenContent);\n        var movableContent = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var frozenWidth = frozencontent.firstElementChild.getBoundingClientRect().width;\n        var movableWidth = movableContent.firstElementChild.getBoundingClientRect().width;\n        if (this.parent.getFrozenMode() === 'Right') {\n            frozenWidth = frozenWidth + scrollWidth;\n        }\n        frozenScrollbar.style.width = frozenWidth + 'px';\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            var frozenRightScrollbar = this.parent.element.querySelector('.e-frozen-right-scrollbar');\n            var frozenRightWidth = this.parent.getContent().querySelector('.e-frozen-right-content')\n                .firstElementChild.getBoundingClientRect().width;\n            if (this.parent.height !== 'auto') {\n                frozenRightWidth = frozenRightWidth + scrollWidth;\n            }\n            frozenRightScrollbar.style.width = frozenRightWidth + 'px';\n        }\n        else {\n            if (this.parent.enableColumnVirtualization) {\n                var placeHolder = this.parent.getMovableVirtualContent().querySelector('.e-virtualtrack');\n                if (placeHolder) {\n                    movableWidth = placeHolder.scrollWidth;\n                }\n            }\n            if (this.parent.getFrozenMode() !== 'Right' && this.parent.height !== 'auto') {\n                movableWidth = movableWidth + scrollWidth;\n            }\n        }\n        movableScrollbar.firstElementChild.style.width = movableWidth + 'px';\n    };\n    ColumnWidthService.prototype.getSiblingsHeight = function (element) {\n        var previous = this.getHeightFromDirection(element, 'previous');\n        var next = this.getHeightFromDirection(element, 'next');\n        return previous + next;\n    };\n    ColumnWidthService.prototype.getHeightFromDirection = function (element, direction) {\n        var sibling = element[direction + 'ElementSibling'];\n        var result = 0;\n        var classList = [literals.gridHeader, literals.gridFooter, 'e-groupdroparea', 'e-gridpager', 'e-toolbar'];\n        while (sibling) {\n            if (classList.some(function (value) { return sibling.classList.contains(value); })) {\n                result += sibling.offsetHeight;\n            }\n            sibling = sibling[direction + 'ElementSibling'];\n        }\n        return result;\n    };\n    ColumnWidthService.prototype.isWidthUndefined = function () {\n        var isWidUndefCount = this.parent.getColumns().filter(function (col) {\n            return isNullOrUndefined(col.width) && isNullOrUndefined(col.minWidth);\n        }).length;\n        return (this.parent.getColumns().length === isWidUndefCount);\n    };\n    ColumnWidthService.prototype.getWidth = function (column) {\n        if (isNullOrUndefined(column.width) && this.parent.allowResizing\n            && isNullOrUndefined(column.minWidth) && !this.isWidthUndefined()) {\n            column.width = 200;\n        }\n        if (this.parent.isFrozenGrid() && isNullOrUndefined(column.width) &&\n            (column.getFreezeTableName() === literals.frozenLeft || column.getFreezeTableName() === literals.frozenRight)) {\n            column.width = 200;\n        }\n        if (!column.width) {\n            return null;\n        }\n        var width = parseInt(column.width.toString(), 10);\n        if (column.minWidth && width < parseInt(column.minWidth.toString(), 10)) {\n            return column.minWidth;\n        }\n        else if ((column.maxWidth && width > parseInt(column.maxWidth.toString(), 10))) {\n            return column.maxWidth;\n        }\n        else {\n            return column.width;\n        }\n    };\n    ColumnWidthService.prototype.getTableWidth = function (columns) {\n        var tWidth = 0;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            var cWidth = this.getWidth(column);\n            if (column.width === 'auto') {\n                cWidth = 0;\n            }\n            if (column.visible !== false && cWidth !== null) {\n                tWidth += parseInt(cWidth.toString(), 10);\n            }\n        }\n        return tWidth;\n    };\n    ColumnWidthService.prototype.calcMovableOrFreezeColWidth = function (tableType) {\n        var columns = this.parent.getColumns().slice();\n        var left = this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenColumns();\n        var movable = this.parent.getMovableColumnsCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        if (tableType === 'movable') {\n            if (right) {\n                columns.splice(left + movable, columns.length);\n            }\n            if (left) {\n                columns.splice(0, left);\n            }\n        }\n        else if (tableType === 'freeze-left') {\n            columns.splice(left, columns.length);\n        }\n        else if (tableType === 'freeze-right') {\n            columns.splice(0, left + movable);\n        }\n        return formatUnit(this.getTableWidth(columns));\n    };\n    ColumnWidthService.prototype.setWidthToFrozenRightTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-right');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        var headerTbl = this.parent.getHeaderContent().querySelector('.e-frozen-right-header').querySelector('.' + literals.table);\n        var cntTbl = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector('.' + literals.table);\n        headerTbl.style.width = freezeWidth;\n        cntTbl.style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenLeftTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze-left');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.getHeaderTable().style.width = freezeWidth;\n        this.parent.getContentTable().style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableTable = function () {\n        var movableWidth = '';\n        var isColUndefined = this.parent.getColumns().filter(function (a) { return isNullOrUndefined(a.width); }).length >= 1;\n        var isWidthAuto = this.parent.getColumns().filter(function (a) { return (a.width === 'auto'); }).length >= 1;\n        if (typeof this.parent.width === 'number' && !isColUndefined && !isWidthAuto) {\n            movableWidth = formatUnit(this.parent.width - parseInt(this.calcMovableOrFreezeColWidth('freeze').split('px')[0], 10) - 5);\n        }\n        else if (!isColUndefined && !isWidthAuto) {\n            movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        }\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        if (this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild) {\n            this.parent.getHeaderContent().querySelector('.' + literals.movableHeader).firstElementChild.style.width\n                = movableWidth;\n        }\n        this.parent.getContent().querySelector('.' + literals.movableContent).firstElementChild.style.width =\n            movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToFrozenEditTable = function () {\n        var freezeWidth = this.calcMovableOrFreezeColWidth('freeze');\n        freezeWidth = this.isAutoResize() ? '100%' : freezeWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[0].style.width = freezeWidth;\n    };\n    ColumnWidthService.prototype.setWidthToMovableEditTable = function () {\n        var movableWidth = this.calcMovableOrFreezeColWidth('movable');\n        movableWidth = this.isAutoResize() ? '100%' : movableWidth;\n        this.parent.element.querySelectorAll('.e-table.e-inline-edit')[1].style.width = movableWidth;\n    };\n    ColumnWidthService.prototype.setWidthToTable = function () {\n        var tWidth = formatUnit(this.getTableWidth(this.parent.getColumns()));\n        if (this.parent.isFrozenGrid()) {\n            if (this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()) {\n                this.setWidthToFrozenLeftTable();\n            }\n            this.setWidthToMovableTable();\n            if (this.parent.getFrozenRightColumnsCount()) {\n                this.setWidthToFrozenRightTable();\n            }\n        }\n        else {\n            if (this.parent.detailTemplate || this.parent.childGrid) {\n                this.setColumnWidth(new Column({ width: '30px' }));\n            }\n            tWidth = this.isAutoResize() ? '100%' : tWidth;\n            this.parent.getHeaderTable().style.width = tWidth;\n            this.parent.getContentTable().style.width = tWidth;\n        }\n        var edit = this.parent.element.querySelector('.e-table.e-inline-edit');\n        if (edit && this.parent.getFrozenColumns()) {\n            this.setWidthToFrozenEditTable();\n            this.setWidthToMovableEditTable();\n        }\n        else if (edit) {\n            edit.style.width = tWidth;\n        }\n    };\n    ColumnWidthService.prototype.isAutoResize = function () {\n        return this.parent.allowResizing && this.parent.resizeSettings.mode === 'Auto';\n    };\n    return ColumnWidthService;\n}());\nexport { ColumnWidthService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}