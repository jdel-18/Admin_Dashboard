{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CellRenderer } from './cell-renderer';\nimport { appendChildren, templateCompiler } from '../base/util';\n/**\n * GroupCaptionCellRenderer class which responsible for building group caption cell.\n *\n * @hidden\n */\nvar GroupCaptionCellRenderer = /** @class */function (_super) {\n  __extends(GroupCaptionCellRenderer, _super);\n  function GroupCaptionCellRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.element = _this.parent.createElement('TD', {\n      className: 'e-groupcaption',\n      attrs: {\n        id: _this.parent.element.id + 'captioncell',\n        role: 'gridcell',\n        tabindex: '-1'\n      }\n    });\n    return _this;\n  }\n  /**\n   * Function to render the cell content based on Column object.\n   *\n   * @param  {Cell} cell - specifies the cell\n   * @param  {Object} data - specifies the GroupedData\n   * @returns {Element} returns the element\n   */\n  GroupCaptionCellRenderer.prototype.render = function (cell, data) {\n    var node = this.element.cloneNode();\n    var gObj = this.parent;\n    var result;\n    var fKeyValue;\n    data.headerText = cell.column.headerText;\n    if (cell.isForeignKey) {\n      fKeyValue = this.format(cell.column, cell.column.valueAccessor('foreignKey', data, cell.column));\n    }\n    var value = cell.isForeignKey ? fKeyValue : cell.column.enableGroupByFormat ? data.key : this.format(cell.column, cell.column.valueAccessor('key', data, cell.column));\n    if (!isNullOrUndefined(gObj.groupSettings.captionTemplate)) {\n      var isReactCompiler = this.parent.isReact && typeof gObj.groupSettings.captionTemplate !== 'string';\n      if (isReactCompiler) {\n        var tempID = gObj.element.id + 'captionTemplate';\n        templateCompiler(gObj.groupSettings.captionTemplate)(data, this.parent, 'captionTemplate', tempID, null, null, node);\n        this.parent.renderTemplates();\n      } else if (this.parent.isVue) {\n        result = templateCompiler(gObj.groupSettings.captionTemplate)(data, this.parent);\n      } else {\n        result = templateCompiler(gObj.groupSettings.captionTemplate)(data);\n      }\n      if (!isReactCompiler) {\n        appendChildren(node, result);\n      }\n    } else {\n      if (gObj.groupSettings.enableLazyLoading) {\n        node.innerHTML = cell.column.headerText + ': ' + value;\n      } else {\n        node.innerHTML = cell.column.headerText + ': ' + value + ' - ' + data.count + ' ' + (data.count < 2 ? this.localizer.getConstant('Item') : this.localizer.getConstant('Items'));\n      }\n    }\n    node.setAttribute('colspan', cell.colSpan.toString());\n    node.setAttribute('aria-label', node.innerHTML + ' is groupcaption cell');\n    node.setAttribute('title', node.innerHTML);\n    return node;\n  };\n  return GroupCaptionCellRenderer;\n}(CellRenderer);\nexport { GroupCaptionCellRenderer };\n/**\n * GroupCaptionEmptyCellRenderer class which responsible for building group caption empty cell.\n *\n * @hidden\n */\nvar GroupCaptionEmptyCellRenderer = /** @class */function (_super) {\n  __extends(GroupCaptionEmptyCellRenderer, _super);\n  function GroupCaptionEmptyCellRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.element = _this.parent.createElement('TD', {\n      className: 'e-groupcaption'\n    });\n    return _this;\n  }\n  /**\n   * Function to render the cell content based on Column object.\n   *\n   * @param {Cell} cell - specifies the cell\n   * @param {Object} data - specifies the Object\n   * @param {string} data.field - Defines the field\n   * @param {string} data.key - Defines the key\n   * @param {number} data.count - Defines the count\n   * @returns {Element} returns the element\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  GroupCaptionEmptyCellRenderer.prototype.render = function (cell, data) {\n    var node = this.element.cloneNode();\n    node.innerHTML = '&nbsp;';\n    node.setAttribute('colspan', cell.colSpan.toString());\n    return node;\n  };\n  return GroupCaptionEmptyCellRenderer;\n}(CellRenderer);\nexport { GroupCaptionEmptyCellRenderer };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","CellRenderer","appendChildren","templateCompiler","GroupCaptionCellRenderer","_super","_this","apply","arguments","element","parent","createElement","className","attrs","id","role","tabindex","render","cell","data","node","cloneNode","gObj","result","fKeyValue","headerText","column","isForeignKey","format","valueAccessor","value","enableGroupByFormat","key","groupSettings","captionTemplate","isReactCompiler","isReact","tempID","renderTemplates","isVue","enableLazyLoading","innerHTML","count","localizer","getConstant","setAttribute","colSpan","toString","GroupCaptionEmptyCellRenderer"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/renderer/caption-cell-renderer.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CellRenderer } from './cell-renderer';\nimport { appendChildren, templateCompiler } from '../base/util';\n/**\n * GroupCaptionCellRenderer class which responsible for building group caption cell.\n *\n * @hidden\n */\nvar GroupCaptionCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCaptionCellRenderer, _super);\n    function GroupCaptionCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent\n            .createElement('TD', { className: 'e-groupcaption',\n            attrs: { id: _this.parent.element.id + 'captioncell', role: 'gridcell', tabindex: '-1' } });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param  {Cell} cell - specifies the cell\n     * @param  {Object} data - specifies the GroupedData\n     * @returns {Element} returns the element\n     */\n    GroupCaptionCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        var gObj = this.parent;\n        var result;\n        var fKeyValue;\n        data.headerText = cell.column.headerText;\n        if (cell.isForeignKey) {\n            fKeyValue = this.format(cell.column, cell.column.valueAccessor('foreignKey', data, cell.column));\n        }\n        var value = cell.isForeignKey ? fKeyValue : cell.column.enableGroupByFormat ? data.key :\n            this.format(cell.column, cell.column.valueAccessor('key', data, cell.column));\n        if (!isNullOrUndefined(gObj.groupSettings.captionTemplate)) {\n            var isReactCompiler = this.parent.isReact && typeof (gObj.groupSettings.captionTemplate) !== 'string';\n            if (isReactCompiler) {\n                var tempID = gObj.element.id + 'captionTemplate';\n                templateCompiler(gObj.groupSettings.captionTemplate)(data, this.parent, 'captionTemplate', tempID, null, null, node);\n                this.parent.renderTemplates();\n            }\n            else if (this.parent.isVue) {\n                result = templateCompiler(gObj.groupSettings.captionTemplate)(data, this.parent);\n            }\n            else {\n                result = templateCompiler(gObj.groupSettings.captionTemplate)(data);\n            }\n            if (!isReactCompiler) {\n                appendChildren(node, result);\n            }\n        }\n        else {\n            if (gObj.groupSettings.enableLazyLoading) {\n                node.innerHTML = cell.column.headerText + ': ' + value;\n            }\n            else {\n                node.innerHTML = cell.column.headerText + ': ' + value + ' - ' + data.count + ' ' +\n                    (data.count < 2 ? this.localizer.getConstant('Item') : this.localizer.getConstant('Items'));\n            }\n        }\n        node.setAttribute('colspan', cell.colSpan.toString());\n        node.setAttribute('aria-label', node.innerHTML + ' is groupcaption cell');\n        node.setAttribute('title', node.innerHTML);\n        return node;\n    };\n    return GroupCaptionCellRenderer;\n}(CellRenderer));\nexport { GroupCaptionCellRenderer };\n/**\n * GroupCaptionEmptyCellRenderer class which responsible for building group caption empty cell.\n *\n * @hidden\n */\nvar GroupCaptionEmptyCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCaptionEmptyCellRenderer, _super);\n    function GroupCaptionEmptyCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent.createElement('TD', { className: 'e-groupcaption' });\n        return _this;\n    }\n    /**\n     * Function to render the cell content based on Column object.\n     *\n     * @param {Cell} cell - specifies the cell\n     * @param {Object} data - specifies the Object\n     * @param {string} data.field - Defines the field\n     * @param {string} data.key - Defines the key\n     * @param {number} data.count - Defines the count\n     * @returns {Element} returns the element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    GroupCaptionEmptyCellRenderer.prototype.render = function (cell, data) {\n        var node = this.element.cloneNode();\n        node.innerHTML = '&nbsp;';\n        node.setAttribute('colspan', cell.colSpan.toString());\n        return node;\n    };\n    return GroupCaptionEmptyCellRenderer;\n}(CellRenderer));\nexport { GroupCaptionEmptyCellRenderer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}