{"ast":null,"code":"import { ChildProperty, compile as baseTemplateComplier, setValue, Internationalization, isUndefined, closest } from '@syncfusion/ej2-base';\nimport { extend as baseExtend, isNullOrUndefined, getValue, classList } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, addClass, attributes, remove, createElement, removeClass } from '@syncfusion/ej2-base';\nimport { isObject, select, selectAll } from '@syncfusion/ej2-base';\nimport { DataUtil, Query, DataManager, Predicate, UrlAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { Column } from '../models/column';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { Print } from '../actions/print';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\nimport * as literals from '../base/string-literals';\n//https://typescript.codeplex.com/discussions/401501\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {Object} target - specifies the target\n * @param  {string} checkFor - specifies the checkfors\n * @returns {boolean} returns the boolean\n * @hidden\n */\nexport function doesImplementInterface(target, checkFor) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return target.prototype && checkFor in target.prototype;\n}\n/**\n * Function to get value from provided data\n *\n * @param  {string} field - specifies the field\n * @param  {Object} data - specifies the data\n * @param  {ColumnModel} column - specifies the column\n * @returns {Object} returns the object\n * @hidden\n */\n// eslint-disable-next-line\nexport function valueAccessor(field, data, column) {\n  return isNullOrUndefined(field) || field === '' ? '' : DataUtil.getObject(field, data);\n}\n/**\n * Defines the method used to apply custom header cell values from external function and display this on each header cell rendered.\n *\n * @param  {string} field - specifies the field\n * @param  {ColumnModel} column - specifies the column\n * @returns {object} headerValueAccessor\n * @hidden\n */\nexport function headerValueAccessor(field, column) {\n  return isNullOrUndefined(field) || field === '' ? '' : DataUtil.getObject(field, column);\n}\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param {Function} updateFunction - Function that contains the actual action\n * @param {object} callBack - defines the callback\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function getUpdateUsingRaf(updateFunction, callBack) {\n  requestAnimationFrame(function () {\n    try {\n      callBack(null, updateFunction());\n    } catch (e) {\n      callBack(e);\n    }\n  });\n}\n/**\n * @hidden\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @returns {boolean} Returns isExportColumns\n */\nexport function isExportColumns(exportProperties) {\n  return !isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.columns) && exportProperties.columns.length > 0;\n}\n/**\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function updateColumnTypeForExportColumns(exportProperties, gObj) {\n  var exportColumns = exportProperties.columns;\n  var gridColumns = gObj.columns;\n  for (var i = 0; i < exportColumns.length; i++) {\n    if (gridColumns.length - 1 >= i) {\n      if (gridColumns[i].columns) {\n        for (var j = 0; j < gridColumns[i].columns.length; j++) {\n          exportColumns[i].columns[j].type = gridColumns[i].columns[j].type;\n        }\n      } else {\n        exportColumns[i].type = gridColumns[i].type;\n      }\n    }\n  }\n}\n/**\n * @hidden\n * @param {IGrid} grid - Defines the grid\n * @returns {void}\n */\nexport function updatecloneRow(grid) {\n  var nRows = [];\n  var actualRows = grid.vRows;\n  for (var i = 0; i < actualRows.length; i++) {\n    if (actualRows[i].isDataRow) {\n      nRows.push(actualRows[i]);\n    } else if (!actualRows[i].isDataRow) {\n      nRows.push(actualRows[i]);\n      if (!actualRows[i].isExpand && actualRows[i].isCaptionRow) {\n        i += getCollapsedRowsCount(actualRows[i], grid);\n      }\n    }\n  }\n  grid.vcRows = nRows;\n}\nvar count = 0;\n/**\n * @hidden\n * @param {Row<Column>} val - Defines the value\n * @param {IGrid} grid - Defines the grid\n * @returns {number} Returns the collapsed row count\n */\nexport function getCollapsedRowsCount(val, grid) {\n  count = 0;\n  var gSummary = 'gSummary';\n  var total = 'count';\n  var gLen = grid.groupSettings.columns.length;\n  var records = 'records';\n  var items = 'items';\n  var value = val[gSummary];\n  var dataRowCnt = 0;\n  var agrCnt = 'aggregatesCount';\n  if (value === val.data[total]) {\n    if (grid.groupSettings.columns.length && !isNullOrUndefined(val[agrCnt]) && val[agrCnt]) {\n      if (grid.groupSettings.columns.length !== 1) {\n        count += val.indent !== 0 && value < 2 ? val[gSummary] * (gLen - val.indent + (gLen - val.indent) * val[agrCnt]) : val[gSummary] * (gLen - val.indent + (gLen - val.indent - 1) * val[agrCnt]) + val[agrCnt];\n      } else if (grid.groupSettings.columns.length === 1) {\n        count += val[gSummary] * (gLen - val.indent) + val[agrCnt];\n      }\n    } else if (grid.groupSettings.columns.length) {\n      if (grid.groupSettings.columns.length !== 1) {\n        count += val[gSummary] * (grid.groupSettings.columns.length - val.indent);\n      } else {\n        count += val[gSummary];\n      }\n    }\n    return count;\n  } else {\n    for (var i = 0, len = val.data[items].length; i < len; i++) {\n      var gLevel = val.data[items][i];\n      count += gLevel[items].length + (gLen !== grid.columns.length && !isNullOrUndefined(gLevel[items][records]) ? gLevel[items][records].length : 0);\n      dataRowCnt += !isNullOrUndefined(gLevel[items][records]) && !isNullOrUndefined(val[agrCnt]) ? gLevel[items][records].length : gLevel[items].length;\n      if (gLevel[items].GroupGuid && gLevel[items].childLevels !== 0) {\n        recursive(gLevel);\n      }\n    }\n    count += val.data[items].length;\n    if (!isNullOrUndefined(val[agrCnt])) {\n      if (val[agrCnt] && count && dataRowCnt !== 0) {\n        count += (count - dataRowCnt) * val[agrCnt] + val[agrCnt];\n      }\n    }\n  }\n  return count;\n}\n/**\n * @param {Object[]} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function recursive(row) {\n  var items = 'items';\n  var rCount = 'count';\n  for (var j = 0, length_1 = row[items].length; j < length_1; j++) {\n    var nLevel = row[items][j];\n    count += nLevel[rCount];\n    if (nLevel[items].childLevels !== 0) {\n      recursive(nLevel);\n    }\n  }\n}\n/**\n * @param {Object[]} collection - Defines the array\n * @param {Object} predicate - Defines the predicate\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateArrayOrObject(collection, predicate) {\n  var result = [];\n  for (var i = 0, len = collection.length; i < len; i++) {\n    var pred = predicate(collection[i], i);\n    if (!isNullOrUndefined(pred)) {\n      result.push(pred);\n    }\n  }\n  return result;\n}\n/**\n * @param {Object[]} array - Defines the array\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateExtend(array) {\n  var obj = [];\n  for (var i = 0; i < array.length; i++) {\n    obj.push(baseExtend({}, getActualProperties(array[i]), {}, true));\n  }\n  return obj;\n}\n/**\n * @param {string} template - Defines the template\n * @returns {Function} Returns the function\n * @hidden\n */\nexport function templateCompiler(template) {\n  if (template) {\n    try {\n      if (document.querySelectorAll(template).length) {\n        return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n      } else {\n        return baseTemplateComplier(template);\n      }\n    } catch (e) {\n      return baseTemplateComplier(template);\n    }\n  }\n  return undefined;\n}\n/**\n * @param {Element} node - Defines the column\n * @param {Object} customAttributes - Defines the index\n * @returns {void}\n * @hidden\n */\nexport function setStyleAndAttributes(node, customAttributes) {\n  var copyAttr = {};\n  var literals = ['style', 'class'];\n  //Dont touch the original object - make a copy\n  baseExtend(copyAttr, customAttributes, {});\n  if ('style' in copyAttr) {\n    setStyleAttribute(node, copyAttr[literals[0]]);\n    delete copyAttr[literals[0]];\n  }\n  if ('class' in copyAttr) {\n    addClass([node], copyAttr[literals[1]]);\n    delete copyAttr[literals[1]];\n  }\n  attributes(node, copyAttr);\n}\n/**\n * @param {Object} copied - Defines the column\n * @param {Object} first - Defines the inndex\n * @param {Object} second - Defines the second object\n * @param {string[]} exclude - Defines the exclude\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function extend(copied, first, second, exclude) {\n  var moved = baseExtend(copied, first, second);\n  var values = Object.keys(moved);\n  for (var i = 0; i < values.length; i++) {\n    if (exclude && exclude.indexOf(values[i]) !== -1) {\n      delete moved[values[i]];\n    }\n  }\n  return moved;\n}\n/**\n * @param {Column[]} columnModel - Defines the column\n * @param {number} ind - Defines the inndex\n * @returns {number} - Returns the columnindex\n * @hidden\n */\nexport function setColumnIndex(columnModel, ind) {\n  if (ind === void 0) {\n    ind = 0;\n  }\n  for (var i = 0, len = columnModel.length; i < len; i++) {\n    if (columnModel[i].columns) {\n      columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind : columnModel[i].index;\n      ind++;\n      ind = setColumnIndex(columnModel[i].columns, ind);\n    } else {\n      columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind : columnModel[i].index;\n      ind++;\n    }\n  }\n  return ind;\n}\n/**\n * @param {Column[] | string[] | ColumnModel[]} columns - Defines the column\n * @param {boolean} autoWidth - Defines the autowidth\n * @param {IGrid} gObj - Defines the class name\n * @returns {Column} - Returns the columns\n * @hidden\n */\nexport function prepareColumns(columns, autoWidth, gObj) {\n  for (var c = 0, len = columns.length; c < len; c++) {\n    var column = void 0;\n    if (typeof columns[c] === 'string') {\n      column = new Column({\n        field: columns[c]\n      }, gObj);\n    } else if (!(columns[c] instanceof Column) || columns[c].columns) {\n      if (!columns[c].columns) {\n        column = new Column(columns[c], gObj);\n      } else {\n        columns[c].columns = prepareColumns(columns[c].columns, null, gObj);\n        column = new Column(columns[c], gObj);\n      }\n    } else {\n      column = columns[c];\n    }\n    if (column.type && column.type.toLowerCase() === 'checkbox') {\n      column.allowReordering = false;\n    }\n    column.headerText = isNullOrUndefined(column.headerText) ? column.foreignKeyValue || column.field || '' : column.headerText;\n    column.foreignKeyField = column.foreignKeyField || column.field;\n    column.valueAccessor = (typeof column.valueAccessor === 'string' ? getValue(column.valueAccessor, window) : column.valueAccessor) || valueAccessor;\n    column.width = autoWidth && isNullOrUndefined(column.width) ? 200 : column.width;\n    if (isNullOrUndefined(column.visible)) {\n      column.visible = true;\n    }\n    columns[c] = column;\n  }\n  return columns;\n}\n/**\n * @param {HTMLElement} popUp - Defines the popup element\n * @param {MouseEvent | TouchEvent} e - Defines the moouse event\n * @param {string} className - Defines the class name\n * @returns {void}\n * @hidden\n */\nexport function setCssInGridPopUp(popUp, e, className) {\n  var popUpSpan = popUp.querySelector('span');\n  var position = popUp.parentElement.getBoundingClientRect();\n  var targetPosition = e.target.getBoundingClientRect();\n  popUpSpan.className = className;\n  popUp.style.display = '';\n  var isBottomTail = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY : e.clientY) > popUp.offsetHeight + 10;\n  popUp.style.top = targetPosition.top - position.top + (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px'; //10px for tail element\n  popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';\n  if (isBottomTail) {\n    popUp.querySelector('.e-downtail').style.display = '';\n    popUp.querySelector('.e-uptail').style.display = 'none';\n  } else {\n    popUp.querySelector('.e-downtail').style.display = 'none';\n    popUp.querySelector('.e-uptail').style.display = '';\n  }\n}\n/**\n * @param {HTMLElement} popup - Defines the popup element\n * @param {MouseEvent | TouchEvent} e  - Defines the mouse event\n * @param {Object} targetPosition - Defines the target position\n * @param {number} targetPosition.top - Defines the top position\n * @param {number} targetPosition.left  - Defines the left position\n * @param {number} targetPosition.right  - Defines the right position\n * @param {number} left - Defines the left position\n * @returns {number} Returns the popup left position\n * @hidden\n */\nfunction getPopupLeftPosition(popup, e, targetPosition, left) {\n  var width = popup.offsetWidth / 2;\n  var x = getPosition(e).x;\n  if (x - targetPosition.left < width) {\n    return targetPosition.left - left;\n  } else if (targetPosition.right - x < width) {\n    return targetPosition.right - left - width * 2;\n  } else {\n    return x - left - width;\n  }\n}\n/**\n * @param {Object} obj - Defines the object\n * @returns {Object} Returns the Properties\n * @hidden\n */\nexport function getActualProperties(obj) {\n  if (obj instanceof ChildProperty) {\n    return getValue('properties', obj);\n  } else {\n    return obj;\n  }\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the string selector\n * @param {boolean} isID - Defines the isID\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function parentsUntil(elem, selector, isID) {\n  var parent = elem;\n  while (parent) {\n    if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n      break;\n    }\n    parent = parent.parentElement;\n  }\n  return parent;\n}\n/**\n * @param {Element} element - Defines the element\n * @param {Element} elements - Defines the element\n * @returns {number} Returns the element index\n * @hidden\n */\nexport function getElementIndex(element, elements) {\n  var index = -1;\n  for (var i = 0, len = elements.length; i < len; i++) {\n    if (elements[i].isEqualNode(element)) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n}\n/**\n * @param {Object} value - Defines the value\n * @param {Object} collection - defines the collection\n * @returns {number} Returns the array\n * @hidden\n */\nexport function inArray(value, collection) {\n  for (var i = 0, len = collection.length; i < len; i++) {\n    if (collection[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n/**\n * @param {Object} collection - Defines the collection\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getActualPropFromColl(collection) {\n  var coll = [];\n  for (var i = 0, len = collection.length; i < len; i++) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (collection[i].hasOwnProperty('properties')) {\n      coll.push(collection[i].properties);\n    } else {\n      coll.push(collection[i]);\n    }\n  }\n  return coll;\n}\n/**\n * @param {Element} target - Defines the target element\n * @param {string} selector - Defines the selector\n * @returns {void}\n * @hidden\n */\nexport function removeElement(target, selector) {\n  var elements = [].slice.call(target.querySelectorAll(selector));\n  for (var i = 0; i < elements.length; i++) {\n    remove(elements[i]);\n  }\n}\n/**\n * @param {MouseEvent | TouchEvent} e Defines the mouse event\n * @returns {IPosition} Returns the position\n * @hidden\n */\nexport function getPosition(e) {\n  var position = {};\n  position.x = isNullOrUndefined(e.clientX) ? e.changedTouches[0].clientX : e.clientX;\n  position.y = isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY : e.clientY;\n  return position;\n}\nvar uid = 0;\n/**\n * @param {string} prefix - Defines the prefix string\n * @returns {string} Returns the uid\n * @hidden\n */\nexport function getUid(prefix) {\n  return prefix + uid++;\n}\n/**\n * @param {Element | DocumentFragment} elem - Defines the element\n * @param {Element[] | NodeList} children - Defines the Element\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function appendChildren(elem, children) {\n  for (var i = 0, len = children.length; i < len; i++) {\n    if (len === children.length) {\n      elem.appendChild(children[i]);\n    } else {\n      elem.appendChild(children[0]);\n    }\n  }\n  return elem;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the selector\n * @param {boolean} isID - Defines isID\n * @returns {Element} Return the element\n * @hidden\n */\nexport function parents(elem, selector, isID) {\n  var parent = elem;\n  var parents = [];\n  while (parent) {\n    if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\n/**\n * @param {AggregateType | string} type - Defines the type\n * @param {Object} data - Defines the data\n * @param {AggregateColumnModel} column - Defines the column\n * @param {Object} context - Defines the context\n * @returns {Object} Returns the calculated aggragate\n * @hidden\n */\nexport function calculateAggregate(type, data, column, context) {\n  if (type === 'Custom') {\n    var temp = column.customAggregate;\n    if (typeof temp === 'string') {\n      temp = getValue(temp, window);\n    }\n    return temp ? temp.call(context, data, column) : '';\n  }\n  return column.field in data || data instanceof Array ? DataUtil.aggregates[type.toLowerCase()](data, column.field) : null;\n}\n/** @hidden */\nvar scrollWidth = null;\n/** @hidden\n * @returns {number} - Returns the scrollbarwidth\n */\nexport function getScrollBarWidth() {\n  if (scrollWidth !== null) {\n    return scrollWidth;\n  }\n  var divNode = document.createElement('div');\n  var value = 0;\n  divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n  document.body.appendChild(divNode);\n  value = divNode.offsetWidth - divNode.clientWidth | 0;\n  document.body.removeChild(divNode);\n  return scrollWidth = value;\n}\n/** @hidden */\nvar rowHeight;\n/**\n * @param {HTMLElement} element - Defines the element\n * @returns {number} Returns the roww height\n * @hidden\n */\nexport function getRowHeight(element) {\n  if (rowHeight !== undefined) {\n    return rowHeight;\n  }\n  var table = createElement('table', {\n    className: literals.table,\n    styles: 'visibility: hidden'\n  });\n  table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n  element.appendChild(table);\n  var rect = table.querySelector('td').getBoundingClientRect();\n  element.removeChild(table);\n  rowHeight = Math.ceil(rect.height);\n  return rowHeight;\n}\n/** @hidden */\nvar actualRowHeight;\n/**\n * @param {HTMLElement} element - Defines the HTMl element\n * @returns {number} Returns the row height\n * @hidden\n */\nexport function getActualRowHeight(element) {\n  if (actualRowHeight !== undefined) {\n    return rowHeight;\n  }\n  var table = createElement('table', {\n    className: literals.table,\n    styles: 'visibility: hidden'\n  });\n  table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n  element.appendChild(table);\n  var rect = table.querySelector('tr').getBoundingClientRect();\n  element.removeChild(table);\n  return rect.height;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {boolean} - Returns is complex field\n * @hidden\n */\nexport function isComplexField(field) {\n  return field.split('.').length > 1;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the get complex field ID\n * @hidden\n */\nexport function getComplexFieldID(field) {\n  if (field === void 0) {\n    field = '';\n  }\n  return field.replace(/\\./g, '___');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the set complex field ID\n * @hidden\n */\nexport function setComplexFieldID(field) {\n  if (field === void 0) {\n    field = '';\n  }\n  return field.replace(/___/g, '.');\n}\n/**\n * @param {Column} col - Defines the column\n * @param {string} type - Defines the type\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nexport function isEditable(col, type, elem) {\n  var row = parentsUntil(elem, literals.row);\n  var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');\n  if (type === 'beginEdit' && isOldRow) {\n    if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {\n      return false;\n    }\n    return true;\n  } else if (type === 'add' && col.isIdentity) {\n    return false;\n  } else {\n    if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {\n      return false;\n    }\n    return true;\n  }\n}\n/**\n * @param {IGrid} inst - Defines the IGrid\n * @returns {boolean} Returns is action prevent in boolean\n * @hidden\n */\nexport function isActionPrevent(inst) {\n  var dlg = select('#' + inst.element.id + 'EditConfirm', inst.element);\n  return inst.editSettings.mode === 'Batch' && selectAll('.e-updatedtd', inst.element).length && inst.editSettings.showConfirmDialog && (dlg ? dlg.classList.contains('e-popup-close') : true);\n}\n/**\n * @param {any} elem - Defines the element\n * @param {boolean} action - Defines the boolean for action\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function wrap(elem, action) {\n  var clName = 'e-wrap';\n  elem = elem instanceof Array ? elem : [elem];\n  for (var i = 0; i < elem.length; i++) {\n    if (action) {\n      elem[i].classList.add(clName);\n    } else {\n      elem[i].classList.remove(clName);\n    }\n  }\n}\n/**\n * @param {ServiceLocator} serviceLocator - Defines the service locator\n * @param {Column} column  - Defines the column\n * @returns {void}\n * @hidden\n */\nexport function setFormatter(serviceLocator, column) {\n  var fmtr = serviceLocator.getService('valueFormatter');\n  var format = 'format';\n  var args;\n  if (column.type === 'date' || column.type === 'datetime') {\n    args = {\n      type: column.type,\n      skeleton: column.format\n    };\n    if (typeof column.format === 'string' && column.format !== 'yMd') {\n      args[format] = column.format;\n    }\n  }\n  switch (column.type) {\n    case 'date':\n      column.setFormatter(fmtr.getFormatFunction(args));\n      column.setParser(fmtr.getParserFunction(args));\n      break;\n    case 'datetime':\n      column.setFormatter(fmtr.getFormatFunction(args));\n      column.setParser(fmtr.getParserFunction(args));\n      break;\n    case 'number':\n      column.setFormatter(fmtr.getFormatFunction({\n        format: column.format\n      }));\n      column.setParser(fmtr.getParserFunction({\n        format: column.format\n      }));\n      break;\n  }\n}\n/**\n * @param {Element} cells - Defines the cell element\n * @param {boolean} add - Defines the add\n * @param {string} args - Defines the args\n * @returns {void}\n * @hidden\n */\nexport function addRemoveActiveClasses(cells, add) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  for (var i = 0, len = cells.length; i < len; i++) {\n    if (add) {\n      classList(cells[i], args.slice(), []);\n      cells[i].setAttribute('aria-selected', 'true');\n    } else {\n      classList(cells[i], [], args.slice());\n      cells[i].removeAttribute('aria-selected');\n    }\n  }\n}\n/**\n * @param {string} result - Defines th string\n * @returns {string} Returns the distinct staing values\n * @hidden\n */\nexport function distinctStringValues(result) {\n  var temp = {};\n  var res = [];\n  for (var i = 0; i < result.length; i++) {\n    if (!(result[i] in temp)) {\n      res.push(result[i].toString());\n      temp[result[i]] = 1;\n    }\n  }\n  return res;\n}\n/**\n * @param {Element} target - Defines the target\n * @param {Dialog} dialogObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nexport function getFilterMenuPostion(target, dialogObj) {\n  var elementVisible = dialogObj.element.style.display;\n  dialogObj.element.style.display = 'block';\n  var dlgWidth = dialogObj.width;\n  var newpos = calculateRelativeBasedPosition(target, dialogObj.element);\n  dialogObj.element.style.display = elementVisible;\n  dialogObj.element.style.top = newpos.top + target.getBoundingClientRect().height - 5 + 'px';\n  var leftPos = newpos.left - dlgWidth + target.clientWidth;\n  if (leftPos < 1) {\n    dialogObj.element.style.left = dlgWidth + leftPos - 16 + 'px'; // right calculation\n  } else {\n    dialogObj.element.style.left = leftPos + -4 + 'px';\n  }\n}\n/**\n * @param {Object} args - Defines the args\n * @param {Popup} args.popup - Defines the args for popup\n * @param {Dialog} dialogObj - Defines the dialog obj\n * @returns {void}\n * @hidden\n */\nexport function getZIndexCalcualtion(args, dialogObj) {\n  args.popup.element.style.zIndex = (dialogObj.zIndex + 1).toString();\n}\n/**\n * @param {Element} elem - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function toogleCheckbox(elem) {\n  var span = elem.querySelector('.e-frame');\n  var input = span.previousSibling;\n  if (span.classList.contains('e-check')) {\n    input.checked = false;\n    classList(span, ['e-uncheck'], ['e-check']);\n  } else {\n    input.checked = true;\n    classList(span, ['e-check'], ['e-uncheck']);\n  }\n}\n/**\n * @param {HTMLInputElement} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function setChecked(elem, checked) {\n  elem.checked = checked;\n}\n/**\n * @param {string} uid - Defines the string\n * @param {Element} elem - Defines the Element\n * @param {string} className - Defines the classname\n * @returns {Element} Returns the box wrap\n * @hidden\n */\nexport function createCboxWithWrap(uid, elem, className) {\n  var div = createElement('div', {\n    className: className\n  });\n  div.appendChild(elem);\n  div.setAttribute('uid', uid);\n  return div;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function removeAddCboxClasses(elem, checked) {\n  removeClass([elem], ['e-check', 'e-stop', 'e-uncheck']);\n  if (checked) {\n    elem.classList.add('e-check');\n  } else {\n    elem.classList.add('e-uncheck');\n  }\n}\n/**\n * Refresh the Row model's foreign data.\n *\n * @param {IRow<Column>} row - Grid Row model object.\n * @param {Column[]} columns - Foreign columns array.\n * @param {Object} data - Updated Row data.\n * @returns {void}\n * @hidden\n */\nexport function refreshForeignData(row, columns, data) {\n  for (var i = 0; i < columns.length; i++) {\n    setValue(columns[i].field, getForeignData(columns[i], data), row.foreignKeyData);\n  }\n  var cells = row.cells;\n  for (var i = 0; i < cells.length; i++) {\n    if (cells[i].isForeignKey) {\n      setValue('foreignKeyData', getValue(cells[i].column.field, row.foreignKeyData), cells[i]);\n    }\n  }\n}\n/**\n * Get the foreign data for the corresponding cell value.\n *\n * @param {Column} column - Foreign Key column\n * @param {Object} data - Row data.\n * @param {string | number} lValue - cell value.\n * @param {Object} foreignKeyData - foreign data source.\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getForeignData(column, data, lValue, foreignKeyData) {\n  var fField = column.foreignKeyField;\n  var key = !isNullOrUndefined(lValue) ? lValue : valueAccessor(column.field, data, column);\n  key = isNullOrUndefined(key) ? '' : key;\n  var query = new Query();\n  var fdata = foreignKeyData || (column.dataSource instanceof DataManager && column.dataSource.dataSource.json.length ? column.dataSource.dataSource.json : column.columnData);\n  if (key.getDay) {\n    query.where(getDatePredicate({\n      field: fField,\n      operator: 'equal',\n      value: key,\n      matchCase: false\n    }));\n  } else {\n    query.where(fField, '==', key, false);\n  }\n  return new DataManager(fdata).executeLocal(query);\n}\n/**\n * To use to get the column's object by the foreign key value.\n *\n * @param {string} foreignKeyValue - Defines ForeignKeyValue.\n * @param {Column[]} columns - Array of column object.\n * @returns {Column} Returns the element\n * @hidden\n */\nexport function getColumnByForeignKeyValue(foreignKeyValue, columns) {\n  var column;\n  return columns.some(function (col) {\n    column = col;\n    return col.foreignKeyValue === foreignKeyValue;\n  }) && column;\n}\n/**\n * @param {PredicateModel} filterObject - Defines the filterObject\n * @param {string} type - Defines the type\n * @returns {Predicate} Returns the Predicate\n * @hidden\n */\nexport function getDatePredicate(filterObject, type) {\n  var datePredicate;\n  var prevDate;\n  var nextDate;\n  var prevObj = baseExtend({}, getActualProperties(filterObject));\n  var nextObj = baseExtend({}, getActualProperties(filterObject));\n  if (isNullOrUndefined(filterObject.value)) {\n    datePredicate = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n    return datePredicate;\n  }\n  var value = new Date(filterObject.value);\n  if (filterObject.operator === 'equal' || filterObject.operator === 'notequal') {\n    if (type === 'datetime') {\n      prevDate = new Date(value.setSeconds(value.getSeconds() - 1));\n      nextDate = new Date(value.setSeconds(value.getSeconds() + 2));\n      filterObject.value = new Date(value.setSeconds(nextDate.getSeconds() - 1));\n    } else {\n      prevDate = new Date(value.setHours(0) - 1);\n      nextDate = new Date(value.setHours(24));\n    }\n    prevObj.value = prevDate;\n    nextObj.value = nextDate;\n    if (filterObject.operator === 'equal') {\n      prevObj.operator = 'greaterthan';\n      nextObj.operator = 'lessthan';\n    } else if (filterObject.operator === 'notequal') {\n      prevObj.operator = 'lessthanorequal';\n      nextObj.operator = 'greaterthanorequal';\n    }\n    var predicateSt = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n    var predicateEnd = new Predicate(nextObj.field, nextObj.operator, nextObj.value, false);\n    datePredicate = filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);\n  } else {\n    if (type === 'date' && (filterObject.operator === 'lessthanorequal' || filterObject.operator === 'greaterthan')) {\n      prevObj.value = new Date(value.setHours(24) - 1);\n    }\n    if (typeof prevObj.value === 'string') {\n      prevObj.value = new Date(prevObj.value);\n    }\n    var predicates = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n    datePredicate = predicates;\n  }\n  if (filterObject.setProperties) {\n    filterObject.setProperties({\n      ejpredicate: datePredicate\n    }, true);\n  } else {\n    filterObject.ejpredicate = datePredicate;\n  }\n  return datePredicate;\n}\n/**\n * @param {Element} ele - Defines the element\n * @param {number} frzCols - Defines the frozen columns\n * @param {IGrid} gObj - Defines the IGrid\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function renderMovable(ele, frzCols, gObj) {\n  frzCols = frzCols && gObj && gObj.isRowDragable() ? frzCols + 1 : frzCols;\n  var mEle = ele.cloneNode(true);\n  for (var i = 0; i < frzCols; i++) {\n    mEle.removeChild(mEle.children[0]);\n  }\n  for (var i = frzCols, len = ele.childElementCount; i < len; i++) {\n    ele.removeChild(ele.children[ele.childElementCount - 1]);\n  }\n  return mEle;\n}\n/**\n * @param {IGrid} grid - Defines the IGrid\n * @returns {boolean} Returns true if group adaptive is true\n * @hidden\n */\nexport function isGroupAdaptive(grid) {\n  return grid.enableVirtualization && grid.groupSettings.columns.length > 0 && grid.isVirtualAdaptive;\n}\n/**\n * @param {string} field - Defines the Field\n * @param {Object} object - Defines the objec\n * @returns {any} Returns the object\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObject(field, object) {\n  if (field === void 0) {\n    field = '';\n  }\n  if (field) {\n    var value = object;\n    var splits = field.split('.');\n    for (var i = 0; i < splits.length && !isNullOrUndefined(value); i++) {\n      value = value[splits[i]];\n    }\n    return value;\n  }\n}\n/**\n * @param {string | Object} format - defines the format\n * @param {string} colType - Defines the coltype\n * @returns {string} Returns the custom Data format\n * @hidden\n */\nexport function getCustomDateFormat(format, colType) {\n  var intl = new Internationalization();\n  var formatvalue;\n  var formatter = 'format';\n  var type = 'type';\n  if (colType === 'date') {\n    formatvalue = typeof format === 'object' ? intl.getDatePattern({\n      type: format[type] ? format[type] : 'date',\n      format: format[formatter]\n    }, false) : intl.getDatePattern({\n      type: 'dateTime',\n      skeleton: format\n    }, false);\n  } else {\n    formatvalue = typeof format === 'object' ? intl.getDatePattern({\n      type: format[type] ? format[type] : 'dateTime',\n      format: format[formatter]\n    }, false) : intl.getDatePattern({\n      type: 'dateTime',\n      skeleton: format\n    }, false);\n  }\n  return formatvalue;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getExpandedState(gObj, hierarchyPrintMode) {\n  var rows = gObj.getRowsObject();\n  var obj = {};\n  for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n    var row = rows_1[_i];\n    if (row.isExpand && !row.isDetailRow) {\n      var index = gObj.allowPaging && gObj.printMode === 'AllPages' ? row.index + gObj.pageSettings.currentPage * gObj.pageSettings.pageSize - gObj.pageSettings.pageSize : row.index;\n      obj[index] = {};\n      obj[index].isExpand = true;\n      obj[index].gridModel = getPrintGridModel(row.childGrid, hierarchyPrintMode);\n      obj[index].gridModel.query = gObj.childGrid.query;\n    }\n  }\n  return obj;\n}\n/**\n * @param {IGrid} gObj - Defines the grid objct\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {IGrid} Returns the IGrid\n * @hidden\n */\nexport function getPrintGridModel(gObj, hierarchyPrintMode) {\n  if (hierarchyPrintMode === void 0) {\n    hierarchyPrintMode = 'Expanded';\n  }\n  var printGridModel = {};\n  if (!gObj) {\n    return printGridModel;\n  }\n  var isFrozen = gObj.isFrozenGrid() && !gObj.getFrozenColumns();\n  for (var _i = 0, _a = Print.printGridProp; _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (key === 'columns') {\n      printGridModel[key] = getActualPropFromColl(isFrozen ? gObj.getColumns() : gObj[key]);\n    } else if (key === 'allowPaging') {\n      printGridModel[key] = gObj.printMode === 'CurrentPage';\n    } else {\n      printGridModel[key] = getActualProperties(gObj[key]);\n    }\n  }\n  printGridModel['enableHover'] = false;\n  if (gObj.childGrid && hierarchyPrintMode !== 'None') {\n    printGridModel.expandedRows = getExpandedState(gObj, hierarchyPrintMode);\n  }\n  return printGridModel;\n}\n/**\n * @param {Object} copied - Defines the copied object\n * @param {Object} first - Defines the first object\n * @param {Object} second - Defines the second object\n * @param {boolean} deep - Defines the deep\n * @returns {Object} Returns the extended object\n * @hidden\n */\nexport function extendObjWithFn(copied, first, second, deep) {\n  var res = copied || {};\n  var len = arguments.length;\n  if (deep) {\n    len = len - 1;\n  }\n  for (var i = 1; i < len; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    if (!arguments[i]) {\n      continue;\n    }\n    // eslint-disable-next-line prefer-rest-params\n    var obj1 = arguments[i];\n    var keys = Object.keys(Object.getPrototypeOf(obj1)).length ? Object.keys(obj1).concat(getPrototypesOfObj(obj1)) : Object.keys(obj1);\n    for (var i_1 = 0; i_1 < keys.length; i_1++) {\n      var source = res[keys[i_1]];\n      var cpy = obj1[keys[i_1]];\n      var cln = void 0;\n      if (deep && (isObject(cpy) || Array.isArray(cpy))) {\n        if (isObject(cpy)) {\n          cln = source ? source : {};\n          res[keys[i_1]] = baseExtend({}, cln, cpy, deep);\n        } else {\n          cln = source ? source : [];\n          res[keys[i_1]] = baseExtend([], cln, cpy, deep);\n        }\n      } else {\n        res[keys[i_1]] = cpy;\n      }\n    }\n  }\n  return res;\n}\n/**\n * @param {Object} obj - Defines the obj\n * @returns {string[]} Returns the string\n * @hidden\n */\nfunction getPrototypesOfObj(obj) {\n  var keys = [];\n  while (Object.getPrototypeOf(obj) && Object.keys(Object.getPrototypeOf(obj)).length) {\n    keys = keys.concat(Object.keys(Object.getPrototypeOf(obj)));\n    obj = Object.getPrototypeOf(obj);\n  }\n  return keys;\n}\n/**\n * @param {Column[]} column - Defines the Column\n * @returns {number} Returns the column Depth\n * @hidden\n */\nexport function measureColumnDepth(column) {\n  var max = 0;\n  for (var i = 0; i < column.length; i++) {\n    var depth = checkDepth(column[i], 0);\n    if (max < depth) {\n      max = depth;\n    }\n  }\n  return max + 1;\n}\n/**\n * @param {Column} col - Defines the Column\n * @param {number} index - Defines the index\n * @returns {number} Returns the depth\n * @hidden\n */\nexport function checkDepth(col, index) {\n  var max = index;\n  var indices = [];\n  if (col.columns) {\n    index++;\n    for (var i = 0; i < col.columns.length; i++) {\n      indices[i] = checkDepth(col.columns[i], index);\n    }\n    for (var j = 0; j < indices.length; j++) {\n      if (max < indices[j]) {\n        max = indices[j];\n      }\n    }\n    index = max;\n  }\n  return index;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {PredicateModel[]} filteredCols - Defines the PredicateModel\n * @returns {void}\n * @hidden\n */\nexport function refreshFilteredColsUid(gObj, filteredCols) {\n  for (var i = 0; i < filteredCols.length; i++) {\n    filteredCols[i].uid = filteredCols[i].isForeignKey ? getColumnByForeignKeyValue(filteredCols[i].field, gObj.getForeignKeyColumns()).uid : gObj.enableColumnVirtualization ? getColumnModelByFieldName(gObj, filteredCols[i].field).uid : gObj.getColumnByField(filteredCols[i].field).uid;\n  }\n}\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Global;\n(function (Global) {\n  // eslint-disable-next-line prefer-const\n  Global.timer = null;\n})(Global || (Global = {}));\n/**\n * @param {Element} element - Defines the element\n * @returns {Object} Returns the transform values\n * @hidden\n */\nexport function getTransformValues(element) {\n  var style = document.defaultView.getComputedStyle(element, null);\n  var transformV = style.getPropertyValue('transform');\n  var replacedTv = transformV.replace(/,/g, '');\n  var translateX = parseFloat(replacedTv.split(' ')[4]);\n  var translateY = parseFloat(replacedTv.split(' ')[5]);\n  return {\n    width: translateX,\n    height: translateY\n  };\n}\n/**\n * @param {Element} rootElement - Defines the root Element\n * @param {Element} element - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function applyBiggerTheme(rootElement, element) {\n  if (rootElement.classList.contains('e-bigger')) {\n    element.classList.add('e-bigger');\n  }\n}\n/**\n * @param {HTMLElement} mTD - Defines the movable TD\n * @param {HTMLElement} fTD  - Defines the Frozen TD\n * @returns {void}\n * @hidden\n */\nexport function alignFrozenEditForm(mTD, fTD) {\n  if (mTD && fTD) {\n    var mHeight = closest(mTD, '.' + literals.row).getBoundingClientRect().height;\n    var fHeight = closest(fTD, '.' + literals.row).getBoundingClientRect().height;\n    if (mHeight > fHeight) {\n      fTD.style.height = mHeight + 'px';\n    } else {\n      mTD.style.height = fHeight + 'px';\n    }\n  }\n}\n/**\n * @param {Element} row - Defines row element\n * @param {IGrid} gridObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function ensureLastRow(row, gridObj) {\n  var cntOffset = gridObj.getContent().firstElementChild.offsetHeight;\n  return row && row.getBoundingClientRect().top > cntOffset;\n}\n/**\n * @param {Element} row - Defines row element\n * @param {number} rowTop - Defines row top number\n * @returns {boolean} Returns first row is true\n * @hidden\n */\nexport function ensureFirstRow(row, rowTop) {\n  return row && row.getBoundingClientRect().top < rowTop;\n}\n/**\n * @param {number} index - Defines index\n * @param {IGrid} gObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function isRowEnteredInGrid(index, gObj) {\n  var rowHeight = gObj.getRowHeight();\n  var startIndex = gObj.getContent().firstElementChild.scrollTop / rowHeight;\n  var endIndex = startIndex + gObj.getContent().firstElementChild.offsetHeight / rowHeight;\n  return index < endIndex && index > startIndex;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} data - Defines the query\n * @returns {number} Returns the edited data index\n * @hidden\n */\nexport function getEditedDataIndex(gObj, data) {\n  var keyField = gObj.getPrimaryKeyFieldNames()[0];\n  var dataIndex;\n  gObj.getCurrentViewRecords().filter(function (e, index) {\n    if (e[keyField] === data[keyField]) {\n      dataIndex = index;\n    }\n  });\n  return dataIndex;\n}\n/**\n * @param {Object} args - Defines the argument\n * @param {Query} query - Defines the query\n * @returns {FilterStateObj} Returns the filter state object\n * @hidden\n */\nexport function eventPromise(args, query) {\n  var state = getStateEventArgument(query);\n  var def = new Deferred();\n  state.dataSource = def.resolve;\n  state.action = args;\n  return {\n    state: state,\n    deffered: def\n  };\n}\n/**\n * @param {Query} query - Defines the query\n * @returns {Object} Returns the state event argument\n * @hidden\n */\nexport function getStateEventArgument(query) {\n  var adaptr = new UrlAdaptor();\n  var dm = new DataManager({\n    url: '',\n    adaptor: new UrlAdaptor()\n  });\n  var state = adaptr.processQuery(dm, query);\n  var data = JSON.parse(state.data);\n  return data;\n}\n/**\n * @param {IGrid} gObj - Defines the Igrid\n * @returns {boolean} Returns the ispercentageWidth\n * @hidden\n */\nexport function ispercentageWidth(gObj) {\n  var columns = gObj.getVisibleColumns();\n  var percentageCol = 0;\n  var undefinedWidthCol = 0;\n  for (var i = 0; i < columns.length; i++) {\n    if (isUndefined(columns[i].width)) {\n      undefinedWidthCol++;\n    } else if (columns[i].width.toString().indexOf('%') !== -1) {\n      percentageCol++;\n    }\n  }\n  return (gObj.width === 'auto' || typeof gObj.width === 'string' && gObj.width.indexOf('%') !== -1) && !gObj.groupSettings.showGroupedColumn && gObj.groupSettings.columns.length && percentageCol && !undefinedWidthCol;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {Row<Column>[]} rows - Defines the row\n * @param {HTMLTableRowElement[]} rowElms - Row elements\n * @param {number} index - Row index\n * @returns {void}\n * @hidden\n */\nexport function resetRowIndex(gObj, rows, rowElms, index) {\n  var startIndex = index ? index : 0;\n  for (var i = 0; i < rows.length; i++) {\n    if (rows[i].isDataRow) {\n      rows[i].index = startIndex;\n      rows[i].isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n      rowElms[i].setAttribute(literals.ariaRowIndex, startIndex.toString());\n      if (rows[i].isAltRow) {\n        rowElms[i].classList.add('e-altrow');\n      } else {\n        rowElms[i].classList.remove('e-altrow');\n      }\n      for (var j = 0; j < rowElms[i].cells.length; j++) {\n        rowElms[i].cells[j].setAttribute('index', startIndex.toString());\n      }\n      startIndex++;\n    }\n  }\n  if (!rows.length) {\n    gObj.renderModule.emptyRow(true);\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} changes - Defines the changes\n * @param {string} type - Defines the type\n * @param {string} keyField - Defines the keyfield\n * @returns {void}\n * @hidden\n */\nexport function compareChanges(gObj, changes, type, keyField) {\n  var newArray = gObj.dataToBeUpdated[type].concat(changes[type]).reduce(function (r, o) {\n    r[o[keyField]] = r[o[keyField]] === undefined ? o : Object.assign(r[o[keyField]], o);\n    return r;\n  }, {});\n  gObj.dataToBeUpdated[type] = Object.keys(newArray).map(function (k) {\n    return newArray[k];\n  });\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function setRowElements(gObj) {\n  if (gObj.isFrozenGrid()) {\n    gObj.contentModule.rowElements = [].slice.call(gObj.element.querySelectorAll('.e-movableheader .e-row, .e-movablecontent .e-row'));\n    var cls = gObj.getFrozenMode() === literals.leftRight ? '.e-frozen-left-header .e-row, .e-frozen-left-content .e-row' : '.e-frozenheader .e-row, .e-frozencontent .e-row';\n    gObj.contentModule.freezeRowElements = [].slice.call(gObj.element.querySelectorAll(cls));\n    if (gObj.getFrozenMode() === literals.leftRight) {\n      gObj.contentModule.frozenRightRowElements = [].slice.call(gObj.element.querySelectorAll('.e-frozen-right-header .e-row, .e-frozen-right-content .e-row'));\n    }\n  } else {\n    gObj.contentModule.rowElements = [].slice.call(gObj.element.querySelectorAll('.e-row:not(.e-addedrow)'));\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Cell<Column>} cells - Defines the callback function\n * @param {freezeTable} tableName - Defines the row\n * @returns {Cell<Column>[]} Returns the cell\n * @hidden\n */\nexport function splitFrozenRowObjectCells(gObj, cells, tableName) {\n  var left = gObj.getFrozenLeftCount();\n  var movable = gObj.getMovableColumnsCount();\n  var right = gObj.getFrozenRightColumnsCount();\n  var frozenMode = gObj.getFrozenMode();\n  var drag = gObj.isRowDragable() ? 1 : 0;\n  var rightIndex = frozenMode === 'Right' ? left + movable : left + movable + drag;\n  var mvblIndex = frozenMode === 'Right' ? left : left + drag;\n  var mvblEndIdx = frozenMode === 'Right' ? cells.length - right - drag : right ? cells.length - right : cells.length;\n  if (tableName === literals.frozenLeft) {\n    cells = cells.slice(0, left ? left + drag : cells.length);\n  } else if (tableName === literals.frozenRight) {\n    cells = cells.slice(rightIndex, cells.length);\n  } else if (tableName === 'movable') {\n    cells = cells.slice(mvblIndex, mvblEndIdx);\n  }\n  return cells;\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function gridActionHandler(gObj, callBack, rows, force, rowObj) {\n  if (rows[0].length || force) {\n    if (rowObj) {\n      callBack(literals.frozenLeft, rows[0], rowObj[0]);\n    } else {\n      callBack(literals.frozenLeft, rows[0]);\n    }\n  }\n  if (gObj.isFrozenGrid() && (rows[1].length || force)) {\n    if (rowObj) {\n      callBack('movable', rows[1], rowObj[1]);\n    } else {\n      callBack('movable', rows[1]);\n    }\n  }\n  if ((gObj.getFrozenMode() === literals.leftRight || gObj.getFrozenMode() === 'Right') && (rows[2].length || force)) {\n    if (rowObj) {\n      callBack(literals.frozenRight, rows[2], rowObj[2]);\n    } else {\n      callBack(literals.frozenRight, rows[2]);\n    }\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @returns {Row<Column>} Returns the row\n * @hidden\n */\nexport function getGridRowObjects(gObj) {\n  return [gObj.getFrozenMode() !== 'Right' ? gObj.getRowsObject() : [], gObj.getMovableRowsObject(), gObj.getFrozenRightRowsObject()];\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getGridRowElements(gObj) {\n  return [gObj.getFrozenMode() !== 'Right' ? gObj.getAllDataRows(true) : [], gObj.getAllMovableDataRows(true), gObj.getAllFrozenRightDataRows(true)];\n}\n/**\n * @param {Element} row - Defines the row\n * @param {number} start - Defines the start index\n * @param {number} end - Defines the end index\n * @returns {void}\n * @hidden\n */\nexport function sliceElements(row, start, end) {\n  var cells = row.children;\n  var len = cells.length;\n  var k = 0;\n  for (var i = 0; i < len; i++, k++) {\n    if (i >= start && i < end) {\n      continue;\n    }\n    row.removeChild(row.children[k]);\n    k--;\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid Object\n * @param {Column} col - Defines the column\n * @param {number} rowIndex - Defines the rowindex\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getCellsByTableName(gObj, col, rowIndex) {\n  if (col.getFreezeTableName() === 'movable') {\n    return [].slice.call(gObj.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n  } else if (col.getFreezeTableName() === literals.frozenRight) {\n    return [].slice.call(gObj.getFrozenRightDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n  } else {\n    return [].slice.call(gObj.getDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the column\n * @param {Column} col - Defines the index\n * @param {number} rowIndex - Defines the rules\n * @param {number} index - Defines the movable column rules\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getCellByColAndRowIndex(gObj, col, rowIndex, index) {\n  var left = gObj.getFrozenLeftCount();\n  var movable = gObj.getMovableColumnsCount();\n  index = col.getFreezeTableName() === 'movable' ? index - left : col.getFreezeTableName() === literals.frozenRight ? index - (left + movable) : index;\n  return getCellsByTableName(gObj, col, rowIndex)[index];\n}\n/**\n * @param {Column} col - Defines the column\n * @param {number} index - Defines the index\n * @param {Object} rules - Defines the rules\n * @param {Object} mRules - Defines the movable column rules\n * @param {Object} frRules - Defines the Frozen rules\n * @param {number} len - Defines the length\n * @param {boolean} isCustom - Defines custom form validation\n * @returns {void}\n * @hidden\n */\nexport function setValidationRuels(col, index, rules, mRules, frRules, len, isCustom) {\n  if (isCustom) {\n    rules[getComplexFieldID(col.field)] = col.validationRules;\n  } else {\n    if (col.getFreezeTableName() === literals.frozenLeft || !index && col.getFreezeTableName() === literals.frozenRight || len === 1) {\n      rules[getComplexFieldID(col.field)] = col.validationRules;\n    } else if (col.getFreezeTableName() === 'movable' || !col.getFreezeTableName()) {\n      mRules[getComplexFieldID(col.field)] = col.validationRules;\n    } else if (col.getFreezeTableName() === literals.frozenRight) {\n      frRules[getComplexFieldID(col.field)] = col.validationRules;\n    }\n  }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getMovableTbody(gObj) {\n  var tbody;\n  if (gObj.isFrozenGrid()) {\n    tbody = gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top' ? gObj.getMovableHeaderTbody() : gObj.getMovableContentTbody();\n  }\n  return tbody;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getFrozenRightTbody(gObj) {\n  var tbody;\n  if (gObj.getFrozenMode() === literals.leftRight) {\n    tbody = gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top' ? gObj.getFrozenRightHeaderTbody() : gObj.getFrozenRightContentTbody();\n  }\n  return tbody;\n}\n/**\n * @param {Element} tbody - Table body\n * @param {Element} mTbody - Movanle table body\n * @param {Element} frTbody - Frozen right table body\n * @param {Element[]} tr - Table rows\n * @param {Element[]} mTr - Movable table rows\n * @param {Element[]} frTr - Frozen right table rows\n * @param {Function} callBack - Callback function\n * @returns {void}\n * @hidden\n */\nexport function setRowsInTbody(tbody, mTbody, frTbody, tr, mTr, frTr, callBack) {\n  if (tbody && tr) {\n    callBack(tbody, tr);\n  }\n  if (mTbody && mTr) {\n    callBack(mTbody, mTr);\n  }\n  if (frTbody && frTr) {\n    callBack(frTbody, frTr);\n  }\n}\n/**\n * @param {string} numberFormat - Format\n * @param {string} type - Value type\n * @param {boolean} isExcel - Boolean property\n * @returns {string} returns formated value\n * @hidden\n */\nexport function getNumberFormat(numberFormat, type, isExcel) {\n  var format;\n  var intl = new Internationalization();\n  if (type === 'number') {\n    try {\n      format = intl.getNumberPattern({\n        format: numberFormat,\n        currency: this.currency,\n        useGrouping: true\n      }, true);\n    } catch (error) {\n      format = numberFormat;\n    }\n  } else if (type === 'date' || type === 'time' || type === 'datetime') {\n    try {\n      format = intl.getDatePattern({\n        skeleton: numberFormat,\n        type: type\n      }, isExcel);\n      if (isNullOrUndefined(format)) {\n        // eslint-disable-next-line\n        throw 'error';\n      }\n    } catch (error) {\n      try {\n        format = intl.getDatePattern({\n          format: numberFormat,\n          type: type\n        }, isExcel);\n      } catch (error) {\n        format = numberFormat;\n      }\n    }\n  } else {\n    format = numberFormat;\n  }\n  if (type !== 'number') {\n    var patternRegex = /G|H|c|'| a|yy|y|EEEE|E/g;\n    var mtch_1 = {\n      'G': '',\n      'H': 'h',\n      'c': 'd',\n      '\\'': '\"',\n      ' a': ' AM/PM',\n      'yy': 'yy',\n      'y': 'yyyy',\n      'EEEE': 'dddd',\n      'E': 'ddd'\n    };\n    format = format.replace(patternRegex, function (pattern) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return mtch_1[pattern];\n    });\n  }\n  return format;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @returns {void}\n * @hidden\n */\nexport function addBiggerDialog(gObj) {\n  if (gObj.enableAdaptiveUI) {\n    var dialogs = document.getElementsByClassName('e-responsive-dialog');\n    for (var i = 0; i < dialogs.length; i++) {\n      dialogs[i].classList.add('e-bigger');\n    }\n  }\n}\n/**\n * @param {string} value - specifies the trr\n * @param {Object} mapObject - specifies the idx\n * @returns {Object | string} returns object or string\n * @hidden\n */\nexport function performComplexDataOperation(value, mapObject) {\n  var returnObj;\n  var length = value.split('.').length;\n  var splits = value.split('.');\n  var duplicateMap = mapObject;\n  for (var i = 0; i < length; i++) {\n    returnObj = duplicateMap[splits[i]];\n    duplicateMap = returnObj;\n  }\n  return returnObj;\n}\n/**\n * @param {Object} tr - specifies the trr\n * @param {number} idx - specifies the idx\n * @param {string} displayVal - specifies the displayval\n * @param {Row<Column>} rows - specifies the rows\n * @param {IGrid} parent - Grid instance\n * @param {boolean} isContent - check for content renderer\n * @returns {void}\n * @hidden\n */\nexport function setDisplayValue(tr, idx, displayVal, rows, parent, isContent) {\n  var trs = Object.keys(tr);\n  for (var i = 0; i < trs.length; i++) {\n    var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n    if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n      setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], {\n        'display': displayVal\n      });\n      if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n        removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n      }\n      if (isContent && parent.isRowDragable()) {\n        var index = parent.getFrozenColumns() ? idx : idx + 1;\n        rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n      } else {\n        rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n      }\n    }\n  }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function addRemoveEventListener(parent, evt, isOn, module) {\n  for (var _i = 0, evt_1 = evt; _i < evt_1.length; _i++) {\n    var inst = evt_1[_i];\n    if (isOn) {\n      parent.on(inst.event, inst.handler, module);\n    } else {\n      parent.off(inst.event, inst.handler);\n    }\n  }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function createEditElement(parent, column, classNames, attr) {\n  var complexFieldName = getComplexFieldID(column.field);\n  attr = Object.assign(attr, {\n    id: parent.element.id + complexFieldName,\n    name: complexFieldName,\n    'e-mappinguid': column.uid\n  });\n  return parent.createElement('input', {\n    className: classNames,\n    attrs: attr\n  });\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} uid - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByUid(gObj, uid) {\n  var column;\n  for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n    var col = _a[_i];\n    if (col.uid === uid) {\n      column = col;\n      break;\n    }\n  }\n  return column;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} field - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByFieldName(gObj, field) {\n  var column;\n  if (!gObj.columnModel) {\n    gObj.getColumns();\n  }\n  for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n    var col = _a[_i];\n    if (col.field === field) {\n      column = col;\n      break;\n    }\n  }\n  return column;\n}\n/**\n * @param {string} id - Defines component id\n * @param {string[]} evts - Defines events\n * @param {object} handlers - Defines event handlers\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function registerEventHandlers(id, evts, handlers, instance) {\n  instance.eventHandlers[id] = {};\n  for (var i = 0; i < evts.length; i++) {\n    instance.eventHandlers[id][evts[i]] = handlers[evts[i]];\n  }\n}\n/**\n * @param {any} component - Defines component instance\n * @param {string[]} evts - Defines events\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function removeEventHandlers(component, evts, instance) {\n  for (var i = 0; i < evts.length; i++) {\n    if (component.isDestroyed) {\n      break;\n    }\n    component.removeEventListener(evts[i], instance.eventHandlers[component.element.id][evts[i]]);\n  }\n}\n/**\n * @param {IGrid | IXLFilter} parent - Defines parent instance\n * @param {string[]} templates - Defines the templates name which are needs to clear\n * @returns {void}\n * @hidden\n */\nexport function clearReactVueTemplates(parent, templates) {\n  parent.destroyTemplate(templates);\n  if (parent.isReact) {\n    parent.renderTemplates();\n  }\n}\n/**\n *\n * @param { Element } row - Defines row element\n * @returns { number } row index\n */\nexport function getRowIndexFromElement(row) {\n  return parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n}\n/**\n *\n * @param { string[] } fields - Defines grouped fields\n * @param { values } values - Defines caption keys\n * @param { any } instance - Defines dynamic class instance\n * @returns { Predicate } returns filter predicate\n */\n// eslint-disable-next-line\nexport function generateExpandPredicates(fields, values, instance) {\n  var filterCols = [];\n  for (var i = 0; i < fields.length; i++) {\n    var column = instance.parent.getColumnByField(fields[i]);\n    var value = values[i] === 'null' ? null : values[i];\n    var pred = {\n      field: fields[i],\n      predicate: 'or',\n      uid: column.uid,\n      operator: 'equal',\n      type: column.type,\n      matchCase: instance.allowCaseSensitive,\n      ignoreAccent: instance.parent.filterSettings.ignoreAccent\n    };\n    if (value === '' || isNullOrUndefined(value)) {\n      filterCols = filterCols.concat(CheckBoxFilterBase.generateNullValuePredicates(pred));\n    } else {\n      filterCols.push(extend({}, {\n        value: value\n      }, pred));\n    }\n  }\n  return CheckBoxFilterBase.getPredicate(filterCols);\n}\n/**\n *\n * @param { Predicate } pred - Defines filter predicate\n * @returns { Predicate[] } Returns formed predicate\n */\nexport function getPredicates(pred) {\n  var predicateList = [];\n  for (var _i = 0, _a = Object.keys(pred); _i < _a.length; _i++) {\n    var prop = _a[_i];\n    predicateList.push(pred[prop]);\n  }\n  return predicateList;\n}\n/**\n *\n * @param { number } index - Defines group caption indent\n * @param { Row<Column>[] } rowsObject - Defines rows object\n * @returns { { fields: string[], keys: string[] } } Returns grouped keys and values\n */\nexport function getGroupKeysAndFields(index, rowsObject) {\n  var fields = [];\n  var keys = [];\n  for (var i = index; i >= 0; i--) {\n    if (rowsObject[i].isCaptionRow && fields.indexOf(rowsObject[i].data.field) === -1 && (rowsObject[i].indent < rowsObject[index].indent || i === index)) {\n      fields.push(rowsObject[i].data.field);\n      keys.push(rowsObject[i].data.key);\n      if (rowsObject[i].indent === 0) {\n        break;\n      }\n    }\n  }\n  return {\n    fields: fields,\n    keys: keys\n  };\n}","map":{"version":3,"names":["ChildProperty","compile","baseTemplateComplier","setValue","Internationalization","isUndefined","closest","extend","baseExtend","isNullOrUndefined","getValue","classList","setStyleAttribute","addClass","attributes","remove","createElement","removeClass","isObject","select","selectAll","DataUtil","Query","DataManager","Predicate","UrlAdaptor","Deferred","Column","calculateRelativeBasedPosition","Print","CheckBoxFilterBase","literals","doesImplementInterface","target","checkFor","prototype","valueAccessor","field","data","column","getObject","headerValueAccessor","getUpdateUsingRaf","updateFunction","callBack","requestAnimationFrame","e","isExportColumns","exportProperties","columns","length","updateColumnTypeForExportColumns","gObj","exportColumns","gridColumns","i","j","type","updatecloneRow","grid","nRows","actualRows","vRows","isDataRow","push","isExpand","isCaptionRow","getCollapsedRowsCount","vcRows","count","val","gSummary","total","gLen","groupSettings","records","items","value","dataRowCnt","agrCnt","indent","len","gLevel","GroupGuid","childLevels","recursive","row","rCount","length_1","nLevel","iterateArrayOrObject","collection","predicate","result","pred","iterateExtend","array","obj","getActualProperties","templateCompiler","template","document","querySelectorAll","querySelector","innerHTML","trim","undefined","setStyleAndAttributes","node","customAttributes","copyAttr","copied","first","second","exclude","moved","values","Object","keys","indexOf","setColumnIndex","columnModel","ind","index","prepareColumns","autoWidth","c","toLowerCase","allowReordering","headerText","foreignKeyValue","foreignKeyField","window","width","visible","setCssInGridPopUp","popUp","className","popUpSpan","position","parentElement","getBoundingClientRect","targetPosition","style","display","isBottomTail","clientY","changedTouches","offsetHeight","top","left","getPopupLeftPosition","popup","offsetWidth","x","getPosition","right","parentsUntil","elem","selector","isID","parent","id","contains","getElementIndex","element","elements","isEqualNode","inArray","getActualPropFromColl","coll","hasOwnProperty","properties","removeElement","slice","call","clientX","y","uid","getUid","prefix","appendChildren","children","appendChild","parents","calculateAggregate","context","temp","customAggregate","Array","aggregates","scrollWidth","getScrollBarWidth","divNode","cssText","body","clientWidth","removeChild","rowHeight","getRowHeight","table","styles","rect","Math","ceil","height","actualRowHeight","getActualRowHeight","isComplexField","split","getComplexFieldID","replace","setComplexFieldID","isEditable","col","isOldRow","isIdentity","isPrimaryKey","allowEditing","isActionPrevent","inst","dlg","editSettings","mode","showConfirmDialog","wrap","action","clName","add","setFormatter","serviceLocator","fmtr","getService","format","args","skeleton","getFormatFunction","setParser","getParserFunction","addRemoveActiveClasses","cells","_i","arguments","setAttribute","removeAttribute","distinctStringValues","res","toString","getFilterMenuPostion","dialogObj","elementVisible","dlgWidth","newpos","leftPos","getZIndexCalcualtion","zIndex","toogleCheckbox","span","input","previousSibling","checked","setChecked","createCboxWithWrap","div","removeAddCboxClasses","refreshForeignData","getForeignData","foreignKeyData","isForeignKey","lValue","fField","key","query","fdata","dataSource","json","columnData","getDay","where","getDatePredicate","operator","matchCase","executeLocal","getColumnByForeignKeyValue","some","filterObject","datePredicate","prevDate","nextDate","prevObj","nextObj","Date","setSeconds","getSeconds","setHours","predicateSt","predicateEnd","and","or","predicates","setProperties","ejpredicate","renderMovable","ele","frzCols","isRowDragable","mEle","cloneNode","childElementCount","isGroupAdaptive","enableVirtualization","isVirtualAdaptive","object","splits","getCustomDateFormat","colType","intl","formatvalue","formatter","getDatePattern","getExpandedState","hierarchyPrintMode","rows","getRowsObject","rows_1","isDetailRow","allowPaging","printMode","pageSettings","currentPage","pageSize","gridModel","getPrintGridModel","childGrid","printGridModel","isFrozen","isFrozenGrid","getFrozenColumns","_a","printGridProp","getColumns","expandedRows","extendObjWithFn","deep","obj1","getPrototypeOf","concat","getPrototypesOfObj","i_1","source","cpy","cln","isArray","measureColumnDepth","max","depth","checkDepth","indices","refreshFilteredColsUid","filteredCols","getForeignKeyColumns","enableColumnVirtualization","getColumnModelByFieldName","getColumnByField","Global","timer","getTransformValues","defaultView","getComputedStyle","transformV","getPropertyValue","replacedTv","translateX","parseFloat","translateY","applyBiggerTheme","rootElement","alignFrozenEditForm","mTD","fTD","mHeight","fHeight","ensureLastRow","gridObj","cntOffset","getContent","firstElementChild","ensureFirstRow","rowTop","isRowEnteredInGrid","startIndex","scrollTop","endIndex","getEditedDataIndex","keyField","getPrimaryKeyFieldNames","dataIndex","getCurrentViewRecords","filter","eventPromise","state","getStateEventArgument","def","resolve","deffered","adaptr","dm","url","adaptor","processQuery","JSON","parse","ispercentageWidth","getVisibleColumns","percentageCol","undefinedWidthCol","showGroupedColumn","resetRowIndex","rowElms","isAltRow","enableAltRow","ariaRowIndex","renderModule","emptyRow","compareChanges","changes","newArray","dataToBeUpdated","reduce","r","o","assign","map","k","setRowElements","contentModule","rowElements","cls","getFrozenMode","leftRight","freezeRowElements","frozenRightRowElements","splitFrozenRowObjectCells","tableName","getFrozenLeftCount","movable","getMovableColumnsCount","getFrozenRightColumnsCount","frozenMode","drag","rightIndex","mvblIndex","mvblEndIdx","frozenLeft","frozenRight","gridActionHandler","force","rowObj","getGridRowObjects","getMovableRowsObject","getFrozenRightRowsObject","getGridRowElements","getAllDataRows","getAllMovableDataRows","getAllFrozenRightDataRows","sliceElements","start","end","getCellsByTableName","rowIndex","getFreezeTableName","getMovableDataRows","getElementsByClassName","rowCell","getFrozenRightDataRows","getDataRows","getCellByColAndRowIndex","setValidationRuels","rules","mRules","frRules","isCustom","validationRules","getMovableTbody","tbody","frozenRows","newRowPosition","getMovableHeaderTbody","getMovableContentTbody","getFrozenRightTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","setRowsInTbody","mTbody","frTbody","tr","mTr","frTr","getNumberFormat","numberFormat","isExcel","getNumberPattern","currency","useGrouping","error","patternRegex","mtch_1","pattern","addBiggerDialog","enableAdaptiveUI","dialogs","performComplexDataOperation","mapObject","returnObj","duplicateMap","setDisplayValue","idx","displayVal","isContent","trs","td","addRemoveEventListener","evt","isOn","module","evt_1","on","event","handler","off","createEditElement","classNames","attr","complexFieldName","name","attrs","getColumnModelByUid","registerEventHandlers","evts","handlers","instance","eventHandlers","removeEventHandlers","component","isDestroyed","removeEventListener","clearReactVueTemplates","templates","destroyTemplate","isReact","renderTemplates","getRowIndexFromElement","parseInt","getAttribute","generateExpandPredicates","fields","filterCols","allowCaseSensitive","ignoreAccent","filterSettings","generateNullValuePredicates","getPredicate","getPredicates","predicateList","prop","getGroupKeysAndFields","rowsObject"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/base/util.js"],"sourcesContent":["import { ChildProperty, compile as baseTemplateComplier, setValue, Internationalization, isUndefined, closest } from '@syncfusion/ej2-base';\nimport { extend as baseExtend, isNullOrUndefined, getValue, classList } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, addClass, attributes, remove, createElement, removeClass } from '@syncfusion/ej2-base';\nimport { isObject, select, selectAll } from '@syncfusion/ej2-base';\nimport { DataUtil, Query, DataManager, Predicate, UrlAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { Column } from '../models/column';\nimport { calculateRelativeBasedPosition } from '@syncfusion/ej2-popups';\nimport { Print } from '../actions/print';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\nimport * as literals from '../base/string-literals';\n//https://typescript.codeplex.com/discussions/401501\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {Object} target - specifies the target\n * @param  {string} checkFor - specifies the checkfors\n * @returns {boolean} returns the boolean\n * @hidden\n */\nexport function doesImplementInterface(target, checkFor) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return target.prototype && checkFor in target.prototype;\n}\n/**\n * Function to get value from provided data\n *\n * @param  {string} field - specifies the field\n * @param  {Object} data - specifies the data\n * @param  {ColumnModel} column - specifies the column\n * @returns {Object} returns the object\n * @hidden\n */\n// eslint-disable-next-line\nexport function valueAccessor(field, data, column) {\n    return (isNullOrUndefined(field) || field === '') ? '' : DataUtil.getObject(field, data);\n}\n/**\n * Defines the method used to apply custom header cell values from external function and display this on each header cell rendered.\n *\n * @param  {string} field - specifies the field\n * @param  {ColumnModel} column - specifies the column\n * @returns {object} headerValueAccessor\n * @hidden\n */\nexport function headerValueAccessor(field, column) {\n    return (isNullOrUndefined(field) || field === '') ? '' : DataUtil.getObject(field, column);\n}\n/**\n * The function used to update Dom using requestAnimationFrame.\n *\n * @param {Function} updateFunction - Function that contains the actual action\n * @param {object} callBack - defines the callback\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function getUpdateUsingRaf(updateFunction, callBack) {\n    requestAnimationFrame(function () {\n        try {\n            callBack(null, updateFunction());\n        }\n        catch (e) {\n            callBack(e);\n        }\n    });\n}\n/**\n * @hidden\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @returns {boolean} Returns isExportColumns\n */\nexport function isExportColumns(exportProperties) {\n    return !isNullOrUndefined(exportProperties) &&\n        !isNullOrUndefined(exportProperties.columns) && exportProperties.columns.length > 0;\n}\n/**\n * @param {PdfExportProperties | ExcelExportProperties} exportProperties - Defines the export properties\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function updateColumnTypeForExportColumns(exportProperties, gObj) {\n    var exportColumns = exportProperties.columns;\n    var gridColumns = gObj.columns;\n    for (var i = 0; i < exportColumns.length; i++) {\n        if (gridColumns.length - 1 >= i) {\n            if (gridColumns[i].columns) {\n                for (var j = 0; j < gridColumns[i].columns.length; j++) {\n                    exportColumns[i].columns[j].type = gridColumns[i].columns[j].type;\n                }\n            }\n            else {\n                exportColumns[i].type = gridColumns[i].type;\n            }\n        }\n    }\n}\n/**\n * @hidden\n * @param {IGrid} grid - Defines the grid\n * @returns {void}\n */\nexport function updatecloneRow(grid) {\n    var nRows = [];\n    var actualRows = grid.vRows;\n    for (var i = 0; i < actualRows.length; i++) {\n        if (actualRows[i].isDataRow) {\n            nRows.push(actualRows[i]);\n        }\n        else if (!actualRows[i].isDataRow) {\n            nRows.push(actualRows[i]);\n            if (!actualRows[i].isExpand && actualRows[i].isCaptionRow) {\n                i += getCollapsedRowsCount(actualRows[i], grid);\n            }\n        }\n    }\n    grid.vcRows = nRows;\n}\nvar count = 0;\n/**\n * @hidden\n * @param {Row<Column>} val - Defines the value\n * @param {IGrid} grid - Defines the grid\n * @returns {number} Returns the collapsed row count\n */\nexport function getCollapsedRowsCount(val, grid) {\n    count = 0;\n    var gSummary = 'gSummary';\n    var total = 'count';\n    var gLen = grid.groupSettings.columns.length;\n    var records = 'records';\n    var items = 'items';\n    var value = val[gSummary];\n    var dataRowCnt = 0;\n    var agrCnt = 'aggregatesCount';\n    if (value === val.data[total]) {\n        if (grid.groupSettings.columns.length && !isNullOrUndefined(val[agrCnt]) && val[agrCnt]) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += (val.indent !== 0 && (value) < 2) ? (val[gSummary] * ((gLen - val.indent) + (gLen - val.indent) * val[agrCnt])) :\n                    (val[gSummary] * ((gLen - val.indent) + (gLen - val.indent - 1) * val[agrCnt])) + val[agrCnt];\n            }\n            else if (grid.groupSettings.columns.length === 1) {\n                count += (val[gSummary] * (gLen - val.indent)) + val[agrCnt];\n            }\n        }\n        else if (grid.groupSettings.columns.length) {\n            if (grid.groupSettings.columns.length !== 1) {\n                count += val[gSummary] * (grid.groupSettings.columns.length - val.indent);\n            }\n            else {\n                count += val[gSummary];\n            }\n        }\n        return count;\n    }\n    else {\n        for (var i = 0, len = val.data[items].length; i < len; i++) {\n            var gLevel = val.data[items][i];\n            count += gLevel[items].length + ((gLen !== grid.columns.length) &&\n                !isNullOrUndefined(gLevel[items][records]) ? gLevel[items][records].length : 0);\n            dataRowCnt += (!isNullOrUndefined(gLevel[items][records]) && !isNullOrUndefined(val[agrCnt])) ? gLevel[items][records].length :\n                gLevel[items].length;\n            if (gLevel[items].GroupGuid && gLevel[items].childLevels !== 0) {\n                recursive(gLevel);\n            }\n        }\n        count += val.data[items].length;\n        if (!isNullOrUndefined(val[agrCnt])) {\n            if (val[agrCnt] && count && dataRowCnt !== 0) {\n                count += ((count - dataRowCnt) * val[agrCnt]) + val[agrCnt];\n            }\n        }\n    }\n    return count;\n}\n/**\n * @param {Object[]} row - Defines the row\n * @returns {void}\n * @hidden\n */\nexport function recursive(row) {\n    var items = 'items';\n    var rCount = 'count';\n    for (var j = 0, length_1 = row[items].length; j < length_1; j++) {\n        var nLevel = row[items][j];\n        count += nLevel[rCount];\n        if (nLevel[items].childLevels !== 0) {\n            recursive(nLevel);\n        }\n    }\n}\n/**\n * @param {Object[]} collection - Defines the array\n * @param {Object} predicate - Defines the predicate\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateArrayOrObject(collection, predicate) {\n    var result = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        var pred = predicate(collection[i], i);\n        if (!isNullOrUndefined(pred)) {\n            result.push(pred);\n        }\n    }\n    return result;\n}\n/**\n * @param {Object[]} array - Defines the array\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function iterateExtend(array) {\n    var obj = [];\n    for (var i = 0; i < array.length; i++) {\n        obj.push(baseExtend({}, getActualProperties(array[i]), {}, true));\n    }\n    return obj;\n}\n/**\n * @param {string} template - Defines the template\n * @returns {Function} Returns the function\n * @hidden\n */\nexport function templateCompiler(template) {\n    if (template) {\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            else {\n                return baseTemplateComplier(template);\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/**\n * @param {Element} node - Defines the column\n * @param {Object} customAttributes - Defines the index\n * @returns {void}\n * @hidden\n */\nexport function setStyleAndAttributes(node, customAttributes) {\n    var copyAttr = {};\n    var literals = ['style', 'class'];\n    //Dont touch the original object - make a copy\n    baseExtend(copyAttr, customAttributes, {});\n    if ('style' in copyAttr) {\n        setStyleAttribute(node, copyAttr[literals[0]]);\n        delete copyAttr[literals[0]];\n    }\n    if ('class' in copyAttr) {\n        addClass([node], copyAttr[literals[1]]);\n        delete copyAttr[literals[1]];\n    }\n    attributes(node, copyAttr);\n}\n/**\n * @param {Object} copied - Defines the column\n * @param {Object} first - Defines the inndex\n * @param {Object} second - Defines the second object\n * @param {string[]} exclude - Defines the exclude\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function extend(copied, first, second, exclude) {\n    var moved = baseExtend(copied, first, second);\n    var values = Object.keys(moved);\n    for (var i = 0; i < values.length; i++) {\n        if (exclude && exclude.indexOf(values[i]) !== -1) {\n            delete moved[values[i]];\n        }\n    }\n    return moved;\n}\n/**\n * @param {Column[]} columnModel - Defines the column\n * @param {number} ind - Defines the inndex\n * @returns {number} - Returns the columnindex\n * @hidden\n */\nexport function setColumnIndex(columnModel, ind) {\n    if (ind === void 0) { ind = 0; }\n    for (var i = 0, len = columnModel.length; i < len; i++) {\n        if (columnModel[i].columns) {\n            columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind : columnModel[i].index;\n            ind++;\n            ind = setColumnIndex(columnModel[i].columns, ind);\n        }\n        else {\n            columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind : columnModel[i].index;\n            ind++;\n        }\n    }\n    return ind;\n}\n/**\n * @param {Column[] | string[] | ColumnModel[]} columns - Defines the column\n * @param {boolean} autoWidth - Defines the autowidth\n * @param {IGrid} gObj - Defines the class name\n * @returns {Column} - Returns the columns\n * @hidden\n */\nexport function prepareColumns(columns, autoWidth, gObj) {\n    for (var c = 0, len = columns.length; c < len; c++) {\n        var column = void 0;\n        if (typeof columns[c] === 'string') {\n            column = new Column({ field: columns[c] }, gObj);\n        }\n        else if (!(columns[c] instanceof Column) || columns[c].columns) {\n            if (!columns[c].columns) {\n                column = new Column(columns[c], gObj);\n            }\n            else {\n                columns[c].columns = prepareColumns(columns[c].columns, null, gObj);\n                column = new Column(columns[c], gObj);\n            }\n        }\n        else {\n            column = columns[c];\n        }\n        if (column.type && column.type.toLowerCase() === 'checkbox') {\n            column.allowReordering = false;\n        }\n        column.headerText = isNullOrUndefined(column.headerText) ? column.foreignKeyValue || column.field || '' : column.headerText;\n        column.foreignKeyField = column.foreignKeyField || column.field;\n        column.valueAccessor = (typeof column.valueAccessor === 'string' ? getValue(column.valueAccessor, window)\n            : column.valueAccessor) || valueAccessor;\n        column.width = autoWidth && isNullOrUndefined(column.width) ? 200 : column.width;\n        if (isNullOrUndefined(column.visible)) {\n            column.visible = true;\n        }\n        columns[c] = column;\n    }\n    return columns;\n}\n/**\n * @param {HTMLElement} popUp - Defines the popup element\n * @param {MouseEvent | TouchEvent} e - Defines the moouse event\n * @param {string} className - Defines the class name\n * @returns {void}\n * @hidden\n */\nexport function setCssInGridPopUp(popUp, e, className) {\n    var popUpSpan = popUp.querySelector('span');\n    var position = popUp.parentElement.getBoundingClientRect();\n    var targetPosition = e.target.getBoundingClientRect();\n    popUpSpan.className = className;\n    popUp.style.display = '';\n    var isBottomTail = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY) > popUp.offsetHeight + 10;\n    popUp.style.top = targetPosition.top - position.top +\n        (isBottomTail ? -(popUp.offsetHeight + 10) : popUp.offsetHeight + 10) + 'px'; //10px for tail element\n    popUp.style.left = getPopupLeftPosition(popUp, e, targetPosition, position.left) + 'px';\n    if (isBottomTail) {\n        popUp.querySelector('.e-downtail').style.display = '';\n        popUp.querySelector('.e-uptail').style.display = 'none';\n    }\n    else {\n        popUp.querySelector('.e-downtail').style.display = 'none';\n        popUp.querySelector('.e-uptail').style.display = '';\n    }\n}\n/**\n * @param {HTMLElement} popup - Defines the popup element\n * @param {MouseEvent | TouchEvent} e  - Defines the mouse event\n * @param {Object} targetPosition - Defines the target position\n * @param {number} targetPosition.top - Defines the top position\n * @param {number} targetPosition.left  - Defines the left position\n * @param {number} targetPosition.right  - Defines the right position\n * @param {number} left - Defines the left position\n * @returns {number} Returns the popup left position\n * @hidden\n */\nfunction getPopupLeftPosition(popup, e, targetPosition, left) {\n    var width = popup.offsetWidth / 2;\n    var x = getPosition(e).x;\n    if (x - targetPosition.left < width) {\n        return targetPosition.left - left;\n    }\n    else if (targetPosition.right - x < width) {\n        return targetPosition.right - left - width * 2;\n    }\n    else {\n        return x - left - width;\n    }\n}\n/**\n * @param {Object} obj - Defines the object\n * @returns {Object} Returns the Properties\n * @hidden\n */\nexport function getActualProperties(obj) {\n    if (obj instanceof ChildProperty) {\n        return getValue('properties', obj);\n    }\n    else {\n        return obj;\n    }\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the string selector\n * @param {boolean} isID - Defines the isID\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return parent;\n}\n/**\n * @param {Element} element - Defines the element\n * @param {Element} elements - Defines the element\n * @returns {number} Returns the element index\n * @hidden\n */\nexport function getElementIndex(element, elements) {\n    var index = -1;\n    for (var i = 0, len = elements.length; i < len; i++) {\n        if (elements[i].isEqualNode(element)) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @param {Object} value - Defines the value\n * @param {Object} collection - defines the collection\n * @returns {number} Returns the array\n * @hidden\n */\nexport function inArray(value, collection) {\n    for (var i = 0, len = collection.length; i < len; i++) {\n        if (collection[i] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @param {Object} collection - Defines the collection\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getActualPropFromColl(collection) {\n    var coll = [];\n    for (var i = 0, len = collection.length; i < len; i++) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (collection[i].hasOwnProperty('properties')) {\n            coll.push(collection[i].properties);\n        }\n        else {\n            coll.push(collection[i]);\n        }\n    }\n    return coll;\n}\n/**\n * @param {Element} target - Defines the target element\n * @param {string} selector - Defines the selector\n * @returns {void}\n * @hidden\n */\nexport function removeElement(target, selector) {\n    var elements = [].slice.call(target.querySelectorAll(selector));\n    for (var i = 0; i < elements.length; i++) {\n        remove(elements[i]);\n    }\n}\n/**\n * @param {MouseEvent | TouchEvent} e Defines the mouse event\n * @returns {IPosition} Returns the position\n * @hidden\n */\nexport function getPosition(e) {\n    var position = {};\n    position.x = (isNullOrUndefined(e.clientX) ? e.changedTouches[0].clientX :\n        e.clientX);\n    position.y = (isNullOrUndefined(e.clientY) ? e.changedTouches[0].clientY :\n        e.clientY);\n    return position;\n}\nvar uid = 0;\n/**\n * @param {string} prefix - Defines the prefix string\n * @returns {string} Returns the uid\n * @hidden\n */\nexport function getUid(prefix) {\n    return prefix + uid++;\n}\n/**\n * @param {Element | DocumentFragment} elem - Defines the element\n * @param {Element[] | NodeList} children - Defines the Element\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function appendChildren(elem, children) {\n    for (var i = 0, len = children.length; i < len; i++) {\n        if (len === children.length) {\n            elem.appendChild(children[i]);\n        }\n        else {\n            elem.appendChild(children[0]);\n        }\n    }\n    return elem;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {string} selector - Defines the selector\n * @param {boolean} isID - Defines isID\n * @returns {Element} Return the element\n * @hidden\n */\nexport function parents(elem, selector, isID) {\n    var parent = elem;\n    var parents = [];\n    while (parent) {\n        if (isID ? parent.id === selector : parent.classList.contains(selector)) {\n            parents.push(parent);\n        }\n        parent = parent.parentElement;\n    }\n    return parents;\n}\n/**\n * @param {AggregateType | string} type - Defines the type\n * @param {Object} data - Defines the data\n * @param {AggregateColumnModel} column - Defines the column\n * @param {Object} context - Defines the context\n * @returns {Object} Returns the calculated aggragate\n * @hidden\n */\nexport function calculateAggregate(type, data, column, context) {\n    if (type === 'Custom') {\n        var temp = column.customAggregate;\n        if (typeof temp === 'string') {\n            temp = getValue(temp, window);\n        }\n        return temp ? temp.call(context, data, column) : '';\n    }\n    return (column.field in data || data instanceof Array) ? DataUtil.aggregates[type.toLowerCase()](data, column.field) : null;\n}\n/** @hidden */\nvar scrollWidth = null;\n/** @hidden\n * @returns {number} - Returns the scrollbarwidth\n */\nexport function getScrollBarWidth() {\n    if (scrollWidth !== null) {\n        return scrollWidth;\n    }\n    var divNode = document.createElement('div');\n    var value = 0;\n    divNode.style.cssText = 'width:100px;height: 100px;overflow: scroll;position: absolute;top: -9999px;';\n    document.body.appendChild(divNode);\n    value = (divNode.offsetWidth - divNode.clientWidth) | 0;\n    document.body.removeChild(divNode);\n    return scrollWidth = value;\n}\n/** @hidden */\nvar rowHeight;\n/**\n * @param {HTMLElement} element - Defines the element\n * @returns {number} Returns the roww height\n * @hidden\n */\nexport function getRowHeight(element) {\n    if (rowHeight !== undefined) {\n        return rowHeight;\n    }\n    var table = createElement('table', { className: literals.table, styles: 'visibility: hidden' });\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('td').getBoundingClientRect();\n    element.removeChild(table);\n    rowHeight = Math.ceil(rect.height);\n    return rowHeight;\n}\n/** @hidden */\nvar actualRowHeight;\n/**\n * @param {HTMLElement} element - Defines the HTMl element\n * @returns {number} Returns the row height\n * @hidden\n */\nexport function getActualRowHeight(element) {\n    if (actualRowHeight !== undefined) {\n        return rowHeight;\n    }\n    var table = createElement('table', { className: literals.table, styles: 'visibility: hidden' });\n    table.innerHTML = '<tr><td class=\"e-rowcell\">A<td></tr>';\n    element.appendChild(table);\n    var rect = table.querySelector('tr').getBoundingClientRect();\n    element.removeChild(table);\n    return rect.height;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {boolean} - Returns is complex field\n * @hidden\n */\nexport function isComplexField(field) {\n    return field.split('.').length > 1;\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the get complex field ID\n * @hidden\n */\nexport function getComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/\\./g, '___');\n}\n/**\n * @param {string} field - Defines the field\n * @returns {string} - Returns the set complex field ID\n * @hidden\n */\nexport function setComplexFieldID(field) {\n    if (field === void 0) { field = ''; }\n    return field.replace(/___/g, '.');\n}\n/**\n * @param {Column} col - Defines the column\n * @param {string} type - Defines the type\n * @param {Element} elem - Defines th element\n * @returns {boolean} Returns is Editable\n * @hidden\n */\nexport function isEditable(col, type, elem) {\n    var row = parentsUntil(elem, literals.row);\n    var isOldRow = !row ? true : row && !row.classList.contains('e-insertedrow');\n    if (type === 'beginEdit' && isOldRow) {\n        if (col.isIdentity || col.isPrimaryKey || !col.allowEditing) {\n            return false;\n        }\n        return true;\n    }\n    else if (type === 'add' && col.isIdentity) {\n        return false;\n    }\n    else {\n        if (isOldRow && !col.allowEditing && !col.isIdentity && !col.isPrimaryKey) {\n            return false;\n        }\n        return true;\n    }\n}\n/**\n * @param {IGrid} inst - Defines the IGrid\n * @returns {boolean} Returns is action prevent in boolean\n * @hidden\n */\nexport function isActionPrevent(inst) {\n    var dlg = select('#' + inst.element.id + 'EditConfirm', inst.element);\n    return inst.editSettings.mode === 'Batch' &&\n        (selectAll('.e-updatedtd', inst.element).length) && inst.editSettings.showConfirmDialog &&\n        (dlg ? dlg.classList.contains('e-popup-close') : true);\n}\n/**\n * @param {any} elem - Defines the element\n * @param {boolean} action - Defines the boolean for action\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function wrap(elem, action) {\n    var clName = 'e-wrap';\n    elem = elem instanceof Array ? elem : [elem];\n    for (var i = 0; i < elem.length; i++) {\n        if (action) {\n            elem[i].classList.add(clName);\n        }\n        else {\n            elem[i].classList.remove(clName);\n        }\n    }\n}\n/**\n * @param {ServiceLocator} serviceLocator - Defines the service locator\n * @param {Column} column  - Defines the column\n * @returns {void}\n * @hidden\n */\nexport function setFormatter(serviceLocator, column) {\n    var fmtr = serviceLocator.getService('valueFormatter');\n    var format = 'format';\n    var args;\n    if (column.type === 'date' || column.type === 'datetime') {\n        args = { type: column.type, skeleton: column.format };\n        if ((typeof (column.format) === 'string') && column.format !== 'yMd') {\n            args[format] = column.format;\n        }\n    }\n    switch (column.type) {\n        case 'date':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'datetime':\n            column.setFormatter(fmtr.getFormatFunction(args));\n            column.setParser(fmtr.getParserFunction(args));\n            break;\n        case 'number':\n            column.setFormatter(fmtr.getFormatFunction({ format: column.format }));\n            column.setParser(fmtr.getParserFunction({ format: column.format }));\n            break;\n    }\n}\n/**\n * @param {Element} cells - Defines the cell element\n * @param {boolean} add - Defines the add\n * @param {string} args - Defines the args\n * @returns {void}\n * @hidden\n */\nexport function addRemoveActiveClasses(cells, add) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    for (var i = 0, len = cells.length; i < len; i++) {\n        if (add) {\n            classList(cells[i], args.slice(), []);\n            cells[i].setAttribute('aria-selected', 'true');\n        }\n        else {\n            classList(cells[i], [], args.slice());\n            cells[i].removeAttribute('aria-selected');\n        }\n    }\n}\n/**\n * @param {string} result - Defines th string\n * @returns {string} Returns the distinct staing values\n * @hidden\n */\nexport function distinctStringValues(result) {\n    var temp = {};\n    var res = [];\n    for (var i = 0; i < result.length; i++) {\n        if (!(result[i] in temp)) {\n            res.push(result[i].toString());\n            temp[result[i]] = 1;\n        }\n    }\n    return res;\n}\n/**\n * @param {Element} target - Defines the target\n * @param {Dialog} dialogObj - Defines the dialog\n * @returns {void}\n * @hidden\n */\nexport function getFilterMenuPostion(target, dialogObj) {\n    var elementVisible = dialogObj.element.style.display;\n    dialogObj.element.style.display = 'block';\n    var dlgWidth = dialogObj.width;\n    var newpos = calculateRelativeBasedPosition(target, dialogObj.element);\n    dialogObj.element.style.display = elementVisible;\n    dialogObj.element.style.top = (newpos.top + target.getBoundingClientRect().height) - 5 + 'px';\n    var leftPos = ((newpos.left - dlgWidth) + target.clientWidth);\n    if (leftPos < 1) {\n        dialogObj.element.style.left = (dlgWidth + leftPos) - 16 + 'px'; // right calculation\n    }\n    else {\n        dialogObj.element.style.left = leftPos + -4 + 'px';\n    }\n}\n/**\n * @param {Object} args - Defines the args\n * @param {Popup} args.popup - Defines the args for popup\n * @param {Dialog} dialogObj - Defines the dialog obj\n * @returns {void}\n * @hidden\n */\nexport function getZIndexCalcualtion(args, dialogObj) {\n    args.popup.element.style.zIndex = (dialogObj.zIndex + 1).toString();\n}\n/**\n * @param {Element} elem - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function toogleCheckbox(elem) {\n    var span = elem.querySelector('.e-frame');\n    var input = span.previousSibling;\n    if (span.classList.contains('e-check')) {\n        input.checked = false;\n        classList(span, ['e-uncheck'], ['e-check']);\n    }\n    else {\n        input.checked = true;\n        classList(span, ['e-check'], ['e-uncheck']);\n    }\n}\n/**\n * @param {HTMLInputElement} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function setChecked(elem, checked) {\n    elem.checked = checked;\n}\n/**\n * @param {string} uid - Defines the string\n * @param {Element} elem - Defines the Element\n * @param {string} className - Defines the classname\n * @returns {Element} Returns the box wrap\n * @hidden\n */\nexport function createCboxWithWrap(uid, elem, className) {\n    var div = createElement('div', { className: className });\n    div.appendChild(elem);\n    div.setAttribute('uid', uid);\n    return div;\n}\n/**\n * @param {Element} elem - Defines the element\n * @param {boolean} checked - Defines is checked\n * @returns {void}\n * @hidden\n */\nexport function removeAddCboxClasses(elem, checked) {\n    removeClass([elem], ['e-check', 'e-stop', 'e-uncheck']);\n    if (checked) {\n        elem.classList.add('e-check');\n    }\n    else {\n        elem.classList.add('e-uncheck');\n    }\n}\n/**\n * Refresh the Row model's foreign data.\n *\n * @param {IRow<Column>} row - Grid Row model object.\n * @param {Column[]} columns - Foreign columns array.\n * @param {Object} data - Updated Row data.\n * @returns {void}\n * @hidden\n */\nexport function refreshForeignData(row, columns, data) {\n    for (var i = 0; i < columns.length; i++) {\n        setValue(columns[i].field, getForeignData(columns[i], data), row.foreignKeyData);\n    }\n    var cells = row.cells;\n    for (var i = 0; i < cells.length; i++) {\n        if (cells[i].isForeignKey) {\n            setValue('foreignKeyData', getValue(cells[i].column.field, row.foreignKeyData), cells[i]);\n        }\n    }\n}\n/**\n * Get the foreign data for the corresponding cell value.\n *\n * @param {Column} column - Foreign Key column\n * @param {Object} data - Row data.\n * @param {string | number} lValue - cell value.\n * @param {Object} foreignKeyData - foreign data source.\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getForeignData(column, data, lValue, foreignKeyData) {\n    var fField = column.foreignKeyField;\n    var key = (!isNullOrUndefined(lValue) ? lValue : valueAccessor(column.field, data, column));\n    key = isNullOrUndefined(key) ? '' : key;\n    var query = new Query();\n    var fdata = foreignKeyData || ((column.dataSource instanceof DataManager) && column.dataSource.dataSource.json.length ?\n        column.dataSource.dataSource.json : column.columnData);\n    if (key.getDay) {\n        query.where(getDatePredicate({ field: fField, operator: 'equal', value: key, matchCase: false }));\n    }\n    else {\n        query.where(fField, '==', key, false);\n    }\n    return new DataManager(fdata).executeLocal(query);\n}\n/**\n * To use to get the column's object by the foreign key value.\n *\n * @param {string} foreignKeyValue - Defines ForeignKeyValue.\n * @param {Column[]} columns - Array of column object.\n * @returns {Column} Returns the element\n * @hidden\n */\nexport function getColumnByForeignKeyValue(foreignKeyValue, columns) {\n    var column;\n    return columns.some(function (col) {\n        column = col;\n        return col.foreignKeyValue === foreignKeyValue;\n    }) && column;\n}\n/**\n * @param {PredicateModel} filterObject - Defines the filterObject\n * @param {string} type - Defines the type\n * @returns {Predicate} Returns the Predicate\n * @hidden\n */\nexport function getDatePredicate(filterObject, type) {\n    var datePredicate;\n    var prevDate;\n    var nextDate;\n    var prevObj = baseExtend({}, getActualProperties(filterObject));\n    var nextObj = baseExtend({}, getActualProperties(filterObject));\n    if (isNullOrUndefined(filterObject.value)) {\n        datePredicate = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n        return datePredicate;\n    }\n    var value = new Date(filterObject.value);\n    if (filterObject.operator === 'equal' || filterObject.operator === 'notequal') {\n        if (type === 'datetime') {\n            prevDate = new Date(value.setSeconds(value.getSeconds() - 1));\n            nextDate = new Date(value.setSeconds(value.getSeconds() + 2));\n            filterObject.value = new Date(value.setSeconds(nextDate.getSeconds() - 1));\n        }\n        else {\n            prevDate = new Date(value.setHours(0) - 1);\n            nextDate = new Date(value.setHours(24));\n        }\n        prevObj.value = prevDate;\n        nextObj.value = nextDate;\n        if (filterObject.operator === 'equal') {\n            prevObj.operator = 'greaterthan';\n            nextObj.operator = 'lessthan';\n        }\n        else if (filterObject.operator === 'notequal') {\n            prevObj.operator = 'lessthanorequal';\n            nextObj.operator = 'greaterthanorequal';\n        }\n        var predicateSt = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n        var predicateEnd = new Predicate(nextObj.field, nextObj.operator, nextObj.value, false);\n        datePredicate = filterObject.operator === 'equal' ? predicateSt.and(predicateEnd) : predicateSt.or(predicateEnd);\n    }\n    else {\n        if (type === 'date' && (filterObject.operator === 'lessthanorequal' || filterObject.operator === 'greaterthan')) {\n            prevObj.value = new Date(value.setHours(24) - 1);\n        }\n        if (typeof (prevObj.value) === 'string') {\n            prevObj.value = new Date(prevObj.value);\n        }\n        var predicates = new Predicate(prevObj.field, prevObj.operator, prevObj.value, false);\n        datePredicate = predicates;\n    }\n    if (filterObject.setProperties) {\n        filterObject.setProperties({ ejpredicate: datePredicate }, true);\n    }\n    else {\n        filterObject.ejpredicate = datePredicate;\n    }\n    return datePredicate;\n}\n/**\n * @param {Element} ele - Defines the element\n * @param {number} frzCols - Defines the frozen columns\n * @param {IGrid} gObj - Defines the IGrid\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function renderMovable(ele, frzCols, gObj) {\n    frzCols = frzCols && gObj && gObj.isRowDragable() ? frzCols + 1 : frzCols;\n    var mEle = ele.cloneNode(true);\n    for (var i = 0; i < frzCols; i++) {\n        mEle.removeChild(mEle.children[0]);\n    }\n    for (var i = frzCols, len = ele.childElementCount; i < len; i++) {\n        ele.removeChild(ele.children[ele.childElementCount - 1]);\n    }\n    return mEle;\n}\n/**\n * @param {IGrid} grid - Defines the IGrid\n * @returns {boolean} Returns true if group adaptive is true\n * @hidden\n */\nexport function isGroupAdaptive(grid) {\n    return grid.enableVirtualization && grid.groupSettings.columns.length > 0 && grid.isVirtualAdaptive;\n}\n/**\n * @param {string} field - Defines the Field\n * @param {Object} object - Defines the objec\n * @returns {any} Returns the object\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getObject(field, object) {\n    if (field === void 0) { field = ''; }\n    if (field) {\n        var value = object;\n        var splits = field.split('.');\n        for (var i = 0; i < splits.length && !isNullOrUndefined(value); i++) {\n            value = value[splits[i]];\n        }\n        return value;\n    }\n}\n/**\n * @param {string | Object} format - defines the format\n * @param {string} colType - Defines the coltype\n * @returns {string} Returns the custom Data format\n * @hidden\n */\nexport function getCustomDateFormat(format, colType) {\n    var intl = new Internationalization();\n    var formatvalue;\n    var formatter = 'format';\n    var type = 'type';\n    if (colType === 'date') {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[type] ? format[type] : 'date', format: format[formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    else {\n        formatvalue = typeof (format) === 'object' ?\n            intl.getDatePattern({ type: format[type] ? format[type] : 'dateTime', format: format[formatter] }, false) :\n            intl.getDatePattern({ type: 'dateTime', skeleton: format }, false);\n    }\n    return formatvalue;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {Object} Returns the object\n * @hidden\n */\nexport function getExpandedState(gObj, hierarchyPrintMode) {\n    var rows = gObj.getRowsObject();\n    var obj = {};\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n        var row = rows_1[_i];\n        if (row.isExpand && !row.isDetailRow) {\n            var index = gObj.allowPaging && gObj.printMode === 'AllPages' ? row.index +\n                (gObj.pageSettings.currentPage * gObj.pageSettings.pageSize) - gObj.pageSettings.pageSize : row.index;\n            obj[index] = {};\n            obj[index].isExpand = true;\n            obj[index].gridModel = getPrintGridModel(row.childGrid, hierarchyPrintMode);\n            obj[index].gridModel.query = gObj.childGrid.query;\n        }\n    }\n    return obj;\n}\n/**\n * @param {IGrid} gObj - Defines the grid objct\n * @param {HierarchyGridPrintMode} hierarchyPrintMode - Defines the hierarchyPrintMode\n * @returns {IGrid} Returns the IGrid\n * @hidden\n */\nexport function getPrintGridModel(gObj, hierarchyPrintMode) {\n    if (hierarchyPrintMode === void 0) { hierarchyPrintMode = 'Expanded'; }\n    var printGridModel = {};\n    if (!gObj) {\n        return printGridModel;\n    }\n    var isFrozen = gObj.isFrozenGrid() && !gObj.getFrozenColumns();\n    for (var _i = 0, _a = Print.printGridProp; _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (key === 'columns') {\n            printGridModel[key] = getActualPropFromColl(isFrozen ? gObj.getColumns() : gObj[key]);\n        }\n        else if (key === 'allowPaging') {\n            printGridModel[key] = gObj.printMode === 'CurrentPage';\n        }\n        else {\n            printGridModel[key] = getActualProperties(gObj[key]);\n        }\n    }\n    printGridModel['enableHover'] = false;\n    if (gObj.childGrid && hierarchyPrintMode !== 'None') {\n        printGridModel.expandedRows = getExpandedState(gObj, hierarchyPrintMode);\n    }\n    return printGridModel;\n}\n/**\n * @param {Object} copied - Defines the copied object\n * @param {Object} first - Defines the first object\n * @param {Object} second - Defines the second object\n * @param {boolean} deep - Defines the deep\n * @returns {Object} Returns the extended object\n * @hidden\n */\nexport function extendObjWithFn(copied, first, second, deep) {\n    var res = copied || {};\n    var len = arguments.length;\n    if (deep) {\n        len = len - 1;\n    }\n    for (var i = 1; i < len; i++) {\n        // eslint-disable-next-line prefer-rest-params\n        if (!arguments[i]) {\n            continue;\n        }\n        // eslint-disable-next-line prefer-rest-params\n        var obj1 = arguments[i];\n        var keys = Object.keys(Object.getPrototypeOf(obj1)).length ?\n            Object.keys(obj1).concat(getPrototypesOfObj(obj1)) : Object.keys(obj1);\n        for (var i_1 = 0; i_1 < keys.length; i_1++) {\n            var source = res[keys[i_1]];\n            var cpy = obj1[keys[i_1]];\n            var cln = void 0;\n            if (deep && (isObject(cpy) || Array.isArray(cpy))) {\n                if (isObject(cpy)) {\n                    cln = source ? source : {};\n                    res[keys[i_1]] = baseExtend({}, cln, cpy, deep);\n                }\n                else {\n                    cln = source ? source : [];\n                    res[keys[i_1]] = baseExtend([], cln, cpy, deep);\n                }\n            }\n            else {\n                res[keys[i_1]] = cpy;\n            }\n        }\n    }\n    return res;\n}\n/**\n * @param {Object} obj - Defines the obj\n * @returns {string[]} Returns the string\n * @hidden\n */\nfunction getPrototypesOfObj(obj) {\n    var keys = [];\n    while (Object.getPrototypeOf(obj) && Object.keys(Object.getPrototypeOf(obj)).length) {\n        keys = keys.concat(Object.keys(Object.getPrototypeOf(obj)));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return keys;\n}\n/**\n * @param {Column[]} column - Defines the Column\n * @returns {number} Returns the column Depth\n * @hidden\n */\nexport function measureColumnDepth(column) {\n    var max = 0;\n    for (var i = 0; i < column.length; i++) {\n        var depth = checkDepth(column[i], 0);\n        if (max < depth) {\n            max = depth;\n        }\n    }\n    return max + 1;\n}\n/**\n * @param {Column} col - Defines the Column\n * @param {number} index - Defines the index\n * @returns {number} Returns the depth\n * @hidden\n */\nexport function checkDepth(col, index) {\n    var max = index;\n    var indices = [];\n    if (col.columns) {\n        index++;\n        for (var i = 0; i < col.columns.length; i++) {\n            indices[i] = checkDepth(col.columns[i], index);\n        }\n        for (var j = 0; j < indices.length; j++) {\n            if (max < indices[j]) {\n                max = indices[j];\n            }\n        }\n        index = max;\n    }\n    return index;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {PredicateModel[]} filteredCols - Defines the PredicateModel\n * @returns {void}\n * @hidden\n */\nexport function refreshFilteredColsUid(gObj, filteredCols) {\n    for (var i = 0; i < filteredCols.length; i++) {\n        filteredCols[i].uid = filteredCols[i].isForeignKey ?\n            getColumnByForeignKeyValue(filteredCols[i].field, gObj.getForeignKeyColumns()).uid\n            : gObj.enableColumnVirtualization ? getColumnModelByFieldName(gObj, filteredCols[i].field).uid\n                : gObj.getColumnByField(filteredCols[i].field).uid;\n    }\n}\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Global;\n(function (Global) {\n    // eslint-disable-next-line prefer-const\n    Global.timer = null;\n})(Global || (Global = {}));\n/**\n * @param {Element} element - Defines the element\n * @returns {Object} Returns the transform values\n * @hidden\n */\nexport function getTransformValues(element) {\n    var style = document.defaultView.getComputedStyle(element, null);\n    var transformV = style.getPropertyValue('transform');\n    var replacedTv = transformV.replace(/,/g, '');\n    var translateX = parseFloat((replacedTv).split(' ')[4]);\n    var translateY = parseFloat((replacedTv).split(' ')[5]);\n    return { width: translateX, height: translateY };\n}\n/**\n * @param {Element} rootElement - Defines the root Element\n * @param {Element} element - Defines the element\n * @returns {void}\n * @hidden\n */\nexport function applyBiggerTheme(rootElement, element) {\n    if (rootElement.classList.contains('e-bigger')) {\n        element.classList.add('e-bigger');\n    }\n}\n/**\n * @param {HTMLElement} mTD - Defines the movable TD\n * @param {HTMLElement} fTD  - Defines the Frozen TD\n * @returns {void}\n * @hidden\n */\nexport function alignFrozenEditForm(mTD, fTD) {\n    if (mTD && fTD) {\n        var mHeight = closest(mTD, '.' + literals.row).getBoundingClientRect().height;\n        var fHeight = closest(fTD, '.' + literals.row).getBoundingClientRect().height;\n        if (mHeight > fHeight) {\n            fTD.style.height = mHeight + 'px';\n        }\n        else {\n            mTD.style.height = fHeight + 'px';\n        }\n    }\n}\n/**\n * @param {Element} row - Defines row element\n * @param {IGrid} gridObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function ensureLastRow(row, gridObj) {\n    var cntOffset = gridObj.getContent().firstElementChild.offsetHeight;\n    return row && row.getBoundingClientRect().top > cntOffset;\n}\n/**\n * @param {Element} row - Defines row element\n * @param {number} rowTop - Defines row top number\n * @returns {boolean} Returns first row is true\n * @hidden\n */\nexport function ensureFirstRow(row, rowTop) {\n    return row && row.getBoundingClientRect().top < rowTop;\n}\n/**\n * @param {number} index - Defines index\n * @param {IGrid} gObj - Defines grid object\n * @returns {boolean} Returns isRowEnteredInGrid\n * @hidden\n */\nexport function isRowEnteredInGrid(index, gObj) {\n    var rowHeight = gObj.getRowHeight();\n    var startIndex = gObj.getContent().firstElementChild.scrollTop / rowHeight;\n    var endIndex = startIndex + (gObj.getContent().firstElementChild.offsetHeight / rowHeight);\n    return index < endIndex && index > startIndex;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} data - Defines the query\n * @returns {number} Returns the edited data index\n * @hidden\n */\nexport function getEditedDataIndex(gObj, data) {\n    var keyField = gObj.getPrimaryKeyFieldNames()[0];\n    var dataIndex;\n    gObj.getCurrentViewRecords().filter(function (e, index) {\n        if (e[keyField] === data[keyField]) {\n            dataIndex = index;\n        }\n    });\n    return dataIndex;\n}\n/**\n * @param {Object} args - Defines the argument\n * @param {Query} query - Defines the query\n * @returns {FilterStateObj} Returns the filter state object\n * @hidden\n */\nexport function eventPromise(args, query) {\n    var state = getStateEventArgument(query);\n    var def = new Deferred();\n    state.dataSource = def.resolve;\n    state.action = args;\n    return { state: state, deffered: def };\n}\n/**\n * @param {Query} query - Defines the query\n * @returns {Object} Returns the state event argument\n * @hidden\n */\nexport function getStateEventArgument(query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return data;\n}\n/**\n * @param {IGrid} gObj - Defines the Igrid\n * @returns {boolean} Returns the ispercentageWidth\n * @hidden\n */\nexport function ispercentageWidth(gObj) {\n    var columns = gObj.getVisibleColumns();\n    var percentageCol = 0;\n    var undefinedWidthCol = 0;\n    for (var i = 0; i < columns.length; i++) {\n        if (isUndefined(columns[i].width)) {\n            undefinedWidthCol++;\n        }\n        else if (columns[i].width.toString().indexOf('%') !== -1) {\n            percentageCol++;\n        }\n    }\n    return (gObj.width === 'auto' || typeof (gObj.width) === 'string' && gObj.width.indexOf('%') !== -1) &&\n        !gObj.groupSettings.showGroupedColumn && gObj.groupSettings.columns.length\n        && percentageCol && !undefinedWidthCol;\n}\n/**\n * @param {IGrid} gObj - Defines the IGrid\n * @param {Row<Column>[]} rows - Defines the row\n * @param {HTMLTableRowElement[]} rowElms - Row elements\n * @param {number} index - Row index\n * @returns {void}\n * @hidden\n */\nexport function resetRowIndex(gObj, rows, rowElms, index) {\n    var startIndex = index ? index : 0;\n    for (var i = 0; i < rows.length; i++) {\n        if (rows[i].isDataRow) {\n            rows[i].index = startIndex;\n            rows[i].isAltRow = gObj.enableAltRow ? startIndex % 2 !== 0 : false;\n            rowElms[i].setAttribute(literals.ariaRowIndex, startIndex.toString());\n            if (rows[i].isAltRow) {\n                rowElms[i].classList.add('e-altrow');\n            }\n            else {\n                rowElms[i].classList.remove('e-altrow');\n            }\n            for (var j = 0; j < rowElms[i].cells.length; j++) {\n                rowElms[i].cells[j].setAttribute('index', startIndex.toString());\n            }\n            startIndex++;\n        }\n    }\n    if (!rows.length) {\n        gObj.renderModule.emptyRow(true);\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Object} changes - Defines the changes\n * @param {string} type - Defines the type\n * @param {string} keyField - Defines the keyfield\n * @returns {void}\n * @hidden\n */\nexport function compareChanges(gObj, changes, type, keyField) {\n    var newArray = gObj.dataToBeUpdated[type].concat(changes[type]).reduce(function (r, o) {\n        r[o[keyField]] = r[o[keyField]] === undefined ? o : Object.assign(r[o[keyField]], o);\n        return r;\n    }, {});\n    gObj.dataToBeUpdated[type] = Object.keys(newArray).map(function (k) { return newArray[k]; });\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {void}\n * @hidden\n */\nexport function setRowElements(gObj) {\n    if (gObj.isFrozenGrid()) {\n        (gObj).contentModule.rowElements =\n            [].slice.call(gObj.element.querySelectorAll('.e-movableheader .e-row, .e-movablecontent .e-row'));\n        var cls = gObj.getFrozenMode() === literals.leftRight ? '.e-frozen-left-header .e-row, .e-frozen-left-content .e-row'\n            : '.e-frozenheader .e-row, .e-frozencontent .e-row';\n        (gObj).contentModule.freezeRowElements =\n            [].slice.call(gObj.element.querySelectorAll(cls));\n        if (gObj.getFrozenMode() === literals.leftRight) {\n            gObj.contentModule.frozenRightRowElements =\n                [].slice.call(gObj.element.querySelectorAll('.e-frozen-right-header .e-row, .e-frozen-right-content .e-row'));\n        }\n    }\n    else {\n        (gObj).contentModule.rowElements =\n            [].slice.call(gObj.element.querySelectorAll('.e-row:not(.e-addedrow)'));\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @param {Cell<Column>} cells - Defines the callback function\n * @param {freezeTable} tableName - Defines the row\n * @returns {Cell<Column>[]} Returns the cell\n * @hidden\n */\nexport function splitFrozenRowObjectCells(gObj, cells, tableName) {\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n    var right = gObj.getFrozenRightColumnsCount();\n    var frozenMode = gObj.getFrozenMode();\n    var drag = gObj.isRowDragable() ? 1 : 0;\n    var rightIndex = frozenMode === 'Right' ? left + movable : left + movable + drag;\n    var mvblIndex = frozenMode === 'Right' ? left : left + drag;\n    var mvblEndIdx = frozenMode === 'Right' ? cells.length - right - drag\n        : right ? cells.length - right : cells.length;\n    if (tableName === literals.frozenLeft) {\n        cells = cells.slice(0, left ? left + drag : cells.length);\n    }\n    else if (tableName === literals.frozenRight) {\n        cells = cells.slice(rightIndex, cells.length);\n    }\n    else if (tableName === 'movable') {\n        cells = cells.slice(mvblIndex, mvblEndIdx);\n    }\n    return cells;\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function gridActionHandler(gObj, callBack, rows, force, rowObj) {\n    if (rows[0].length || force) {\n        if (rowObj) {\n            callBack(literals.frozenLeft, rows[0], rowObj[0]);\n        }\n        else {\n            callBack(literals.frozenLeft, rows[0]);\n        }\n    }\n    if (gObj.isFrozenGrid() && (rows[1].length || force)) {\n        if (rowObj) {\n            callBack('movable', rows[1], rowObj[1]);\n        }\n        else {\n            callBack('movable', rows[1]);\n        }\n    }\n    if ((gObj.getFrozenMode() === literals.leftRight || gObj.getFrozenMode() === 'Right') && (rows[2].length || force)) {\n        if (rowObj) {\n            callBack(literals.frozenRight, rows[2], rowObj[2]);\n        }\n        else {\n            callBack(literals.frozenRight, rows[2]);\n        }\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @returns {Row<Column>} Returns the row\n * @hidden\n */\nexport function getGridRowObjects(gObj) {\n    return [gObj.getFrozenMode() !== 'Right' ? gObj.getRowsObject() : [], gObj.getMovableRowsObject(), gObj.getFrozenRightRowsObject()];\n}\n/**\n * @param {IGrid} gObj - Defines the grid\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getGridRowElements(gObj) {\n    return [\n        gObj.getFrozenMode() !== 'Right' ? gObj.getAllDataRows(true) : [],\n        gObj.getAllMovableDataRows(true), gObj.getAllFrozenRightDataRows(true)\n    ];\n}\n/**\n * @param {Element} row - Defines the row\n * @param {number} start - Defines the start index\n * @param {number} end - Defines the end index\n * @returns {void}\n * @hidden\n */\nexport function sliceElements(row, start, end) {\n    var cells = row.children;\n    var len = cells.length;\n    var k = 0;\n    for (var i = 0; i < len; i++, k++) {\n        if (i >= start && i < end) {\n            continue;\n        }\n        row.removeChild(row.children[k]);\n        k--;\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid Object\n * @param {Column} col - Defines the column\n * @param {number} rowIndex - Defines the rowindex\n * @returns {Element} Returns the element\n * @hidden\n */\nexport function getCellsByTableName(gObj, col, rowIndex) {\n    if (col.getFreezeTableName() === 'movable') {\n        return [].slice.call(gObj.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n    }\n    else if (col.getFreezeTableName() === literals.frozenRight) {\n        return [].slice.call(gObj.getFrozenRightDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n    }\n    else {\n        return [].slice.call(gObj.getDataRows()[rowIndex].getElementsByClassName(literals.rowCell));\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the column\n * @param {Column} col - Defines the index\n * @param {number} rowIndex - Defines the rules\n * @param {number} index - Defines the movable column rules\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getCellByColAndRowIndex(gObj, col, rowIndex, index) {\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n    index = col.getFreezeTableName() === 'movable' ? index - left : col.getFreezeTableName() === literals.frozenRight\n        ? index - (left + movable) : index;\n    return getCellsByTableName(gObj, col, rowIndex)[index];\n}\n/**\n * @param {Column} col - Defines the column\n * @param {number} index - Defines the index\n * @param {Object} rules - Defines the rules\n * @param {Object} mRules - Defines the movable column rules\n * @param {Object} frRules - Defines the Frozen rules\n * @param {number} len - Defines the length\n * @param {boolean} isCustom - Defines custom form validation\n * @returns {void}\n * @hidden\n */\nexport function setValidationRuels(col, index, rules, mRules, frRules, len, isCustom) {\n    if (isCustom) {\n        rules[getComplexFieldID(col.field)] = col.validationRules;\n    }\n    else {\n        if (col.getFreezeTableName() === literals.frozenLeft\n            || (!index && col.getFreezeTableName() === literals.frozenRight) || len === 1) {\n            rules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === 'movable' || !col.getFreezeTableName()) {\n            mRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n        else if (col.getFreezeTableName() === literals.frozenRight) {\n            frRules[getComplexFieldID(col.field)] = col.validationRules;\n        }\n    }\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getMovableTbody(gObj) {\n    var tbody;\n    if (gObj.isFrozenGrid()) {\n        tbody = gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top' ? gObj.getMovableHeaderTbody()\n            : gObj.getMovableContentTbody();\n    }\n    return tbody;\n}\n/**\n * @param {IGrid} gObj - Defines the grid object\n * @returns {Element} Returns the Element\n * @hidden\n */\nexport function getFrozenRightTbody(gObj) {\n    var tbody;\n    if (gObj.getFrozenMode() === literals.leftRight) {\n        tbody = gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top' ? gObj.getFrozenRightHeaderTbody()\n            : gObj.getFrozenRightContentTbody();\n    }\n    return tbody;\n}\n/**\n * @param {Element} tbody - Table body\n * @param {Element} mTbody - Movanle table body\n * @param {Element} frTbody - Frozen right table body\n * @param {Element[]} tr - Table rows\n * @param {Element[]} mTr - Movable table rows\n * @param {Element[]} frTr - Frozen right table rows\n * @param {Function} callBack - Callback function\n * @returns {void}\n * @hidden\n */\nexport function setRowsInTbody(tbody, mTbody, frTbody, tr, mTr, frTr, callBack) {\n    if (tbody && tr) {\n        callBack(tbody, tr);\n    }\n    if (mTbody && mTr) {\n        callBack(mTbody, mTr);\n    }\n    if (frTbody && frTr) {\n        callBack(frTbody, frTr);\n    }\n}\n/**\n * @param {string} numberFormat - Format\n * @param {string} type - Value type\n * @param {boolean} isExcel - Boolean property\n * @returns {string} returns formated value\n * @hidden\n */\nexport function getNumberFormat(numberFormat, type, isExcel) {\n    var format;\n    var intl = new Internationalization();\n    if (type === 'number') {\n        try {\n            format = intl.getNumberPattern({ format: numberFormat, currency: this.currency, useGrouping: true }, true);\n        }\n        catch (error) {\n            format = numberFormat;\n        }\n    }\n    else if (type === 'date' || type === 'time' || type === 'datetime') {\n        try {\n            format = intl.getDatePattern({ skeleton: numberFormat, type: type }, isExcel);\n            if (isNullOrUndefined(format)) {\n                // eslint-disable-next-line\n                throw 'error';\n            }\n        }\n        catch (error) {\n            try {\n                format = intl.getDatePattern({ format: numberFormat, type: type }, isExcel);\n            }\n            catch (error) {\n                format = numberFormat;\n            }\n        }\n    }\n    else {\n        format = numberFormat;\n    }\n    if (type !== 'number') {\n        var patternRegex = /G|H|c|'| a|yy|y|EEEE|E/g;\n        var mtch_1 = { 'G': '', 'H': 'h', 'c': 'd', '\\'': '\"', ' a': ' AM/PM', 'yy': 'yy', 'y': 'yyyy', 'EEEE': 'dddd', 'E': 'ddd' };\n        format = format.replace(patternRegex, function (pattern) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return mtch_1[pattern];\n        });\n    }\n    return format;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @returns {void}\n * @hidden\n */\nexport function addBiggerDialog(gObj) {\n    if (gObj.enableAdaptiveUI) {\n        var dialogs = document.getElementsByClassName('e-responsive-dialog');\n        for (var i = 0; i < dialogs.length; i++) {\n            dialogs[i].classList.add('e-bigger');\n        }\n    }\n}\n/**\n * @param {string} value - specifies the trr\n * @param {Object} mapObject - specifies the idx\n * @returns {Object | string} returns object or string\n * @hidden\n */\nexport function performComplexDataOperation(value, mapObject) {\n    var returnObj;\n    var length = value.split('.').length;\n    var splits = value.split('.');\n    var duplicateMap = mapObject;\n    for (var i = 0; i < length; i++) {\n        returnObj = duplicateMap[splits[i]];\n        duplicateMap = returnObj;\n    }\n    return returnObj;\n}\n/**\n * @param {Object} tr - specifies the trr\n * @param {number} idx - specifies the idx\n * @param {string} displayVal - specifies the displayval\n * @param {Row<Column>} rows - specifies the rows\n * @param {IGrid} parent - Grid instance\n * @param {boolean} isContent - check for content renderer\n * @returns {void}\n * @hidden\n */\nexport function setDisplayValue(tr, idx, displayVal, rows, parent, isContent) {\n    var trs = Object.keys(tr);\n    for (var i = 0; i < trs.length; i++) {\n        var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n        if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n            setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], { 'display': displayVal });\n            if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n                removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n            }\n            if (isContent && parent.isRowDragable()) {\n                var index = parent.getFrozenColumns() ? idx : idx + 1;\n                rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n            }\n            else {\n                rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n            }\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function addRemoveEventListener(parent, evt, isOn, module) {\n    for (var _i = 0, evt_1 = evt; _i < evt_1.length; _i++) {\n        var inst = evt_1[_i];\n        if (isOn) {\n            parent.on(inst.event, inst.handler, module);\n        }\n        else {\n            parent.off(inst.event, inst.handler);\n        }\n    }\n}\n// eslint-disable-next-line\n/** @hidden */\nexport function createEditElement(parent, column, classNames, attr) {\n    var complexFieldName = getComplexFieldID(column.field);\n    attr = Object.assign(attr, {\n        id: parent.element.id + complexFieldName,\n        name: complexFieldName, 'e-mappinguid': column.uid\n    });\n    return parent.createElement('input', {\n        className: classNames, attrs: attr\n    });\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} uid - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByUid(gObj, uid) {\n    var column;\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.uid === uid) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {IGrid} gObj - Grid instance\n * @param {string} field - Defines column's uid\n * @returns {Column} returns column model\n * @hidden\n */\nexport function getColumnModelByFieldName(gObj, field) {\n    var column;\n    if (!gObj.columnModel) {\n        gObj.getColumns();\n    }\n    for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col.field === field) {\n            column = col;\n            break;\n        }\n    }\n    return column;\n}\n/**\n * @param {string} id - Defines component id\n * @param {string[]} evts - Defines events\n * @param {object} handlers - Defines event handlers\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function registerEventHandlers(id, evts, handlers, instance) {\n    instance.eventHandlers[id] = {};\n    for (var i = 0; i < evts.length; i++) {\n        instance.eventHandlers[id][evts[i]] = handlers[evts[i]];\n    }\n}\n/**\n * @param {any} component - Defines component instance\n * @param {string[]} evts - Defines events\n * @param {any} instance - Defines class instance\n * @returns {void}\n * @hidden\n */\n// eslint-disable-next-line\nexport function removeEventHandlers(component, evts, instance) {\n    for (var i = 0; i < evts.length; i++) {\n        if (component.isDestroyed) {\n            break;\n        }\n        component.removeEventListener(evts[i], instance.eventHandlers[component.element.id][evts[i]]);\n    }\n}\n/**\n * @param {IGrid | IXLFilter} parent - Defines parent instance\n * @param {string[]} templates - Defines the templates name which are needs to clear\n * @returns {void}\n * @hidden\n */\nexport function clearReactVueTemplates(parent, templates) {\n    parent.destroyTemplate(templates);\n    if (parent.isReact) {\n        parent.renderTemplates();\n    }\n}\n/**\n *\n * @param { Element } row - Defines row element\n * @returns { number } row index\n */\nexport function getRowIndexFromElement(row) {\n    return parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n}\n/**\n *\n * @param { string[] } fields - Defines grouped fields\n * @param { values } values - Defines caption keys\n * @param { any } instance - Defines dynamic class instance\n * @returns { Predicate } returns filter predicate\n */\n// eslint-disable-next-line\nexport function generateExpandPredicates(fields, values, instance) {\n    var filterCols = [];\n    for (var i = 0; i < fields.length; i++) {\n        var column = instance.parent.getColumnByField(fields[i]);\n        var value = values[i] === 'null' ? null : values[i];\n        var pred = {\n            field: fields[i], predicate: 'or', uid: column.uid, operator: 'equal', type: column.type,\n            matchCase: instance.allowCaseSensitive, ignoreAccent: instance.parent.filterSettings.ignoreAccent\n        };\n        if (value === '' || isNullOrUndefined(value)) {\n            filterCols = filterCols.concat(CheckBoxFilterBase.generateNullValuePredicates(pred));\n        }\n        else {\n            filterCols.push(extend({}, { value: value }, pred));\n        }\n    }\n    return CheckBoxFilterBase.getPredicate(filterCols);\n}\n/**\n *\n * @param { Predicate } pred - Defines filter predicate\n * @returns { Predicate[] } Returns formed predicate\n */\nexport function getPredicates(pred) {\n    var predicateList = [];\n    for (var _i = 0, _a = Object.keys(pred); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        predicateList.push(pred[prop]);\n    }\n    return predicateList;\n}\n/**\n *\n * @param { number } index - Defines group caption indent\n * @param { Row<Column>[] } rowsObject - Defines rows object\n * @returns { { fields: string[], keys: string[] } } Returns grouped keys and values\n */\nexport function getGroupKeysAndFields(index, rowsObject) {\n    var fields = [];\n    var keys = [];\n    for (var i = index; i >= 0; i--) {\n        if (rowsObject[i].isCaptionRow && fields.indexOf(rowsObject[i].data.field) === -1\n            && (rowsObject[i].indent < rowsObject[index].indent || i === index)) {\n            fields.push(rowsObject[i].data.field);\n            keys.push(rowsObject[i].data.key);\n            if (rowsObject[i].indent === 0) {\n                break;\n            }\n        }\n    }\n    return { fields: fields, keys: keys };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}