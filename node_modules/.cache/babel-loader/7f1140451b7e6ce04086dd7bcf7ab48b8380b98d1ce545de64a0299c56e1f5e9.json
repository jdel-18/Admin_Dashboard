{"ast":null,"code":"import { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd, destroy } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * `CommandColumn` used to handle the command column actions.\n *\n * @hidden\n */\nvar CommandColumn = /** @class */function () {\n  function CommandColumn(parent, locator) {\n    this.parent = parent;\n    this.locator = locator;\n    this.initiateRender();\n    this.addEventListener();\n  }\n  CommandColumn.prototype.initiateRender = function () {\n    var cellFac = this.locator.getService('cellRendererFactory');\n    cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n  };\n  CommandColumn.prototype.commandClickHandler = function (e) {\n    var gObj = this.parent;\n    var target = closest(e.target, 'button');\n    if (!target || !closest(e.target, '.e-unboundcell')) {\n      return;\n    }\n    var buttonObj = target.ej2_instances[0];\n    var type = buttonObj.commandType;\n    var uid = target.getAttribute('data-uid');\n    var commandColumn;\n    var row = gObj.getRowObjectFromUID(closest(target, '.' + literals.row).getAttribute('data-uid'));\n    var cols = this.parent.columnModel;\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].commands) {\n        var commandCols = cols[i].commands;\n        for (var j = 0; j < commandCols.length; j++) {\n          var idInString = 'uid';\n          var typeInString = 'type';\n          if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n            commandColumn = commandCols[j];\n          } else {\n            var buttons = [].slice.call(closest(target, '.e-unboundcell').querySelectorAll('button'));\n            var index = buttons.findIndex(function (ele) {\n              return ele === target;\n            });\n            if (index >= 0 && commandCols[index][typeInString] === type) {\n              commandColumn = commandCols[index];\n            }\n          }\n        }\n      }\n    }\n    var args = {\n      cancel: false,\n      target: target,\n      commandColumn: commandColumn,\n      rowData: isNullOrUndefined(row) ? undefined : row.data\n    };\n    this.parent.trigger(commandClick, args, function (commandclickargs) {\n      if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n        return;\n      }\n      switch (type) {\n        case 'Edit':\n          gObj.editModule.endEdit();\n          gObj.editModule.startEdit(closest(target, 'tr'));\n          break;\n        case 'Cancel':\n          gObj.editModule.closeEdit();\n          break;\n        case 'Save':\n          gObj.editModule.endEdit();\n          break;\n        case 'Delete':\n          if (gObj.editSettings.mode !== 'Batch') {\n            gObj.editModule.endEdit();\n          }\n          gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute(literals.ariaRowIndex), 10);\n          gObj.clearSelection();\n          //for toogle issue when dbl click\n          gObj.selectRow(gObj.commandDelIndex, false);\n          gObj.editModule.deleteRecord();\n          gObj.commandDelIndex = undefined;\n          break;\n      }\n    });\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   */\n  CommandColumn.prototype.getModuleName = function () {\n    return 'commandColumn';\n  };\n  /**\n   * To destroy CommandColumn.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  CommandColumn.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.removeEventListener();\n  };\n  CommandColumn.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(click, this.commandClickHandler);\n    this.parent.off(keyPressed, this.keyPressHandler);\n    this.parent.off(initialEnd, this.load);\n    this.parent.off(destroy, this.destroy);\n  };\n  CommandColumn.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.on(click, this.commandClickHandler, this);\n    this.parent.on(keyPressed, this.keyPressHandler, this);\n    this.parent.on(initialEnd, this.load, this);\n    this.parent.on(destroy, this.destroy, this);\n  };\n  CommandColumn.prototype.keyPressHandler = function (e) {\n    if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n      this.commandClickHandler(e);\n      e.preventDefault();\n    }\n  };\n  CommandColumn.prototype.load = function () {\n    var uid = 'uid';\n    var col = this.parent.columnModel;\n    for (var i = 0; i < col.length; i++) {\n      if (col[i].commands) {\n        var commandCol = col[i].commands;\n        for (var j = 0; j < commandCol.length; j++) {\n          commandCol[j][uid] = getUid('gridcommand');\n        }\n      }\n    }\n  };\n  return CommandColumn;\n}();\nexport { CommandColumn };","map":{"version":3,"names":["closest","isNullOrUndefined","click","keyPressed","commandClick","initialEnd","destroy","CellType","CommandColumnRenderer","getUid","literals","CommandColumn","parent","locator","initiateRender","addEventListener","prototype","cellFac","getService","addCellRenderer","commandClickHandler","e","gObj","target","buttonObj","ej2_instances","type","commandType","uid","getAttribute","commandColumn","row","getRowObjectFromUID","cols","columnModel","i","length","commands","commandCols","j","idInString","typeInString","buttons","slice","call","querySelectorAll","index","findIndex","ele","args","cancel","rowData","undefined","data","trigger","commandclickargs","disabled","editModule","endEdit","startEdit","closeEdit","editSettings","mode","commandDelIndex","parseInt","ariaRowIndex","clearSelection","selectRow","deleteRecord","getModuleName","isDestroyed","removeEventListener","off","keyPressHandler","load","on","action","preventDefault","col","commandCol"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/actions/command-column.js"],"sourcesContent":["import { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd, destroy } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * `CommandColumn` used to handle the command column actions.\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent, locator) {\n        this.parent = parent;\n        this.locator = locator;\n        this.initiateRender();\n        this.addEventListener();\n    }\n    CommandColumn.prototype.initiateRender = function () {\n        var cellFac = this.locator.getService('cellRendererFactory');\n        cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n    };\n    CommandColumn.prototype.commandClickHandler = function (e) {\n        var gObj = this.parent;\n        var target = closest(e.target, 'button');\n        if (!target || !closest(e.target, '.e-unboundcell')) {\n            return;\n        }\n        var buttonObj = target.ej2_instances[0];\n        var type = buttonObj.commandType;\n        var uid = target.getAttribute('data-uid');\n        var commandColumn;\n        var row = gObj.getRowObjectFromUID(closest(target, '.' + literals.row).getAttribute('data-uid'));\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].commands) {\n                var commandCols = cols[i].commands;\n                for (var j = 0; j < commandCols.length; j++) {\n                    var idInString = 'uid';\n                    var typeInString = 'type';\n                    if (commandCols[j][idInString] === uid && commandCols[j][typeInString] === type) {\n                        commandColumn = commandCols[j];\n                    }\n                    else {\n                        var buttons = [].slice.call(closest(target, '.e-unboundcell').querySelectorAll('button'));\n                        var index = buttons.findIndex(function (ele) { return ele === target; });\n                        if (index >= 0 && commandCols[index][typeInString] === type) {\n                            commandColumn = commandCols[index];\n                        }\n                    }\n                }\n            }\n        }\n        var args = {\n            cancel: false,\n            target: target,\n            commandColumn: commandColumn,\n            rowData: isNullOrUndefined(row) ? undefined : row.data\n        };\n        this.parent.trigger(commandClick, args, function (commandclickargs) {\n            if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n                return;\n            }\n            switch (type) {\n                case 'Edit':\n                    gObj.editModule.endEdit();\n                    gObj.editModule.startEdit(closest(target, 'tr'));\n                    break;\n                case 'Cancel':\n                    gObj.editModule.closeEdit();\n                    break;\n                case 'Save':\n                    gObj.editModule.endEdit();\n                    break;\n                case 'Delete':\n                    if (gObj.editSettings.mode !== 'Batch') {\n                        gObj.editModule.endEdit();\n                    }\n                    gObj.commandDelIndex = parseInt(closest(target, 'tr').getAttribute(literals.ariaRowIndex), 10);\n                    gObj.clearSelection();\n                    //for toogle issue when dbl click\n                    gObj.selectRow(gObj.commandDelIndex, false);\n                    gObj.editModule.deleteRecord();\n                    gObj.commandDelIndex = undefined;\n                    break;\n            }\n        });\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * To destroy CommandColumn.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    CommandColumn.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(click, this.commandClickHandler);\n        this.parent.off(keyPressed, this.keyPressHandler);\n        this.parent.off(initialEnd, this.load);\n        this.parent.off(destroy, this.destroy);\n    };\n    CommandColumn.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(click, this.commandClickHandler, this);\n        this.parent.on(keyPressed, this.keyPressHandler, this);\n        this.parent.on(initialEnd, this.load, this);\n        this.parent.on(destroy, this.destroy, this);\n    };\n    CommandColumn.prototype.keyPressHandler = function (e) {\n        if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n            this.commandClickHandler(e);\n            e.preventDefault();\n        }\n    };\n    CommandColumn.prototype.load = function () {\n        var uid = 'uid';\n        var col = this.parent.columnModel;\n        for (var i = 0; i < col.length; i++) {\n            if (col[i].commands) {\n                var commandCol = col[i].commands;\n                for (var j = 0; j < commandCol.length; j++) {\n                    commandCol[j][uid] = getUid('gridcommand');\n                }\n            }\n        }\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}