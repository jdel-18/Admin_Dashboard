{"ast":null,"code":"import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\n/**\n * CellRendererFactory\n *\n * @hidden\n */\nvar CellRendererFactory = /** @class */function () {\n  function CellRendererFactory() {\n    this.cellRenderMap = {};\n  }\n  CellRendererFactory.prototype.addCellRenderer = function (name, type) {\n    name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n    if (isNullOrUndefined(this.cellRenderMap[name])) {\n      this.cellRenderMap[name] = type;\n    }\n  };\n  CellRendererFactory.prototype.getCellRenderer = function (name) {\n    name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n    if (isNullOrUndefined(this.cellRenderMap[name])) {\n      // eslint-disable-next-line no-throw-literal\n      throw \"The cellRenderer \" + name + \" is not found\";\n    } else {\n      return this.cellRenderMap[name];\n    }\n  };\n  return CellRendererFactory;\n}();\nexport { CellRendererFactory };","map":{"version":3,"names":["isNullOrUndefined","getEnumValue","CellType","CellRendererFactory","cellRenderMap","prototype","addCellRenderer","name","type","getCellRenderer"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/services/cell-render-factory.js"],"sourcesContent":["import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\n/**\n * CellRendererFactory\n *\n * @hidden\n */\nvar CellRendererFactory = /** @class */ (function () {\n    function CellRendererFactory() {\n        this.cellRenderMap = {};\n    }\n    CellRendererFactory.prototype.addCellRenderer = function (name, type) {\n        name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n        if (isNullOrUndefined(this.cellRenderMap[name])) {\n            this.cellRenderMap[name] = type;\n        }\n    };\n    CellRendererFactory.prototype.getCellRenderer = function (name) {\n        name = typeof name === 'string' ? name : getEnumValue(CellType, name);\n        if (isNullOrUndefined(this.cellRenderMap[name])) {\n            // eslint-disable-next-line no-throw-literal\n            throw \"The cellRenderer \" + name + \" is not found\";\n        }\n        else {\n            return this.cellRenderMap[name];\n        }\n    };\n    return CellRendererFactory;\n}());\nexport { CellRendererFactory };\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,YAAY,QAAQ,sBAAsB;AACtE,SAASC,QAAQ,QAAQ,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA,IAAIC,mBAAmB,GAAG,aAAe,YAAY;EACjD,SAASA,mBAAmBA,CAAA,EAAG;IAC3B,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;EAC3B;EACAD,mBAAmB,CAACE,SAAS,CAACC,eAAe,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAClED,IAAI,GAAG,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGN,YAAY,CAACC,QAAQ,EAAEK,IAAI,CAAC;IACrE,IAAIP,iBAAiB,CAAC,IAAI,CAACI,aAAa,CAACG,IAAI,CAAC,CAAC,EAAE;MAC7C,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC,GAAGC,IAAI;IACnC;EACJ,CAAC;EACDL,mBAAmB,CAACE,SAAS,CAACI,eAAe,GAAG,UAAUF,IAAI,EAAE;IAC5DA,IAAI,GAAG,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGN,YAAY,CAACC,QAAQ,EAAEK,IAAI,CAAC;IACrE,IAAIP,iBAAiB,CAAC,IAAI,CAACI,aAAa,CAACG,IAAI,CAAC,CAAC,EAAE;MAC7C;MACA,MAAM,mBAAmB,GAAGA,IAAI,GAAG,eAAe;IACtD,CAAC,MACI;MACD,OAAO,IAAI,CAACH,aAAa,CAACG,IAAI,CAAC;IACnC;EACJ,CAAC;EACD,OAAOJ,mBAAmB;AAC9B,CAAC,CAAC,CAAE;AACJ,SAASA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}