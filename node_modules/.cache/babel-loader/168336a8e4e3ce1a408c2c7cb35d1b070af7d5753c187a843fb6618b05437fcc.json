{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */function () {\n  /**\n   * Constructor for the Grid selection module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n    this.preventFocus = false;\n    /**\n     *  @hidden\n     */\n    this.selectedColumnsIndexes = [];\n    this.checkBoxState = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.deSelectedData = [];\n    this.needColumnSelection = false;\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    this.cellselected = false;\n    this.isMultiSelection = false;\n    this.isAddRowsToSelection = false;\n    this.initialRowSelection = false;\n    this.isPrevRowSelection = false;\n    this.isKeyAction = false;\n    this.isRowDragSelected = false;\n    /**\n     * @hidden\n     */\n    this.autoFillRLselection = true;\n    this.bottom = '0 0 2px 0';\n    this.top = '2px 0 0 0';\n    /* eslint-disable */\n    this.right_bottom = '0 2px 2px 0';\n    this.bottom_left = '0 0 2px 2px';\n    this.top_right = '2px 2px 0 0';\n    this.top_left = '2px 0 0 2px';\n    this.top_bottom = '2px 0 2px 0';\n    this.top_right_bottom = '2px 2px 2px 0';\n    this.top_bottom_left = '2px 0 2px 2px';\n    this.top_right_left = '2px 2px 0 2px';\n    this.right_bottom_left = '0 2px 2px 2px';\n    this.all_border = '2px';\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    this.render();\n  };\n  /**\n   * The function used to trigger onActionBegin\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n  Selection.prototype.fDataUpdate = function (args) {\n    if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n    this.isMultiSelection = false;\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n  };\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n    if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n      return gObj.getMovableRowByIndex(index);\n    }\n    return null;\n  };\n  Selection.prototype.getSelectedFrozenRightRow = function (index) {\n    var gObj = this.parent;\n    if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n      return gObj.getFrozenRightRowByIndex(index);\n    }\n    return null;\n  };\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ? currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) : this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n    var selectData;\n    var isRemoved = false;\n    if (gObj.enableVirtualization && index > -1) {\n      var e = {\n        selectedIndex: index,\n        isAvailable: true\n      };\n      this.parent.notify(events.selectVirtualRow, e);\n      var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index) : null;\n      if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n        selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n          var prevSelectedData = this.parent.getSelectedRecords();\n          if (prevSelectedData.length > 0) {\n            this.clearRowSelection();\n          }\n        }\n        return;\n      }\n    } else {\n      selectData = this.getRowObj(index).data;\n    }\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.activeTarget();\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? this.isKeyAction && this.parent.isCheckBoxSelection ? false : index === this.selectedRowIndexes[0] : false;\n    this.isKeyAction = false;\n    var args;\n    var can = 'cancel';\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n        return;\n      }\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n      if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n        _this.clearSelectedRow(index);\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        _this.selectRowCallBack();\n      }\n      if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.clearSelection();\n      }\n      if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' || !_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection) {\n        _this.selectRowCheck = true;\n        _this.clearRow();\n      }\n    };\n  };\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n      }\n      this.selectRowIndex(index);\n    }\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.onActionComplete(args, events.rowSelected);\n    }\n    this.isInteracted = false;\n    this.updateRowProps(index);\n  };\n  Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n    if (this.parent.isFrozenGrid()) {\n      this.updateRowSelection(selectedMovableRow, index);\n      if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n        this.updateRowSelection(selectedFrozenRightRow, index);\n      }\n    }\n  };\n  Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n    if (this.parent.isFrozenGrid()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      var frozenRightRow = 'frozenRightRow';\n      var previousFrozenRightRow = 'previousFrozenRightRow';\n      if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n        mObj[frozenRightRow] = frRow;\n        mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n      }\n      targetObj = __assign({}, targetObj, mObj);\n    }\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n  Selection.prototype.selectedDataUpdate = function (selectedData, foreignKeyData, selectedRows, rowIndexes) {\n    for (var i = 0, len = rowIndexes.length; i < len; i++) {\n      var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n      var rowObj = this.getRowObj(currentRow);\n      if (rowObj) {\n        selectedData.push(rowObj.data);\n        selectedRows.push(currentRow);\n        foreignKeyData.push(rowObj.foreignKeyData);\n      }\n    }\n  };\n  /**\n   * Selects a collection of rows by index.\n   *\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @returns {void}\n   */\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n    var gObj = this.parent;\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n    var can = 'cancel';\n    var selectedData = [];\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n    this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, rowIndexes);\n    this.activeTarget();\n    var args = {\n      cancel: false,\n      rowIndexes: rowIndexes,\n      row: selectedRows,\n      rowIndex: rowIndex,\n      target: this.actualTarget,\n      prevRow: gObj.getRows()[this.prevRowIndex],\n      previousRowIndex: this.prevRowIndex,\n      isInteracted: this.isInteracted,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      data: selectedData,\n      isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n      foreignKeyData: foreignKeyData\n    };\n    args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n        return;\n      }\n      _this.clearRow();\n      _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n      var selectRowFn = function (index) {\n        _this.updateRowSelection(gObj.getRowByIndex(index), index);\n        if (gObj.isFrozenGrid()) {\n          var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index) : undefined;\n          _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n        }\n        _this.updateRowProps(rowIndex);\n      };\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n          var rowIdx = rowIndexes_1[_i];\n          selectRowFn(rowIdx);\n        }\n      } else {\n        selectRowFn(rowIndex);\n      }\n      args = {\n        rowIndexes: rowIndexes,\n        row: selectedRows,\n        rowIndex: rowIndex,\n        target: _this.actualTarget,\n        prevRow: gObj.getRows()[_this.prevRowIndex],\n        previousRowIndex: _this.prevRowIndex,\n        data: _this.getSelectedRecords(),\n        isInteracted: _this.isInteracted,\n        isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n      args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      if (_this.isRowSelected) {\n        _this.onActionComplete(args, events.rowSelected);\n      }\n      _this.isInteracted = false;\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   *\n   * @param {number} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedData = [];\n    var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) : this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n    if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n      return;\n    }\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (this.isMultiCtrlRequest && !checkboxColumn.length) {\n      this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, indexes);\n    }\n    for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n      var rowIndex = rowIndexes_2[_i];\n      var rowObj = this.getRowObj(rowIndex);\n      var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n      this.selectRowIndex(rowIndex);\n      if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n        this.isAddRowsToSelection = true;\n        this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n        if (this.isCancelDeSelect) {\n          return;\n        }\n        this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n        this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n        this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n        selectedRow.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n        if (selectedMovableRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n        if (selectedFrozenRightRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n          selectedFrozenRightRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n        this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n        this.isInteracted = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n      } else {\n        this.activeTarget();\n        args = {\n          cancel: false,\n          data: selectedData.length ? selectedData : rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRows.length ? selectedRows : selectedRow,\n          target: this.actualTarget,\n          prevRow: gObj.getRows()[this.prevRowIndex],\n          previousRowIndex: this.prevRowIndex,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n          rowIndexes: indexes\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n        if (!isNullOrUndefined(args) && args[can] === true) {\n          this.disableInteracted();\n          return;\n        }\n        if (this.isSingleSel()) {\n          this.clearRow();\n        }\n        this.updateRowSelection(selectedRow, rowIndex);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n      }\n      if (!isUnSelected) {\n        args = {\n          data: selectedData.length ? selectedData : rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRows.length ? selectedRows : selectedRow,\n          target: this.actualTarget,\n          prevRow: gObj.getRows()[this.prevRowIndex],\n          previousRowIndex: this.prevRowIndex,\n          foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n          rowIndexes: indexes\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.onActionComplete(args, events.rowSelected);\n      }\n      this.isInteracted = false;\n      this.updateRowProps(rowIndex);\n      if (this.isSingleSel()) {\n        break;\n      }\n    }\n  };\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = [];\n    // eslint-disable-next-line prefer-const\n    var _a = startIndex <= endIndex ? {\n        i: startIndex,\n        max: endIndex\n      } : {\n        i: endIndex,\n        max: startIndex\n      },\n      i = _a.i,\n      max = _a.max;\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n    return indexes;\n  };\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.toggle) {\n      var selectedEle = this.parent.getRowByIndex(index);\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n      this.removed = true;\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n    if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n      if (!this.parent.isPersistSelection) {\n        this.ensureCheckboxFieldSelection();\n      }\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n      if (pKey_1 === null) {\n        return;\n      }\n      rowObj.isSelected = chkState;\n      if (chkState) {\n        this.selectedRowState[pKey_1] = chkState;\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n  Selection.prototype.updatePersistDelete = function (pKey) {\n    var _this = this;\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n    }\n  };\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n        setChecked(chkBox, chkState);\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n    if (this.parent.isFrozenGrid() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n      if (this.parent.contextMenuModule && this.mouseButton === 2) {\n        target = this.parent.contextMenuModule.cell;\n      }\n      if (!target) {\n        return;\n      }\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.clearSelection = function () {\n    this.checkSelectAllClicked = true;\n    if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.clearColumnSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n      this.enableSelectMultiTouch = false;\n      this.isInteracted = false;\n      this.checkSelectAllClicked = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var fRightRow_1 = [];\n      var rowIndex_1 = [];\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n        if (gObj.isFrozenGrid()) {\n          var mRows = gObj.getMovableRows();\n          if (mRows && mRows.length) {\n            mRow_1.push(mRows[this.selectedRowIndexes[i]]);\n          }\n          if (gObj.getFrozenMode() === literals.leftRight) {\n            var frRows = gObj.getFrozenRightRows();\n            if (frRows && frRows.length) {\n              fRightRow_1.push(frRows[this.selectedRowIndexes[i]]);\n            }\n          }\n        }\n      }\n      if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        this.isRowClicked = this.checkSelectAllClicked ? true : false;\n      }\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || _this.isInteracted && !_this.parent.isPersistSelection)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n              _this.updatePersistSelectedData(true);\n            }\n          }\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n            _this.clearRowCheck = false;\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n              _this.selectRowCheck = false;\n            }\n          }\n          return;\n        }\n        var element = [].slice.call(rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }));\n        for (var j = 0; j < element.length; j++) {\n          if (!_this.disableUI) {\n            element[j].removeAttribute('aria-selected');\n            _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n          }\n          // tslint:disable-next-line:align\n          if (!_this.isPrevRowSelection) {\n            _this.updatePersistCollection(element[j], false);\n          }\n          _this.updateCheckBoxes(element[j]);\n        }\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n          if (movableRow) {\n            if (!_this.disableUI) {\n              movableRow.removeAttribute('aria-selected');\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n            _this.updateCheckBoxes(movableRow);\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(movableRow, false);\n            }\n          }\n          var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n          if (frRow) {\n            if (!_this.disableUI) {\n              frRow.removeAttribute('aria-selected');\n              _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n            _this.updateCheckBoxes(frRow);\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(frRow, false);\n            }\n          }\n        }\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n        _this.selectRowIndex(-1);\n        _this.isPrevRowSelection = false;\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n          _this.clearRowCheck = false;\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n            _this.selectRowCheck = false;\n          }\n        }\n      }, fRightRow_1);\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n    var _this = this;\n    if (this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked) || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n      var rowDeselectObj = {\n        rowIndex: rowIndex[0],\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' && !isSingleDeSel && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n      if (type === 'rowDeselected') {\n        delete rowDeselectObj.cancel;\n      }\n      var rowInString = 'row';\n      var target_2 = 'target';\n      var rowidx = 'rowIndex';\n      var rowidxex = 'rowIndexes';\n      var dataTxt = 'data';\n      var foreignKey = 'foreignKeyData';\n      rowDeselectObj[rowInString] = row;\n      rowDeselectObj[target_2] = this.actualTarget;\n      var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n      if (isHeaderCheckBxClick || rowIndex.length > 1) {\n        rowDeselectObj[rowidx] = rowIndex[0];\n        rowDeselectObj[rowidxex] = rowIndex;\n      } else if (rowIndex.length === 1) {\n        rowDeselectObj[dataTxt] = rowDeselectObj[dataTxt][0];\n        rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n        rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n        if (this.isAddRowsToSelection) {\n          rowDeselectObj[rowidxex] = rowIndex;\n        }\n      }\n      this.parent.trigger(type, this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, {\n        mRow: mRow,\n        frozenRightRow: frozenRightRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n        if (!_this.isCancelDeSelect || !_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n          if (mRow) {\n            _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n          }\n          if (frozenRightRow) {\n            _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n          }\n        }\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n    return {};\n  };\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n    var frzCols = gObj.isFrozenGrid();\n    if (frzCols) {\n      if (col.getFreezeTableName() === 'movable') {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n      return null;\n    }\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n      var currentCell = 'currentCell';\n      args[currentCell] = selectedCell;\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n      this.cellselected = true;\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n      _this.clearCell();\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n      if (!isToggle) {\n        var args = {\n          data: selectedData,\n          cellIndex: cellIndex,\n          currentCell: selectedCell,\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = _this.prevECIdxs;\n        _this.updateCellProps(cellIndex, cellIndex);\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n    if (!this.isCellType()) {\n      return;\n    }\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var previousRowCellIndex = 'previousRowCellIndex';\n    args[previousRowCellIndex] = this.prevECIdxs;\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n      _this.clearCell();\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n        cellIndexes = [];\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n          if (!selectedCell) {\n            continue;\n          }\n          cellIndexes.push(j);\n          _this.updateCellSelection(selectedCell);\n          _this.addAttribute(selectedCell);\n        }\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n      var cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: edIndex,\n        currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n        selectedRowCellIndex: _this.selectedRowCellIndexes,\n        previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n      if (!_this.isDragged) {\n        _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        _this.cellselected = true;\n      }\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n    var cellSelectArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var previousRowCellIndex = 'previousRowCellIndex';\n    cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n        if (!selectedCell) {\n          continue;\n        }\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      selectedRowCellIndex: this.selectedRowCellIndexes,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var prvRowCellIndex = 'previousRowCellIndex';\n    cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   *\n   * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n    var gObj = this.parent;\n    var selectedCell;\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n    this.hideAutoFill();\n    var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n    var rowObj;\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rowObj = rows[cellIndexes[0].rowIndex];\n    }, [!col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [], col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [], col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []]);\n    var foreignKeyData = [];\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n      var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n      foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n      var args = {\n        cancel: false,\n        data: selectedData,\n        cellIndex: cellIndexes[0],\n        isShiftPressed: this.isMultiShiftRequest,\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var prvRowCellIndex = 'previousRowCellIndex';\n      args[prvRowCellIndex] = this.prevECIdxs;\n      var isUnSelected = index > -1;\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n      if (!isUnSelected) {\n        var cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          currentCell: selectedCell,\n          previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n          selectedRowCellIndex: this.selectedRowCellIndexes\n        };\n        cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        this.cellselected = true;\n      }\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var frzCols = this.parent.isFrozenGrid();\n    var col = this.parent.getColumnByIndex(index);\n    var cells = getCellsByTableName(this.parent, col, rowIndex);\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n        if (colIndex === index) {\n          if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n              m += this.parent.getFrozenLeftCount();\n            } else if (col.getFreezeTableName() === literals.frozenRight) {\n              m += this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount();\n            }\n          }\n          return m;\n        }\n      }\n    }\n    return -1;\n  };\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n  };\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n    if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n    selectedCell.classList.add('e-cellselectionbackground');\n    if (selectedCell.classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n    this.addAttribute(selectedCell);\n  };\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var frzCols = gObj.isFrozenGrid();\n      this.hideAutoFill();\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n            cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n      if (this.bdrElement) {\n        this.showHideBorders('none');\n      }\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n      if (!this.isDragged && this.cellselected) {\n        this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n      }\n    }\n  };\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n    if (gObj.isFrozenGrid()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n      }\n    }\n    var cells = [];\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n    }\n    return cells;\n  };\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n        this.isRowDragSelected = true;\n      } else {\n        var td = parentsUntil(e.target, literals.rowCell);\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, literals.rowCell);\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n        }\n      }\n    }\n  };\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      this.parent.element.classList.add('e-enabledboxbdr');\n      if (!this.bdrElement) {\n        this.createBorders();\n      }\n      this.positionBorders();\n    } else {\n      this.showHideBorders('none');\n    }\n  };\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n  Selection.prototype.isFirstRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[0];\n  };\n  Selection.prototype.isFirstCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[0] === cell;\n  };\n  Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n    var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).filter(function (ele) {\n      return ele.style.display === '';\n    });\n    if (cells.length) {\n      var isFrozen = this.parent.isFrozenGrid();\n      var start = cells[0];\n      var end = cells[cells.length - 1];\n      var stOff = start.getBoundingClientRect();\n      var endOff = end.getBoundingClientRect();\n      var parentOff = start.offsetParent.getBoundingClientRect();\n      var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n      var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') && this.isFirstRow(start) ? 1.5 : 0;\n      var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n      var rightOffset = (this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3') || this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')) && this.isFirstCell(start) ? 1 : 0;\n      if (this.parent.enableRtl) {\n        border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n        border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n      } else {\n        border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n        border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n      }\n      border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n      border.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' : endOff.height + topOffSet - rowHeight + 1 + 'px';\n      this.selectDirection += bdrStr;\n    } else {\n      border.style.display = 'none';\n    }\n  };\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n    if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n    this.selectDirection = '';\n    this.showHideBorders('');\n    this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n    if (this.parent.isFrozenGrid()) {\n      this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n      }\n    }\n    if (this.parent.frozenRows) {\n      this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n      if (this.parent.isFrozenGrid()) {\n        this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n        }\n      }\n    }\n    this.applyBorders(this.selectDirection);\n  };\n  /* eslint-enable */\n  Selection.prototype.applyBothFrozenBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n    switch (str.length) {\n      case 6:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n          this.mcBdrElement.style.borderWidth = this.bottom;\n          this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n          this.mhBdrElement.style.borderWidth = this.top;\n          this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n        }\n        break;\n      case 4:\n        {\n          if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          }\n          if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n          }\n        }\n        break;\n      case 3:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n          this.mcBdrElement.style.borderWidth = this.top_bottom;\n          this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.mhBdrElement.style.borderWidth = this.top_bottom;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n          }\n        }\n        break;\n      case 2:\n        {\n          if (str.includes('1')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            if (this.parent.frozenRows) {\n              this.fhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n          if (str.includes('2')) {\n            this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            if (this.parent.frozenRows) {\n              this.mhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n          if (str.includes('3')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.bdrElement.style.borderWidth = this.right_bottom_left;\n          }\n          if (str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n          if (str.includes('5')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            if (this.parent.frozenRows) {\n              this.frhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n          if (str.includes('6')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n        }\n        break;\n      default:\n        this.bdrElement.style.borderWidth = this.all_border;\n        this.mcBdrElement.style.borderWidth = this.all_border;\n        this.frcBdrElement.style.borderWidth = this.all_border;\n        if (this.parent.frozenRows) {\n          this.fhBdrElement.style.borderWidth = this.all_border;\n          this.mhBdrElement.style.borderWidth = this.all_border;\n          this.frhBdrElement.style.borderWidth = this.all_border;\n        }\n        break;\n    }\n  };\n  Selection.prototype.applyBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      this.applyBothFrozenBorders(str);\n    } else {\n      switch (str.length) {\n        case 4:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            } else {\n              this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            }\n          }\n          break;\n        case 2:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n              }\n            } else {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n              if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              }\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n                if (this.parent.isFrozenGrid()) {\n                  this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                }\n              }\n            }\n          }\n          break;\n        default:\n          this.bdrElement.style.borderWidth = this.all_border;\n          if (this.parent.isFrozenGrid()) {\n            this.mcBdrElement.style.borderWidth = this.all_border;\n          }\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = this.all_border;\n            if (this.parent.isFrozenGrid()) {\n              this.mhBdrElement.style.borderWidth = this.all_border;\n            }\n          }\n          break;\n      }\n    }\n  };\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrElement) {\n      this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdr',\n        styles: 'width: 2px; border-width: 0;'\n      }));\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mcbdr',\n          styles: 'height: 2px; border-width: 0;'\n        }));\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frcbdr',\n            styles: 'height: 2px; border-width: 0;'\n          }));\n        }\n      }\n      if (this.parent.frozenRows) {\n        this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_fhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mhbdr',\n          styles: 'height: 2px;'\n        }));\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frhbdr',\n            styles: 'height: 2px;'\n          }));\n        }\n      }\n    }\n  };\n  Selection.prototype.showHideBorders = function (display) {\n    if (this.bdrElement) {\n      this.bdrElement.style.display = display;\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement.style.display = display;\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement.style.display = display;\n        }\n      }\n      if (this.parent.frozenRows) {\n        this.fhBdrElement.style.display = display;\n      }\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement.style.display = display;\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement.style.display = display;\n        }\n      }\n    }\n  };\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n    this.positionAFBorders();\n  };\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var top = endOff.top - stOff.top > 0 ? 1 : 0;\n    var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n    var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) || parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    var parentRect = this.parent.element.getBoundingClientRect();\n    var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n    var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n    var scrollTop = sTop - this.startAFCell.offsetTop;\n    var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n    var totalHeight = this.parent.element.clientHeight;\n    var totalWidth = this.parent.element.clientWidth;\n    scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    var left = stOff.left - parentRect.left;\n    if (!this.parent.enableRtl) {\n      this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n      this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n      this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n      this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) - firstCellLeft + 1 + 'px';\n      if (totalWidth <= parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) {\n        var leftRemove = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) - totalWidth;\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n      }\n    } else {\n      var scrolloffSet = parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader) ? stOff.right - this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width - parentRect.left : 0;\n      this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n      this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n      this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n      this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10) - firstCellLeft + 1 + 'px';\n      if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n        this.bdrAFTop.style.left = '0px';\n      }\n    }\n    this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' : endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n    this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n    this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n    if (totalHeight <= parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10)) {\n      var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n      this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n      this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    }\n  };\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.value));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n    var cls = '.e-cellselectionbackground';\n    var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n    if (this.parent.isFrozenGrid()) {\n      cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n      }\n    }\n    return cells;\n  };\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n    switch (true) {\n      //direction\n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, literals.rowCell):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx &&\n      //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            var c = 0;\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n        break;\n      case this.autoFillRLselection && startCellIdx > endCellIdx &&\n      // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen &&\n      //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            cells.reverse();\n            var c = 0;\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n        break;\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = trIdx;\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            var c = 0;\n            r--;\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n        break;\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = this.startIndex;\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            r++;\n            var c = 0;\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n        break;\n    }\n  };\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n    if (this.element) {\n      remove(this.element);\n    }\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n    } else {\n      this.mUPTarget = null;\n    }\n    if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell' && e.target.classList.contains(literals.rowCell)) {\n      var target = e.target;\n      var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n      this.isDragged = false;\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n    if (this.isAutoFillSel) {\n      var lastCell = parentsUntil(e.target, literals.rowCell);\n      this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n      this.startAFCell = this.startCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n    if (this.parent.frozenRows) {\n      EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n    }\n    EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n  };\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n      var rindex = parseInt(this.target.getAttribute('index'), 10);\n      var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n      var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) {\n        return ele.style.display === '';\n      });\n      var col = this.parent.getColumnByIndex(index);\n      var isFrozenCol = col.getFreezeTableName() === 'movable';\n      var isFrozenRow = rindex < this.parent.frozenRows;\n      var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight && col.getFreezeTableName() === literals.frozenRight;\n      if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n        if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n          select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n        }\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n        if (!isFrozenRow) {\n          if (!isFrozenCol) {\n            this.parent.getContentTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n          }\n        } else {\n          if (!isFrozenCol) {\n            this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n          }\n        }\n        if (isFrozenRight) {\n          if (isFrozenRow) {\n            this.parent.getFrozenRightHeader().appendChild(this.autofill);\n          } else {\n            this.parent.getFrozenRightContent().appendChild(this.autofill);\n          }\n        }\n      }\n      var cell = cells[cells.length - 1];\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 3 : 0;\n        if (!this.parent.enableRtl) {\n          this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        } else {\n          this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n        }\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n      }\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n  Selection.prototype.mouseDownHandler = function (e) {\n    this.mouseButton = e.button;\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n    if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows || parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n      return;\n    }\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n    if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n        this.isRowDragSelected = false;\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n    this.updateStartEndCells();\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n    if (this.parent.frozenRows) {\n      EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n    }\n    EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n  };\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n      this.clearSelection();\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.evtHandlers = [{\n      event: events.uiUpdate,\n      handler: this.enableAfterRender\n    }, {\n      event: events.initialEnd,\n      handler: this.initializeSelection\n    }, {\n      event: events.rowSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.cellSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.beforeFragAppend,\n      handler: this.clearSelAfterRefresh\n    }, {\n      event: events.columnPositionChanged,\n      handler: this.columnPositionChanged\n    }, {\n      event: events.contentReady,\n      handler: this.initialEnd\n    }, {\n      event: events.rowsRemoved,\n      handler: this.rowsRemoved\n    }, {\n      event: events.headerRefreshed,\n      handler: this.refreshHeader\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.removeEventListener_checkbox();\n  };\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    }\n  };\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    }\n  };\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n    this.setCheckAllState();\n  };\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n      this.initPerisistSelection();\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n    var gObj = this.parent;\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n      if (this.selectedColumnsIndexes.length > 1) {\n        this.clearColumnSelection();\n        this.prevColIndex = undefined;\n      }\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevColIndex = undefined;\n    }\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n    if (!this.parent.isCheckBoxSelection) {\n      this.initPerisistSelection();\n    }\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n    this.drawBorders();\n  };\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n  Selection.prototype.initialEnd = function (e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n    if ((!isFrozen || isFrozen && !isLeftRightFrozen && !e.args.isFrozen || isLeftRightFrozen && e.args.renderFrozenRightContent) && !this.selectedRowIndexes.length) {\n      this.parent.off(events.contentReady, this.initialEnd);\n      this.selectRow(this.parent.selectedRowIndex);\n    }\n  };\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    var gobj = this.parent;\n    gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n      var dataManager = data.getData({}, query);\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n    this.persistSelectedData = res;\n  };\n  Selection.prototype.setRowSelection = function (state) {\n    if (!this.parent.getDataModule().isRemote()) {\n      if (state) {\n        if (this.parent.groupSettings.columns.length) {\n          for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        } else {\n          for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n            var data = _c[_b];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        }\n      } else {\n        this.selectedRowState = {};\n      }\n      // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n    if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n      var mtbody = this.parent.getMovableContentTbody();\n      if (mtbody.querySelector('.e-checkselect')) {\n        rows = this.parent.getMovableRows();\n      }\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frtbody = this.parent.getFrozenRightContentTbody();\n        if (frtbody.querySelector('.e-checkselect')) {\n          rows = this.parent.getFrozenRightRows();\n        }\n      }\n    }\n    this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n    if (this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n    if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n        if (pKey === null) {\n          return;\n        }\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.selectedRowState[pKey] && this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection && chkBox) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n        this.updatePersistCollection(rows[j], checkState);\n      }\n      if (this.isSingleSel() && indexes.length > 0) {\n        this.selectRow(indexes[0], true);\n      } else {\n        this.selectRows(indexes);\n      }\n    }\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.' + literals.editedRow);\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n          var rowObj = this.getRowObj(row);\n          if (!rowObj) {\n            return;\n          }\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n  };\n  Selection.prototype.actionComplete = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add' && this.isCheckedOnAdd) {\n        var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n        this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n      }\n      this.refreshPersistSelection();\n    }\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = e.data;\n      var data = records.slice();\n      for (var i = 0; i < data.length; i++) {\n        if (!isNullOrUndefined(data[i][this.primaryKey])) {\n          this.updatePersistDelete(data[i][this.primaryKey]);\n        }\n      }\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n    if (e.requestType === 'paging') {\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      if (this.selectedRecords.length) {\n        this.isPrevRowSelection = true;\n      }\n      this.refreshPersistSelection();\n    }\n    if (this.parent.enableVirtualization) {\n      this.setCheckAllState();\n    }\n    this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') && this.parent.getSelectedRows().length ? true : false;\n    if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n      var totalRecords = this.parent.getRowsObject();\n      var indexes = [];\n      for (var i = 0; i < totalRecords.length; i++) {\n        if (totalRecords[i].isSelected) {\n          indexes.push(i);\n        }\n      }\n      if (indexes.length) {\n        this.selectRows(indexes);\n      }\n      this.initialRowSelection = true;\n    }\n  };\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var rows = this.parent.getRows();\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() ? this.parent.groupSettings.columns.length ? this.getData().records.slice() : this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n      this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n    this.chkAllCollec = [];\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n    this.isHeaderCheckboxClicked = true;\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n    if (this.parent.isPersistSelection && this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n    this.checkSelectAllAction(!state);\n    this.target = null;\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n    return status;\n  };\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.' + literals.rowCell);\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n    this.isHeaderCheckboxClicked = false;\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n    }\n    if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 && this.parent.editSettings.newRowPosition === 'Top') {\n      ++rIndex;\n    }\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n      if (!pKey) {\n        return;\n      }\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.getDataModule().isRemote()) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        var row = this.parent.getRowByIndex(index);\n        if (index && row && row.getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n  Selection.prototype.isAllSelected = function () {\n    var data = this.getData();\n    for (var i = 0; i < data.length; i++) {\n      var pKey = data[i][this.primaryKey];\n      if (!this.selectedRowState[pKey]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkToSelectAll = true;\n      var checkedLen = Object.keys(this.selectedRowState).length;\n      if (!this.parent.isPersistSelection) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n      if (this.parent.isPersistSelection && !this.parent.getDataModule().isRemote() && (this.parent.searchSettings.key.length || this.parent.filterSettings.columns.length)) {\n        checkToSelectAll = this.isAllSelected();\n      }\n      var input = this.getCheckAllBox();\n      if (input) {\n        var spanEle = input.nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        setChecked(input, false);\n        input.indeterminate = false;\n        if (checkToSelectAll && checkedLen === this.totalRecordsCount && this.totalRecordsCount || (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && this.getData().length && checkedLen === this.getData().length) {\n          addClass([spanEle], ['e-check']);\n          setChecked(input, true);\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n          this.parent.checkAllRows = 'Check';\n        } else if (!this.selectedRowIndexes.length || checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n          addClass([spanEle], ['e-uncheck']);\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n          this.parent.checkAllRows = 'Uncheck';\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n          input.indeterminate = true;\n        }\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n  };\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n    if (this.selectionSettings.persistSelection) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n    if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') || this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell')) {\n      this.isInteracted = true;\n    }\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n    this.isMultiShiftRequest = e.shiftKey;\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') || this.selectionSettings.persistSelection && parentsUntil(target, literals.row) ? true : false;\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n    this.drawBorders();\n    this.updateAutoFillPosition();\n    target = parentsUntil(target, literals.rowCell);\n    if ((target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly || chkSelect) && !this.isRowDragSelected) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n      this.target = target;\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n          ++rIndex;\n        }\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        }\n        this.parent.hoverFrozenRows(e);\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n          this.setCheckAllState();\n        }\n      }\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    } else if (e.target.classList.contains('e-headercell') && !e.target.classList.contains('e-stackedheadercell')) {\n      var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n      this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n    }\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n    if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox)) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.showHideBorders('none');\n    }\n    this.isDragged = false;\n  };\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n    var clear = this.parent.isFrozenGrid() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump && !this.selectionSettings.allowColumnSelection || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space') && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell) && !(e.byKey && e.keyArgs.action === 'space');\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n      return;\n    }\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n      rowIndex = _a[0],\n      cellIndex = _a[1];\n    var prev = this.focus.getPrevIndexes();\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n    if (this.parent.isFrozenGrid()) {\n      var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n      var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n      if (selectedIndexes.length && prev.cellIndex === 0) {\n        prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n      }\n      prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n    if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n      rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10);\n    }\n    if ((headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) && !this.selectionSettings.allowColumnSelection) {\n      return;\n    }\n    this.preventFocus = true;\n    var columnIndex = this.getKeyColIndex(e);\n    if (this.needColumnSelection) {\n      cellIndex = columnIndex;\n    }\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.target = e.element;\n        this.isKeyAction = true;\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n      case 'escape':\n        this.clearSelection();\n        break;\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n        break;\n    }\n    this.needColumnSelection = false;\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n  Selection.prototype.getKeyColIndex = function (e) {\n    var uid;\n    var index = null;\n    var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n    if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n      this.needColumnSelection = e.container.isHeader ? true : false;\n      if (stackedHeader) {\n        if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n          return index;\n        }\n        uid = stackedHeader.getAttribute('e-mappinguid');\n        var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n        var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n        var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n        index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n      } else {\n        index = this.parent.getColumnIndexByUid(e.element.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      }\n    }\n    return index;\n  };\n  /**\n   * Apply ctrl + A key selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n    if (this.isRowType()) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    }\n  };\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n    var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n    var frzCols = this.parent.getFrozenColumns();\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n      }\n    } else {\n      var row = this.contentRenderer.getRowByIndex(rowIndex);\n      if (row) {\n        this.target = row.getElementsByClassName(literals.rowCell)[cIndex];\n      }\n    }\n    this.addAttribute(this.target);\n  };\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    } else if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   *\n   * @param {number} rowIndex - specfies the rowIndex\n   * @param {number} cellIndex - specifies the CellIndex\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n    this.isMultiShiftRequest = false;\n  };\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumnsByRange(this.prevColIndex, cellIndex);\n    } else {\n      this.selectCellsByRange(this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n    this.isMultiShiftRequest = false;\n  };\n  Selection.prototype.getstackedColumns = function (column) {\n    var innerColumnIndexes = [];\n    for (var i = 0, len = column.length; i < len; i++) {\n      if (column[i].columns) {\n        this.getstackedColumns(column[i].columns);\n      } else {\n        innerColumnIndexes.push(column[i]);\n      }\n    }\n    return innerColumnIndexes;\n  };\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n    if (row) {\n      var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} returns the Object\n   */\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n    if (!this.selectionSettings.persistSelection) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n    return selectedData;\n  };\n  /**\n   * Select the column by passing start column index\n   *\n   * @param {number} index - specifies the index\n   * @returns {void}\n   */\n  Selection.prototype.selectColumn = function (index) {\n    var gObj = this.parent;\n    if (isNullOrUndefined(gObj.getColumns()[index])) {\n      return;\n    }\n    var column = gObj.getColumnByIndex(index);\n    var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n    var isColSelected = selectedCol.classList.contains('e-columnselection');\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n    var isMultiColumns = this.selectedColumnsIndexes.length > 1 && this.selectedColumnsIndexes.indexOf(index) > -1;\n    this.clearColDependency();\n    if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n      var args = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(args, events.columnSelecting);\n      if (args.cancel) {\n        this.disableInteracted();\n        return;\n      }\n      if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n        this.updateColSelection(selectedCol, index);\n      }\n      var selectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n    this.updateColProps(index);\n  };\n  /**\n   * Select the columns by passing start and end column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @param  {number} endIndex - specifies the end index\n   * @returns {void}\n   */\n  Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n    var gObj = this.parent;\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n    var indexes = [];\n    if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n      indexes[0] = startIndex;\n    } else {\n      var min = startIndex < endIndex;\n      for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n        indexes.push(i);\n      }\n    }\n    this.selectColumns(indexes);\n  };\n  /**\n   * Select the columns by passing column indexes\n   *\n   * @param  {number[]} columnIndexes - specifies the columnIndexes\n   * @returns {void}\n   */\n  Selection.prototype.selectColumns = function (columnIndexes) {\n    var gObj = this.parent;\n    var selectedCol = this.getselectedCols();\n    if (gObj.selectionSettings.type === 'Single') {\n      columnIndexes = [columnIndexes[0]];\n    }\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n    this.clearColDependency();\n    var selectingArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      cancel: false,\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest\n    };\n    this.onActionBegin(selectingArgs, events.columnSelecting);\n    if (selectingArgs.cancel) {\n      this.disableInteracted();\n      return;\n    }\n    for (var i = 0, len = columnIndexes.length; i < len; i++) {\n      this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n    }\n    selectedCol = this.getselectedCols();\n    var selectedArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex\n    };\n    this.onActionComplete(selectedArgs, events.columnSelected);\n    this.updateColProps(columnIndexes[0]);\n  };\n  /**\n   * Select the column with existing column by passing column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @returns {void}\n   */\n  Selection.prototype.selectColumnWithExisting = function (startIndex) {\n    var gObj = this.parent;\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n    var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n    var selectedCol = this.getselectedCols();\n    if (gObj.selectionSettings.type === 'Single') {\n      this.clearColDependency();\n    }\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n    if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n      this.clearColumnSelection(startIndex);\n    } else {\n      var selectingArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: gObj.getColumnByIndex(startIndex),\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(selectingArgs, events.columnSelecting);\n      if (selectingArgs.cancel) {\n        this.disableInteracted();\n        return;\n      }\n      this.updateColSelection(newCol, startIndex);\n      selectedCol = this.getselectedCols();\n      var selectedArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        column: gObj.getColumnByIndex(startIndex),\n        columnIndexes: this.selectedColumnsIndexes,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n    this.updateColProps(startIndex);\n  };\n  /**\n   * Clear the column selection\n   *\n   * @param {number} clearIndex - specifies the clearIndex\n   * @returns {void}\n   */\n  Selection.prototype.clearColumnSelection = function (clearIndex) {\n    if (this.isColumnSelected) {\n      var gObj = this.parent;\n      if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n        return;\n      }\n      var index = !isNullOrUndefined(clearIndex) ? clearIndex : this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n      var col = gObj.getColumnByIndex(index);\n      var selectedCol = void 0;\n      var column = gObj.getColumnByIndex(index);\n      if (col.getFreezeTableName() === literals.frozenRight) {\n        selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n      } else if (col.getFreezeTableName() === 'movable') {\n        selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n      } else {\n        selectedCol = gObj.getColumnHeaderByUid(column.uid);\n      }\n      var deselectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted\n      };\n      var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n      if (isCanceled) {\n        this.disableInteracted();\n        return;\n      }\n      var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] : [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n      var selectedCells = this.getSelectedColumnCells(clearIndex);\n      for (var i = 0, len = selectedHeader.length; i < len; i++) {\n        addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n      }\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n      }\n      if (!isNullOrUndefined(clearIndex)) {\n        this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n        this.parent.getColumns()[clearIndex].isSelected = false;\n      } else {\n        this.columnDeselect(deselectedArgs, events.columnDeselected);\n        this.selectedColumnsIndexes = [];\n        this.isColumnSelected = false;\n        this.parent.getColumns().filter(function (col) {\n          return col.isSelected = false;\n        });\n      }\n    }\n  };\n  Selection.prototype.getselectedCols = function () {\n    var gObj = this.parent;\n    var selectedCol;\n    if (this.selectedColumnsIndexes.length > 1) {\n      selectedCol = [];\n      for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n        selectedCol.push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n      }\n    } else {\n      selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n    }\n    return selectedCol;\n  };\n  Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n    var gObj = this.parent;\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n    var movableRows;\n    var frRows;\n    if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n      movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, movableRows);\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n        rows = gObj.addMovableRows(rows, frRows);\n      }\n    }\n    var seletedcells = [];\n    var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n    for (var i = 0, len = rows.length; i < len; i++) {\n      seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n    }\n    return seletedcells;\n  };\n  Selection.prototype.columnDeselect = function (args, event) {\n    if (event === 'columnDeselected') {\n      delete args.cancel;\n    }\n    this.onActionComplete(args, event);\n    return args.cancel;\n  };\n  Selection.prototype.updateColProps = function (startIndex) {\n    this.prevColIndex = startIndex;\n    this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n  };\n  Selection.prototype.clearColDependency = function () {\n    this.clearColumnSelection();\n    this.selectedColumnsIndexes = [];\n  };\n  Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n    if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n      return;\n    }\n    var left = this.parent.getFrozenLeftCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var col = this.parent.getColumnByIndex(startIndex);\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows;\n    this.selectedColumnsIndexes.push(startIndex);\n    this.parent.getColumns()[startIndex].isSelected = true;\n    if (col.getFreezeTableName() === literals.frozenRight) {\n      startIndex = startIndex - (left + movable);\n      rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n    } else if (col.getFreezeTableName() === 'movable') {\n      startIndex = startIndex - left;\n      rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n    } else {\n      startIndex = startIndex + this.parent.getIndentCount();\n      rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n    }\n    addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n    for (var j = 0, len = rows.length; j < len; j++) {\n      if (rows[j].classList.contains(literals.row)) {\n        if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) && this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n        } else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n        }\n      }\n    }\n  };\n  Selection.prototype.headerSelectionHandler = function (colIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      this.selectColumn(colIndex);\n    } else if (this.isMultiShiftRequest) {\n      this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n    } else {\n      this.selectColumnWithExisting(colIndex);\n    }\n  };\n  // eslint-disable-next-line camelcase\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n      _this.drawBorders();\n    };\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  };\n  // eslint-disable-next-line camelcase\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n  };\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n  Selection.prototype.dataReady = function (e) {\n    this.isHeaderCheckboxClicked = false;\n    var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n      this.disableUI = !this.parent.enableImmutableMode;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n  Selection.prototype.disableInteracted = function () {\n    this.isInteracted = false;\n  };\n  Selection.prototype.activeTarget = function () {\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n  };\n  return Selection;\n}();\nexport { Selection };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","select","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","addRemoveActiveClasses","removeAddCboxClasses","getCellsByTableName","getCellByColAndRowIndex","parentsUntil","gridActionHandler","events","RenderType","iterateExtend","setChecked","addRemoveEventListener","literals","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","selectedColumnsIndexes","checkBoxState","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","deSelectedData","needColumnSelection","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","cellselected","isMultiSelection","isAddRowsToSelection","initialRowSelection","isPrevRowSelection","isKeyAction","isRowDragSelected","autoFillRLselection","bottom","top","right_bottom","bottom_left","top_right","top_left","top_bottom","top_right_bottom","top_bottom_left","top_right_left","right_bottom_left","all_border","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","render","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","gridHeader","gridContent","hidePopUp","clearSelection","removeEventListener","unWireEvents","getContent","mouseDownHandler","getHeaderContent","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","isFrozenGrid","movableContent","getMovableRowByIndex","getSelectedFrozenRightRow","getFrozenMode","leftRight","getFrozenRightContent","getFrozenRightRowByIndex","getCurrentBatchRecordChanges","currentRecords","getCurrentViewRecords","newRowPosition","concat","getBatchChanges","addedRecords","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","selectedMovableRow","selectedFrozenRightRow","selectData","isRemoved","enableVirtualization","e","selectedIndex","isAvailable","notify","selectVirtualRow","frozenData","contentModule","getRowObjectByIndex","getRowObjectFromUID","getAttribute","data","persistSelection","prevSelectedData","getSelectedRecords","clearRowSelection","isRowType","isRowSelected","hasAttribute","activeTarget","isCheckBoxSelection","can","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","actualTarget","cancel","isInteracted","isHeaderCheckboxClicked","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","disableInteracted","toggle","removed","checkboxMode","clearSelectedRow","selectRowCallBack","clearRow","indexOf","updateRowSelection","selectMovableRow","selectRowIndex","isHeaderCheckBoxClicked","rowSelected","updateRowProps","targetObj","mRow","frRow","mObj","previousMovRow","getMovableRows","frozenRightRow","previousFrozenRightRow","getFrozenRightDataRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","selectedDataUpdate","selectedData","selectedRows","rowIndexes","len","currentRow","getDataRows","push","isSingleSel","prevRow","getRows","slice","selectRowFn","rightEle","undefined","_i","rowIndexes_1","rowIdx","indexes","getSelectedRowIndexes","checkboxOnly","checkboxColumn","getColumns","filter","col","rowIndexes_2","isUnSelected","enableToggle","rowDeselect","rowDeselecting","removeAttribute","addRemoveClassesForRow","rowDeselected","_a","max","reverse","clearRowCallBack","checkAllRows","selectedEle","updatePersistCollection","updateCheckBoxes","chkState","ensureCheckboxFieldSelection","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","pop","setAttribute","getPrevIndexes","cells","contextMenuModule","mouseButton","cell","onClick","checkSelectAllClicked","span","clearCellSelection","clearColumnSelection","prevCIdxs","prevECIdxs","rows_1","data_1","row_1","mRow_1","fRightRow_1","rowIndex_1","foreignKeyData_1","target_1","mRows","frRows","getFrozenRightRows","isRowClicked","getCheckAllStatus","updatePersistSelectedData","record","movableRow","rowDeselectCallBack","cancl_1","isSingleDeSel","rowDeselectObj","rowInString","target_2","rowidx","rowidxex","dataTxt","foreignKey","isHeaderCheckBxClick","getSelectedMovableCell","getColumnByIndex","frzCols","getFreezeTableName","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","isCellSelected","previousRowCell","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","cIdx","getFrozenColumns","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","isDragged","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","prvRowCellIndex","addCellsToSelection","left","getFrozenLeftCount","movable","getMovableColumnsCount","hideAutoFill","tableName","rows","frozenLeft","getRowsObject","getMovableRowsObject","frozenRight","getFrozenRightRowsObject","cellIndexes_1","idx","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","m","colIndex","parseInt","ariaColIndex","getFrozenLeftColumnsCount","getMovableDataRows","querySelectorAll","cancl","gridChkBox","add","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","currentViewData","cLen","bdrElement","showHideBorders","addMovableRows","getElementsByClassName","mouseMoveHandler","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","y2","tmp","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","ariaRowIndex","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","parentElement","isLastRow","tbody","isFirstRow","isFirstCell","setBorders","parentEle","border","bdrStr","ele","display","isFrozen","start","end","stOff","endOff","parentOff","offsetParent","rowHeight","topOffSet","frozenRows","leftOffset","rightOffset","enableRtl","right","selectDirection","updateStartEndCells","getContentTable","getMovableContent","mcBdrElement","frcBdrElement","getHeaderTable","fhBdrElement","headerModule","getMovableHeader","mhBdrElement","getFrozenRightHeader","frhBdrElement","applyBorders","applyBothFrozenBorders","str","rtl","borderWidth","includes","appendChild","className","id","styles","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","firstCellTop","firstCellLeft","movableHeader","parentRect","sTop","scrollTop","sLeft","scrollLeft","offsetTop","totalHeight","clientHeight","totalWidth","clientWidth","Math","floor","bdrAFRight","bdrAFTop","leftRemove","scrolloffSet","parseFloat","topRemove","hideAFBorders","updateValue","createBeforeAutoFill","updateCell","field","value","column","innerText","beforeAutoFill","getAutoFillCells","startCellIdx","cls","isApply","startrowIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","endCell","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","rindex","isFrozenCol","isFrozenRow","isFrozenRight","table","clientRect","colWidth","button","isDrag","headerContent","editedRow","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","isInfiniteScroll","enableInfiniteScrolling","requestType","isDestroyed","evtHandlers","event","uiUpdate","handler","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","rowsRemoved","headerRefreshed","refreshHeader","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","addEventListener_checkbox","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","records","getCheckAllBox","module","enable","initPerisistSelection","properties","prevColIndex","checkBoxSelectionChanged","isLeftRightFrozen","renderFrozenRightContent","off","selectedRowIndex","gobj","chkField","pageSettings","dataBind","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","isRemote","groupSettings","columns","_b","_c","executeLocal","generateQuery","mtbody","getMovableContentTbody","frtbody","getFrozenRightContentTbody","allowPaging","checkState","editChkBox","checked","action","onDataBound","getSelectedRows","totalRecords","checkSelectAllAction","cRenderer","getRenderer","editForm","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","triggerChkChangeEvent","classes","status","checkSelect","rIndex","uid","map","addedRow","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","updateSelectedRowIndex","dataLength","selectedVal","isAllSelected","isInteraction","checkToSelectAll","checkedLen","searchSettings","key","filterSettings","input","spanEle","indeterminate","setSelection","info","name","keyCode","clickHandler","allowColumnSelection","popUpClickHandler","chkSelect","checkWrap","isEqualNode","hoverFrozenRows","isDevice","showPopup","headerSelectionHandler","getColumnIndexByUid","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","Number","clear","isContent","isSelectable","headerAction","prev","thLen","childElementCount","selectedIndexes","getSelectedRowCellIndexes","infiniteScrollSettings","enableCache","columnIndex","getKeyColIndex","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","stackedHeader","innerColumn","getstackedColumns","getColumnByUid","lastIndex","firstIndex","applyUpDown","selectColumn","children","cIndex","contentRenderer","selectColumnsByRange","innerColumnIndexes","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","selectedCol","getColumnHeaderByUid","isColSelected","isMultiColumns","clearColDependency","headerCell","previousColumnIndex","columnSelecting","updateColSelection","selectedArgs","columnSelected","updateColProps","selectColumns","columnIndexes","getselectedCols","selectingArgs","selectColumnWithExisting","newCol","clearIndex","isColumnSelected","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","deselectedArgs","isCanceled","columnDeselect","columnDeselecting","selectedHeader","getSelectedColumnCells","columnDeselected","isRowTemplate","rowTemplate","movableRows","seletedcells","selectionString","getIndentCount","childNodes","on","dataReady","onDataBoundFunction","dataBound","refreshInfinitePersistSelection","beforeRefreshOnDataChange","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isInfinitecroll","enableImmutableMode","isSelectedRowIndexUpdating"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables\n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        /**\n         *  @hidden\n         */\n        this.selectedColumnsIndexes = [];\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.deSelectedData = [];\n        this.needColumnSelection = false;\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.initialRowSelection = false;\n        this.isPrevRowSelection = false;\n        this.isKeyAction = false;\n        this.isRowDragSelected = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.bottom = '0 0 2px 0';\n        this.top = '2px 0 0 0';\n        /* eslint-disable */\n        this.right_bottom = '0 2px 2px 0';\n        this.bottom_left = '0 0 2px 2px';\n        this.top_right = '2px 2px 0 0';\n        this.top_left = '2px 0 0 2px';\n        this.top_bottom = '2px 0 2px 0';\n        this.top_right_bottom = '2px 2px 2px 0';\n        this.top_bottom_left = '2px 0 2px 2px';\n        this.top_right_left = '2px 2px 0 2px';\n        this.right_bottom_left = '0 2px 2px 2px';\n        this.all_border = '2px';\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getSelectedFrozenRightRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n            return gObj.getFrozenRightRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) :\n                this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            var e = { selectedIndex: index, isAvailable: true };\n            this.parent.notify(events.selectVirtualRow, e);\n            var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index)\n                : null;\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n                selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n                    var prevSelectedData = this.parent.getSelectedRecords();\n                    if (prevSelectedData.length > 0) {\n                        this.clearRowSelection();\n                    }\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getRowObj(index).data;\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (this.isKeyAction && this.parent.isCheckBoxSelection ?\n                    false : index === this.selectedRowIndexes[0]) : false);\n        this.isKeyAction = false;\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' ||\n                (!_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection)) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index,\n                row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.onActionComplete(args, events.rowSelected);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n        if (this.parent.isFrozenGrid()) {\n            this.updateRowSelection(selectedMovableRow, index);\n            if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n                this.updateRowSelection(selectedFrozenRightRow, index);\n            }\n        }\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n        if (this.parent.isFrozenGrid()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            var frozenRightRow = 'frozenRightRow';\n            var previousFrozenRightRow = 'previousFrozenRightRow';\n            if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n                mObj[frozenRightRow] = frRow;\n                mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n            }\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    Selection.prototype.selectedDataUpdate = function (selectedData, foreignKeyData, selectedRows, rowIndexes) {\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n        }\n    };\n    /**\n     * Selects a collection of rows by index.\n     *\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, rowIndexes);\n        this.activeTarget();\n        var args = {\n            cancel: false,\n            rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n            isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n            var selectRowFn = function (index) {\n                _this.updateRowSelection(gObj.getRowByIndex(index), index);\n                if (gObj.isFrozenGrid()) {\n                    var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index)\n                        : undefined;\n                    _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n                }\n                _this.updateRowProps(rowIndex);\n            };\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n                    var rowIdx = rowIndexes_1[_i];\n                    selectRowFn(rowIdx);\n                }\n            }\n            else {\n                selectRowFn(rowIndex);\n            }\n            args = {\n                rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                data: _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, events.rowSelected);\n            }\n            _this.isInteracted = false;\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     *\n     * @param {number} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedData = [];\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) :\n            this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n        if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (this.isMultiCtrlRequest && !checkboxColumn.length) {\n            this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, indexes);\n        }\n        for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n            var rowIndex = rowIndexes_2[_i];\n            var rowObj = this.getRowObj(rowIndex);\n            var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n            this.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n                this.isAddRowsToSelection = true;\n                this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this.isCancelDeSelect) {\n                    return;\n                }\n                this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n                this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n                this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n                selectedRow.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                if (selectedFrozenRightRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n                    selectedFrozenRightRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n                this.isInteracted = false;\n                this.isMultiSelection = false;\n                this.isAddRowsToSelection = false;\n            }\n            else {\n                this.activeTarget();\n                args = {\n                    cancel: false,\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                    foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                    isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n                if (!isNullOrUndefined(args) && args[can] === true) {\n                    this.disableInteracted();\n                    return;\n                }\n                if (this.isSingleSel()) {\n                    this.clearRow();\n                }\n                this.updateRowSelection(selectedRow, rowIndex);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n            }\n            if (!isUnSelected) {\n                args = {\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n                    isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                this.onActionComplete(args, events.rowSelected);\n            }\n            this.isInteracted = false;\n            this.updateRowProps(rowIndex);\n            if (this.isSingleSel()) {\n                break;\n            }\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        // eslint-disable-next-line prefer-const\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.toggle) {\n            var selectedEle = this.parent.getRowByIndex(index);\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.removed = true;\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection &&\n            this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n            if (!this.parent.isPersistSelection) {\n                this.ensureCheckboxFieldSelection();\n            }\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if (chkState) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                setChecked(chkBox, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.isFrozenGrid() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        this.checkSelectAllClicked = true;\n        if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.clearColumnSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n            this.checkSelectAllClicked = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var fRightRow_1 = [];\n            var rowIndex_1 = [];\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (gObj.isFrozenGrid()) {\n                    var mRows = gObj.getMovableRows();\n                    if (mRows && mRows.length) {\n                        mRow_1.push(mRows[this.selectedRowIndexes[i]]);\n                    }\n                    if (gObj.getFrozenMode() === literals.leftRight) {\n                        var frRows = gObj.getFrozenRightRows();\n                        if (frRows && frRows.length) {\n                            fRightRow_1.push(frRows[this.selectedRowIndexes[i]]);\n                        }\n                    }\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isRowClicked = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || (_this.isInteracted &&\n                    !_this.parent.isPersistSelection))) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI) {\n                        element[j].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    if (!_this.isPrevRowSelection) {\n                        _this.updatePersistCollection(element[j], false);\n                    }\n                    _this.updateCheckBoxes(element[j]);\n                }\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(movableRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(movableRow, false);\n                        }\n                    }\n                    var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n                    if (frRow) {\n                        if (!_this.disableUI) {\n                            frRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(frRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(frRow, false);\n                        }\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.isPrevRowSelection = false;\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            }, fRightRow_1);\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked)) ||\n            !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && (this.parent.checkAllRows === 'Uncheck' &&\n                    !isSingleDeSel) && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n                foreignKeyData: foreignKeyData, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var rowInString = 'row';\n            var target_2 = 'target';\n            var rowidx = 'rowIndex';\n            var rowidxex = 'rowIndexes';\n            var dataTxt = 'data';\n            var foreignKey = 'foreignKeyData';\n            rowDeselectObj[rowInString] = row;\n            rowDeselectObj[target_2] = this.actualTarget;\n            var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n            if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                rowDeselectObj[rowidx] = rowIndex[0];\n                rowDeselectObj[rowidxex] = rowIndex;\n            }\n            else if (rowIndex.length === 1) {\n                rowDeselectObj[dataTxt] = rowDeselectObj[dataTxt][0];\n                rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n                rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n                if (this.isAddRowsToSelection) {\n                    rowDeselectObj[rowidxex] = rowIndex;\n                }\n            }\n            this.parent.trigger(type, this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, { mRow: mRow, frozenRightRow: frozenRightRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                    if (mRow) {\n                        _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n                    }\n                    if (frozenRightRow) {\n                        _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n                    }\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n        var frzCols = gObj.isFrozenGrid();\n        if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            var currentCell = 'currentCell';\n            args[currentCell] = selectedCell;\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = {\n                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ?\n                        _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = _this.prevECIdxs;\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs = {\n                data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                selectedRowCellIndex: _this.selectedRowCellIndexes,\n                previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var prvRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     *\n     * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell;\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        var left = gObj.getFrozenLeftCount();\n        var movable = gObj.getMovableColumnsCount();\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n        var rowObj;\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rowObj = rows[cellIndexes[0].rowIndex];\n        }, [\n            !col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [],\n            col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [],\n            col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []\n        ]);\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left\n                : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n            foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n            var args = {\n                cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                isShiftPressed: this.isMultiShiftRequest,\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                previousRowCell: this.prevECIdxs ?\n                    gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var prvRowCellIndex = 'previousRowCellIndex';\n            args[prvRowCellIndex] = this.prevECIdxs;\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = {\n                    data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                    previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                        undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                };\n                cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var frzCols = this.parent.isFrozenGrid();\n        var col = this.parent.getColumnByIndex(index);\n        var cells = getCellsByTableName(this.parent, col, rowIndex);\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (col.getFreezeTableName() === 'movable') {\n                            m += this.parent.getFrozenLeftCount();\n                        }\n                        else if (col.getFreezeTableName() === literals.frozenRight) {\n                            m += (this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount());\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var frzCols = gObj.isFrozenGrid();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n                        cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.isFrozenGrid()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n            }\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n                this.isRowDragSelected = true;\n            }\n            else {\n                var td = parentsUntil(e.target, literals.rowCell);\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, literals.rowCell);\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length) {\n            var isFrozen = this.parent.isFrozenGrid();\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n            var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') &&\n                this.isFirstRow(start) ? 1.5 : 0;\n            var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n            var rightOffset = ((this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3'))\n                || (this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')))\n                && this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + 1 + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.isFrozenGrid()) {\n            this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n            }\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.isFrozenGrid()) {\n                this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n                }\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    /* eslint-enable */\n    Selection.prototype.applyBothFrozenBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 6:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.bottom;\n                    this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                    this.mhBdrElement.style.borderWidth = this.top;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                }\n                break;\n            case 4:\n                {\n                    if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    }\n                    if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                    }\n                }\n                break;\n            case 3:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.top_bottom;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.mhBdrElement.style.borderWidth = this.top_bottom;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    }\n                }\n                break;\n            case 2:\n                {\n                    if (str.includes('1')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.fhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('2')) {\n                        this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.mhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('3')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.bdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('5')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        if (this.parent.frozenRows) {\n                            this.frhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('6')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = this.all_border;\n                this.mcBdrElement.style.borderWidth = this.all_border;\n                this.frcBdrElement.style.borderWidth = this.all_border;\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = this.all_border;\n                    this.mhBdrElement.style.borderWidth = this.all_border;\n                    this.frhBdrElement.style.borderWidth = this.all_border;\n                }\n                break;\n        }\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            this.applyBothFrozenBorders(str);\n        }\n        else {\n            switch (str.length) {\n                case 4:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        }\n                    }\n                    break;\n                case 2:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left\n                                : this.top_right_bottom : this.right_bottom_left;\n                            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                            }\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.isFrozenGrid()) {\n                                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left\n                                    : this.top_right_bottom : this.right_bottom_left;\n                            }\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                                if (this.parent.isFrozenGrid()) {\n                                    this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                        : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    this.bdrElement.style.borderWidth = this.all_border;\n                    if (this.parent.isFrozenGrid()) {\n                        this.mcBdrElement.style.borderWidth = this.all_border;\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = this.all_border;\n                        if (this.parent.isFrozenGrid()) {\n                            this.mhBdrElement.style.borderWidth = this.all_border;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr',\n                styles: 'width: 2px; border-width: 0;'\n            }));\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr',\n                    styles: 'height: 2px; border-width: 0;'\n                }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frcbdr',\n                        styles: 'height: 2px; border-width: 0;'\n                    }));\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_fhbdr', styles: 'height: 2px;' }));\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_mhbdr', styles: 'height: 2px;' }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_frhbdr', styles: 'height: 2px;' }));\n                }\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement.style.display = display;\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement.style.display = display;\n                }\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) ||\n            parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        var totalHeight = this.parent.element.clientHeight;\n        var totalWidth = this.parent.element.clientWidth;\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n            if (totalWidth <= (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10))) {\n                var leftRemove = (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) - totalWidth;\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n            }\n        }\n        else {\n            var scrolloffSet = (parentsUntil(this.startAFCell, literals.movableContent) ||\n                parentsUntil(this.startAFCell, literals.movableHeader)) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n            this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n            if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n                this.bdrAFTop.style.left = '0px';\n            }\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n        if (totalHeight <= (parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10))) {\n            var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n            this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n            this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        }\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.value));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cls = '.e-cellselectionbackground';\n        var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n        if (this.parent.isFrozenGrid()) {\n            cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n            }\n        }\n        return cells;\n    };\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        switch (true) { //direction\n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, literals.rowCell):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell' &&\n            e.target.classList.contains(literals.rowCell)) {\n            var target = e.target;\n            var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            var lastCell = parentsUntil(e.target, literals.rowCell);\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var col = this.parent.getColumnByIndex(index);\n            var isFrozenCol = col.getFreezeTableName() === 'movable';\n            var isFrozenRow = rindex < this.parent.frozenRows;\n            var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight\n                && col.getFreezeTableName() === literals.frozenRight;\n            if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n                if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n                    select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n                }\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                if (!isFrozenRow) {\n                    if (!isFrozenCol) {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n                    }\n                }\n                else {\n                    if (!isFrozenCol) {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n                    }\n                }\n                if (isFrozenRight) {\n                    if (isFrozenRow) {\n                        this.parent.getFrozenRightHeader().appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getFrozenRightContent().appendChild(this.autofill);\n                    }\n                }\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows ||\n            parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n                this.isRowDragSelected = false;\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.uiUpdate, handler: this.enableAfterRender },\n            { event: events.initialEnd, handler: this.initializeSelection },\n            { event: events.rowSelectionComplete, handler: this.onActionComplete },\n            { event: events.cellSelectionComplete, handler: this.onActionComplete },\n            { event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.beforeFragAppend, handler: this.clearSelAfterRefresh },\n            { event: events.columnPositionChanged, handler: this.columnPositionChanged },\n            { event: events.contentReady, handler: this.initialEnd },\n            { event: events.rowsRemoved, handler: this.rowsRemoved },\n            { event: events.headerRefreshed, handler: this.refreshHeader },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            if (this.selectedColumnsIndexes.length > 1) {\n                this.clearColumnSelection();\n                this.prevColIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevColIndex = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        if (!this.parent.isCheckBoxSelection) {\n            this.initPerisistSelection();\n        }\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function (e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n        if ((!isFrozen || (isFrozen && (!isLeftRightFrozen && !e.args.isFrozen)\n            || (isLeftRightFrozen && e.args.renderFrozenRightContent))) && !this.selectedRowIndexes.length) {\n            this.parent.off(events.contentReady, this.initialEnd);\n            this.selectRow(this.parent.selectedRowIndex);\n        }\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        var gobj = this.parent;\n        gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!this.parent.getDataModule().isRemote()) {\n            if (state) {\n                if (this.parent.groupSettings.columns.length) {\n                    for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n                        var data = _a[_i];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n                else {\n                    for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n                        var data = _c[_b];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n            var mtbody = this.parent.getMovableContentTbody();\n            if (mtbody.querySelector('.e-checkselect')) {\n                rows = this.parent.getMovableRows();\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frtbody = this.parent.getFrozenRightContentTbody();\n                if (frtbody.querySelector('.e-checkselect')) {\n                    rows = this.parent.getFrozenRightRows();\n                }\n            }\n        }\n        this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n        if (this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' && this.selectedRowState[pKey] &&\n                    this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection && chkBox) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            if (this.isSingleSel() && indexes.length > 0) {\n                this.selectRow(indexes[0], true);\n            }\n            else {\n                this.selectRows(indexes);\n            }\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.' + literals.editedRow);\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add' && this.isCheckedOnAdd) {\n                var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = e.data;\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                if (!isNullOrUndefined(data[i][this.primaryKey])) {\n                    this.updatePersistDelete(data[i][this.primaryKey]);\n                }\n            }\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            if (this.selectedRecords.length) {\n                this.isPrevRowSelection = true;\n            }\n            this.refreshPersistSelection();\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n        this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') &&\n            this.parent.getSelectedRows().length ? true : false;\n        if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n            var totalRecords = this.parent.getRowsObject();\n            var indexes = [];\n            for (var i = 0; i < totalRecords.length; i++) {\n                if (totalRecords[i].isSelected) {\n                    indexes.push(i);\n                }\n            }\n            if (indexes.length) {\n                this.selectRows(indexes);\n            }\n            this.initialRowSelection = true;\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = !this.parent.getDataModule().isRemote() ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.' + literals.rowCell);\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 &&\n            this.parent.editSettings.newRowPosition === 'Top') {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !this.parent.getDataModule().isRemote()) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                var row = this.parent.getRowByIndex(index);\n                if (index && row && row.getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    Selection.prototype.isAllSelected = function () {\n        var data = this.getData();\n        for (var i = 0; i < data.length; i++) {\n            var pKey = data[i][this.primaryKey];\n            if (!this.selectedRowState[pKey]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = true;\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.parent.isPersistSelection && !this.parent.getDataModule().isRemote() && (this.parent.searchSettings.key.length\n                || this.parent.filterSettings.columns.length)) {\n                checkToSelectAll = this.isAllSelected();\n            }\n            var input = this.getCheckAllBox();\n            if (input) {\n                var spanEle = input.nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                setChecked(input, false);\n                input.indeterminate = false;\n                if (checkToSelectAll && checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()\n                        && (this.getData().length && checkedLen === this.getData().length))) {\n                    addClass([spanEle], ['e-check']);\n                    setChecked(input, true);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (!this.selectedRowIndexes.length ||\n                    checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                    input.indeterminate = true;\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (this.selectionSettings.persistSelection) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') ||\n            (this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell'))) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        this.isMultiShiftRequest = e.shiftKey;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') ||\n            (this.selectionSettings.persistSelection && parentsUntil(target, literals.row)) ? true : false;\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = parentsUntil(target, literals.rowCell);\n        if (((target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly) || chkSelect)\n            && !this.isRowDragSelected) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n                }\n                this.parent.hoverFrozenRows(e);\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        else if (e.target.classList.contains('e-headercell') &&\n            !e.target.classList.contains('e-stackedheadercell')) {\n            var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n            this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.isFrozenGrid() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump &&\n            !this.selectionSettings.allowColumnSelection) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space')\n            && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n            var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n            if (selectedIndexes.length && prev.cellIndex === 0) {\n                prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n            }\n            prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n            rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n        if ((headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 &&\n            e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) &&\n            !this.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.preventFocus = true;\n        var columnIndex = this.getKeyColIndex(e);\n        if (this.needColumnSelection) {\n            cellIndex = columnIndex;\n        }\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.isKeyAction = true;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.needColumnSelection = false;\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    Selection.prototype.getKeyColIndex = function (e) {\n        var uid;\n        var index = null;\n        var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n        if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n            this.needColumnSelection = e.container.isHeader ? true : false;\n            if (stackedHeader) {\n                if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n                    return index;\n                }\n                uid = stackedHeader.getAttribute('e-mappinguid');\n                var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n                var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n                var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n                index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n            }\n            else {\n                index = this.parent.getColumnIndexByUid(e.element\n                    .querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            }\n        }\n        return index;\n    };\n    /**\n     * Apply ctrl + A key selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType()) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n            }\n        }\n        else {\n            var row = this.contentRenderer.getRowByIndex(rowIndex);\n            if (row) {\n                this.target = row.getElementsByClassName(literals.rowCell)[cIndex];\n            }\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n        else if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     *\n     * @param {number} rowIndex - specfies the rowIndex\n     * @param {number} cellIndex - specifies the CellIndex\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumnsByRange(this.prevColIndex, cellIndex);\n        }\n        else {\n            this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.getstackedColumns = function (column) {\n        var innerColumnIndexes = [];\n        for (var i = 0, len = column.length; i < len; i++) {\n            if (column[i].columns) {\n                this.getstackedColumns(column[i].columns);\n            }\n            else {\n                innerColumnIndexes.push(column[i]);\n            }\n        }\n        return innerColumnIndexes;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} returns the Object\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    /**\n     * Select the column by passing start column index\n     *\n     * @param {number} index - specifies the index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function (index) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[index])) {\n            return;\n        }\n        var column = gObj.getColumnByIndex(index);\n        var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n        var isColSelected = selectedCol.classList.contains('e-columnselection');\n        if ((!gObj.selectionSettings.allowColumnSelection)) {\n            return;\n        }\n        var isMultiColumns = this.selectedColumnsIndexes.length > 1 &&\n            this.selectedColumnsIndexes.indexOf(index) > -1;\n        this.clearColDependency();\n        if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n            var args = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(args, events.columnSelecting);\n            if (args.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n                this.updateColSelection(selectedCol, index);\n            }\n            var selectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(index);\n    };\n    /**\n     * Select the columns by passing start and end column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @param  {number} endIndex - specifies the end index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var indexes = [];\n        if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n            indexes[0] = startIndex;\n        }\n        else {\n            var min = startIndex < endIndex;\n            for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n                indexes.push(i);\n            }\n        }\n        this.selectColumns(indexes);\n    };\n    /**\n     * Select the columns by passing column indexes\n     *\n     * @param  {number[]} columnIndexes - specifies the columnIndexes\n     * @returns {void}\n     */\n    Selection.prototype.selectColumns = function (columnIndexes) {\n        var gObj = this.parent;\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            columnIndexes = [columnIndexes[0]];\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.clearColDependency();\n        var selectingArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            cancel: false, target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n        };\n        this.onActionBegin(selectingArgs, events.columnSelecting);\n        if (selectingArgs.cancel) {\n            this.disableInteracted();\n            return;\n        }\n        for (var i = 0, len = columnIndexes.length; i < len; i++) {\n            this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n        }\n        selectedCol = this.getselectedCols();\n        var selectedArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n        };\n        this.onActionComplete(selectedArgs, events.columnSelected);\n        this.updateColProps(columnIndexes[0]);\n    };\n    /**\n     * Select the column with existing column by passing column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnWithExisting = function (startIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            this.clearColDependency();\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n            this.clearColumnSelection(startIndex);\n        }\n        else {\n            var selectingArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: gObj.getColumnByIndex(startIndex),\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(selectingArgs, events.columnSelecting);\n            if (selectingArgs.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            this.updateColSelection(newCol, startIndex);\n            selectedCol = this.getselectedCols();\n            var selectedArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                column: gObj.getColumnByIndex(startIndex),\n                columnIndexes: this.selectedColumnsIndexes,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(startIndex);\n    };\n    /**\n     * Clear the column selection\n     *\n     * @param {number} clearIndex - specifies the clearIndex\n     * @returns {void}\n     */\n    Selection.prototype.clearColumnSelection = function (clearIndex) {\n        if (this.isColumnSelected) {\n            var gObj = this.parent;\n            if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n                return;\n            }\n            var index = !isNullOrUndefined(clearIndex) ? clearIndex :\n                this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n            var col = gObj.getColumnByIndex(index);\n            var selectedCol = void 0;\n            var column = gObj.getColumnByIndex(index);\n            if (col.getFreezeTableName() === literals.frozenRight) {\n                selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n            }\n            else if (col.getFreezeTableName() === 'movable') {\n                selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n            }\n            else {\n                selectedCol = gObj.getColumnHeaderByUid(column.uid);\n            }\n            var deselectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted\n            };\n            var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n            if (isCanceled) {\n                this.disableInteracted();\n                return;\n            }\n            var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] :\n                [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n            var selectedCells = this.getSelectedColumnCells(clearIndex);\n            for (var i = 0, len = selectedHeader.length; i < len; i++) {\n                addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n            }\n            if (!isNullOrUndefined(clearIndex)) {\n                this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n                this.parent.getColumns()[clearIndex].isSelected = false;\n            }\n            else {\n                this.columnDeselect(deselectedArgs, events.columnDeselected);\n                this.selectedColumnsIndexes = [];\n                this.isColumnSelected = false;\n                this.parent.getColumns().filter(function (col) { return col.isSelected = false; });\n            }\n        }\n    };\n    Selection.prototype.getselectedCols = function () {\n        var gObj = this.parent;\n        var selectedCol;\n        if (this.selectedColumnsIndexes.length > 1) {\n            selectedCol = [];\n            for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n                (selectedCol).push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n            }\n        }\n        else {\n            selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n        }\n        return selectedCol;\n    };\n    Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n        var gObj = this.parent;\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n        var movableRows;\n        var frRows;\n        if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n            movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, movableRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n                rows = gObj.addMovableRows(rows, frRows);\n            }\n        }\n        var seletedcells = [];\n        var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n        for (var i = 0, len = rows.length; i < len; i++) {\n            seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n        }\n        return seletedcells;\n    };\n    Selection.prototype.columnDeselect = function (args, event) {\n        if (event === 'columnDeselected') {\n            delete args.cancel;\n        }\n        this.onActionComplete(args, event);\n        return args.cancel;\n    };\n    Selection.prototype.updateColProps = function (startIndex) {\n        this.prevColIndex = startIndex;\n        this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n    };\n    Selection.prototype.clearColDependency = function () {\n        this.clearColumnSelection();\n        this.selectedColumnsIndexes = [];\n    };\n    Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n        if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n            return;\n        }\n        var left = this.parent.getFrozenLeftCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var col = this.parent.getColumnByIndex(startIndex);\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows;\n        this.selectedColumnsIndexes.push(startIndex);\n        this.parent.getColumns()[startIndex].isSelected = true;\n        if (col.getFreezeTableName() === literals.frozenRight) {\n            startIndex = startIndex - (left + movable);\n            rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n        }\n        else if (col.getFreezeTableName() === 'movable') {\n            startIndex = startIndex - left;\n            rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n        }\n        else {\n            startIndex = startIndex + this.parent.getIndentCount();\n            rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n        }\n        addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n        for (var j = 0, len = rows.length; j < len; j++) {\n            if (rows[j].classList.contains(literals.row)) {\n                if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) &&\n                    this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n                }\n                else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n                }\n            }\n        }\n    };\n    Selection.prototype.headerSelectionHandler = function (colIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            this.selectColumn(colIndex);\n        }\n        else if (this.isMultiShiftRequest) {\n            this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n        }\n        else {\n            this.selectColumnWithExisting(colIndex);\n        }\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = !this.parent.enableImmutableMode;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}