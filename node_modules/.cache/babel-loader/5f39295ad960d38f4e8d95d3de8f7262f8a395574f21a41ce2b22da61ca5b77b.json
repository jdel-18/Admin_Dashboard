{"ast":null,"code":"import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */function () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.movableCache = {};\n    this.frozenRightCache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.currentInfo = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n  VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isManualRefresh = false;\n    var info = e.virtualInfo = e.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n    if (this.currentInfo.blockIndexes) {\n      indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1) : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n      isManualRefresh = true;\n    }\n    if (isFrozen && this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent || !isFrozen) {\n      this.checkAndResetCache(e.requestType);\n    }\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      var dataRows = this.parent.vcRows.filter(function (row) {\n        return row.isDataRow;\n      });\n      if (this.parent.isManualRefresh && dataRows.length === data['records'].length || !this.parent.isManualRefresh) {\n        return result = this.parent.vcRows;\n      }\n    }\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[i])) {\n          this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n        }\n        if (e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]) || e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i])) {\n          var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n          cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n        }\n      }\n    }\n    var values = info.blockIndexes;\n    for (var i = 0; i < values.length; i++) {\n      if (!this.isBlockAvailable(values[i])) {\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n        if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n          this.parent.vRows = rows;\n          this.parent.vcRows = rows;\n          this.parent.notify(events.refreshVirtualMaxPage, {});\n        }\n        var median = void 0;\n        if (isGroupAdaptive(this.parent)) {\n          this.getGroupVirtualRecordsByIndex(rows);\n        } else {\n          if (isManualRefresh) {\n            this.setBlockForManualRefresh(this.cache, indexes, rows);\n          } else {\n            median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n            if (!this.isBlockAvailable(indexes[0])) {\n              this.cache[indexes[0]] = rows.slice(0, median);\n            }\n            if (!this.isBlockAvailable(indexes[1])) {\n              this.cache[indexes[1]] = rows.slice(median);\n            }\n          }\n        }\n      }\n      if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n        this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n      }\n      if (e.renderMovableContent && !this.isMovableBlockAvailable(values[i]) || e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i])) {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n        var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n        var rows = this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: startIdx\n        });\n        if (isManualRefresh) {\n          this.setBlockForManualRefresh(cache, indexes, rows);\n        } else {\n          var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0])) {\n            cache[indexes[0]] = rows.slice(0, median);\n          }\n          if (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]) || e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1])) {\n            cache[indexes[1]] = rows.slice(median);\n          }\n        }\n      }\n      if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n        result.push.apply(result, this.cache[values[i]]);\n      } else {\n        var cache = e.renderMovableContent ? this.movableCache : this.frozenRightCache;\n        if (cache[values[i]]) {\n          result.push.apply(result, cache[values[i]]);\n        }\n      }\n      if (this.isBlockAvailable(values[i])) {\n        loadedBlocks.push(values[i]);\n      }\n    }\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n      this.parent.currentViewData[grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else if (isFrozen) {\n      if (e.renderMovableContent && (this.parent.getFrozenMode() === 'Left' || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns()) || e.renderFrozenRightContent) {\n        this.parent.currentViewData = result.map(function (m) {\n          return m.data;\n        });\n      }\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n    return result;\n  };\n  VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n    var size = this.model.pageSize / 2;\n    if (this.includePrevPage) {\n      cache[blocks[0] - 1] = rows.slice(0, size);\n      cache[blocks[0]] = rows.slice(size, size * 2);\n      cache[blocks[1]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2]] = rows.slice(size * 3, size * 4);\n    } else {\n      cache[blocks[0]] = rows.slice(0, size);\n      cache[blocks[1]] = rows.slice(size, size * 2);\n      cache[blocks[2]] = rows.slice(size * 2, size * 3);\n      cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n    }\n  };\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n  VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n    return value in this.movableCache;\n  };\n  VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n    return value in this.frozenRightCache;\n  };\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent);\n    }\n    if (this.parent.isFrozenGrid()) {\n      content = content.querySelector('.' + literals.movableHeader);\n    }\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n      if (border) {\n        indexes.push(iOffset);\n      }\n      return left + calWidth < offsetVal;\n    });\n    this.addFrozenIndex(indexes);\n    return indexes;\n  };\n  VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n    if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n      for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n        indexes.push(indexes[indexes.length - 1] + 1);\n      }\n    }\n  };\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n    if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n      actions.splice(actions.indexOf(action), 1);\n    }\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n      this.movableCache = {};\n      this.frozenRightCache = {};\n    }\n    return clear;\n  };\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n    var c = this.parent.groupSettings.columns;\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n    }\n    // eslint-disable-next-line prefer-spread\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[j] = blocks[j] + gLen;\n      this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n    }\n  };\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[i]) < block) {\n        rows = rows.concat(this.cache[keys[i]]);\n      }\n    }\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n    return this.iterateGroup(current, rows);\n  };\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n        if (res) {\n          offset = index;\n        }\n        return res;\n      });\n    });\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n    return current;\n  };\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var keys = Object.keys(this.cache);\n    for (var i = 0; i < keys.length; i++) {\n      rows = rows.concat(this.cache[keys[i]]);\n    }\n    return rows;\n  };\n  VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n    var cells = [];\n    var cols = this.parent.columnModel;\n    for (var i = 0; i < cols.length; i++) {\n      cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n    }\n    return cells;\n  };\n  VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n    var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n    var blockSize = this.parent.contentModule.getBlockSize();\n    for (var i = 1; i <= blocks; i++) {\n      var count = 0;\n      this.cache[i] = [];\n      for (var j = (i - 1) * blockSize; j < rows.length; j++) {\n        if (count === blockSize) {\n          break;\n        }\n        this.cache[i].push(rows[j]);\n        if (rows[j].isDataRow) {\n          count++;\n        }\n      }\n    }\n  };\n  return VirtualRowModelGenerator;\n}();\nexport { VirtualRowModelGenerator };","map":{"version":3,"names":["Browser","isNullOrUndefined","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","events","literals","VirtualRowModelGenerator","parent","cOffsets","cache","movableCache","frozenRightCache","rowCache","data","groups","currentInfo","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","e","isFrozen","isFrozenGrid","isManualRefresh","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","indexes","getBlockIndexes","loadedBlocks","blockIndexes","includePrevPage","slice","length","getFrozenMode","leftRight","renderMovableContent","renderFrozenRightContent","checkAndResetCache","requestType","vcRows","dataRows","filter","row","isDataRow","enableColumnVirtualization","i","isBlockAvailable","refreshRows","isMovableBlockAvailable","isFrozenRightBlockAvailable","values","startIdx","startIndex","getStartIndex","rows","vRows","notify","refreshVirtualMaxPage","median","getGroupVirtualRecordsByIndex","setBlockForManualRefresh","Math","max","pageSize","groupSettings","columns","updateGroupRow","push","apply","grouping","currentViewData","map","m","getFrozenColumns","blocks","size","getPage","block","value","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","_this","getHeaderContent","querySelector","headerContent","movableHeader","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","iOffset","Number","offsetVal","border","addFrozenIndex","action","actions","frozenRows","splice","indexOf","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","field","c","Array","j","parseInt","current","currentFirst","concat","iterateGroup","isPresent","oRow","res","undefined","key","shift","getRows","generateCells","foreignKeyData","cells","columnModel","generateCell","contentModule","getGroupedTotalBlocks","blockSize","getBlockSize","count"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"sourcesContent":["import { Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.movableCache = {};\n        this.frozenRightCache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.currentInfo = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isManualRefresh = false;\n        var info = e.virtualInfo = e.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        if (this.currentInfo.blockIndexes) {\n            indexes = info.blockIndexes = e.virtualInfo.blockIndexes = this.includePrevPage ? this.currentInfo.blockIndexes.slice(1)\n                : this.currentInfo.blockIndexes.slice(0, this.currentInfo.blockIndexes.length - 1);\n            isManualRefresh = true;\n        }\n        if ((isFrozen && (this.parent.getFrozenMode() !== literals.leftRight && !e.renderMovableContent)\n            || this.parent.getFrozenMode() === literals.leftRight && !e.renderMovableContent && !e.renderFrozenRightContent) || !isFrozen) {\n            this.checkAndResetCache(e.requestType);\n        }\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            var dataRows = this.parent.vcRows.filter(function (row) { return row.isDataRow; });\n            if ((this.parent.isManualRefresh && dataRows.length === data['records'].length) || !this.parent.isManualRefresh) {\n                return result = this.parent.vcRows;\n            }\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[i])) {\n                    this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n                }\n                if ((e.renderMovableContent && this.isMovableBlockAvailable(info.blockIndexes[i]))\n                    || (e.renderFrozenRightContent && this.isFrozenRightBlockAvailable(info.blockIndexes[i]))) {\n                    var cache = e.renderMovableContent\n                        ? this.movableCache : this.frozenRightCache;\n                    cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(cache[info.blockIndexes[i]]);\n                }\n            }\n        }\n        var values = info.blockIndexes;\n        for (var i = 0; i < values.length; i++) {\n            if (!this.isBlockAvailable(values[i])) {\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n                    this.parent.vRows = rows;\n                    this.parent.vcRows = rows;\n                    this.parent.notify(events.refreshVirtualMaxPage, {});\n                }\n                var median = void 0;\n                if (isGroupAdaptive(this.parent)) {\n                    this.getGroupVirtualRecordsByIndex(rows);\n                }\n                else {\n                    if (isManualRefresh) {\n                        this.setBlockForManualRefresh(this.cache, indexes, rows);\n                    }\n                    else {\n                        median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                        if (!this.isBlockAvailable(indexes[0])) {\n                            this.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this.isBlockAvailable(indexes[1])) {\n                            this.cache[indexes[1]] = rows.slice(median);\n                        }\n                    }\n                }\n            }\n            if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n                this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n            }\n            if ((e.renderMovableContent && !this.isMovableBlockAvailable(values[i]))\n                || (e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(values[i]))) {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                var startIdx = !isNullOrUndefined(this.startIndex) ? this.startIndex : this.getStartIndex(values[i], data);\n                var rows = this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: startIdx\n                });\n                if (isManualRefresh) {\n                    this.setBlockForManualRefresh(cache, indexes, rows);\n                }\n                else {\n                    var median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[0]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[0]))) {\n                        cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if ((e.renderFrozenRightContent && !this.isFrozenRightBlockAvailable(indexes[1]))\n                        || (e.renderMovableContent && !this.isMovableBlockAvailable(indexes[1]))) {\n                        cache[indexes[1]] = rows.slice(median);\n                    }\n                }\n            }\n            if (!e.renderMovableContent && !e.renderFrozenRightContent && this.cache[values[i]]) {\n                result.push.apply(result, this.cache[values[i]]);\n            }\n            else {\n                var cache = e.renderMovableContent\n                    ? this.movableCache : this.frozenRightCache;\n                if (cache[values[i]]) {\n                    result.push.apply(result, cache[values[i]]);\n                }\n            }\n            if (this.isBlockAvailable(values[i])) {\n                loadedBlocks.push(values[i]);\n            }\n        }\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns.length) {\n            this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n        }\n        else if (isFrozen) {\n            if ((e.renderMovableContent && (this.parent.getFrozenMode() === 'Left'\n                || this.parent.getFrozenMode() === 'Right' || this.parent.getFrozenColumns())) || e.renderFrozenRightContent) {\n                this.parent.currentViewData = result.map(function (m) { return m.data; });\n            }\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.setBlockForManualRefresh = function (cache, blocks, rows) {\n        var size = this.model.pageSize / 2;\n        if (this.includePrevPage) {\n            cache[blocks[0] - 1] = rows.slice(0, size);\n            cache[blocks[0]] = rows.slice(size, size * 2);\n            cache[blocks[1]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2]] = rows.slice(size * 3, size * 4);\n        }\n        else {\n            cache[blocks[0]] = rows.slice(0, size);\n            cache[blocks[1]] = rows.slice(size, size * 2);\n            cache[blocks[2]] = rows.slice(size * 2, size * 3);\n            cache[blocks[2] + 1] = rows.slice(size * 3, size * 4);\n        }\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.isMovableBlockAvailable = function (value) {\n        return value in this.movableCache;\n    };\n    VirtualRowModelGenerator.prototype.isFrozenRightBlockAvailable = function (value) {\n        return value in this.frozenRightCache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.' + literals.headerContent); }\n        if (this.parent.isFrozenGrid()) {\n            content = content.querySelector('.' + literals.movableHeader);\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        this.addFrozenIndex(indexes);\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n        if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n            for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                indexes.push(indexes[indexes.length - 1] + 1);\n            }\n        }\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n            actions.splice(actions.indexOf(action), 1);\n        }\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n            this.movableCache = {};\n            this.frozenRightCache = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        // eslint-disable-next-line prefer-spread\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[j] = blocks[j] + gLen;\n            this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[i]) < block) {\n                rows = rows.concat(this.cache[keys[i]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined\n                    && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = rows.concat(this.cache[keys[i]]);\n        }\n        return rows;\n    };\n    VirtualRowModelGenerator.prototype.generateCells = function (foreignKeyData) {\n        var cells = [];\n        var cols = this.parent.columnModel;\n        for (var i = 0; i < cols.length; i++) {\n            cells.push(this.rowModelGenerator.generateCell(cols[i], null, null, null, null, foreignKeyData));\n        }\n        return cells;\n    };\n    VirtualRowModelGenerator.prototype.getGroupVirtualRecordsByIndex = function (rows) {\n        var blocks = this.parent.contentModule.getGroupedTotalBlocks();\n        var blockSize = this.parent.contentModule.getBlockSize();\n        for (var i = 1; i <= blocks; i++) {\n            var count = 0;\n            this.cache[i] = [];\n            for (var j = ((i - 1) * blockSize); j < rows.length; j++) {\n                if (count === blockSize) {\n                    break;\n                }\n                this.cache[i].push(rows[j]);\n                if (rows[j].isDataRow) {\n                    count++;\n                }\n            }\n        }\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}