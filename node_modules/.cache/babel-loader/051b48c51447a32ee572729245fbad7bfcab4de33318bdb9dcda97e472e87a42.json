{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */function (_super) {\n  __extends(SortDescriptor, _super);\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n  return SortDescriptor;\n}(ChildProperty);\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */function (_super) {\n  __extends(SortSettings, _super);\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n  return SortSettings;\n}(ChildProperty);\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */function (_super) {\n  __extends(Predicate, _super);\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n  return Predicate;\n}(ChildProperty);\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */function (_super) {\n  __extends(InfiniteScrollSettings, _super);\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n  return InfiniteScrollSettings;\n}(ChildProperty);\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */function (_super) {\n  __extends(FilterSettings, _super);\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n  return FilterSettings;\n}(ChildProperty);\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */function (_super) {\n  __extends(SelectionSettings, _super);\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n  return SelectionSettings;\n}(ChildProperty);\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */function (_super) {\n  __extends(SearchSettings, _super);\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n  return SearchSettings;\n}(ChildProperty);\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */function (_super) {\n  __extends(RowDropSettings, _super);\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n  return RowDropSettings;\n}(ChildProperty);\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */function (_super) {\n  __extends(TextWrapSettings, _super);\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n  return TextWrapSettings;\n}(ChildProperty);\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */function (_super) {\n  __extends(ResizeSettings, _super);\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n  return ResizeSettings;\n}(ChildProperty);\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */function (_super) {\n  __extends(GroupSettings, _super);\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n  return GroupSettings;\n}(ChildProperty);\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */function (_super) {\n  __extends(EditSettings, _super);\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n  __decorate([Property('')], EditSettings.prototype, \"headerTemplate\", void 0);\n  __decorate([Property('')], EditSettings.prototype, \"footerTemplate\", void 0);\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n  return EditSettings;\n}(ChildProperty);\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */function (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   *\n   * @param {GridModel} options - specifies the options\n   * @param {string | HTMLElement} element - specifies the element\n   * @hidden\n   */\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.keyA = false;\n    _this.frozenRightCount = 0;\n    _this.frozenLeftCount = 0;\n    _this.tablesCount = 1;\n    _this.movableCount = 0;\n    _this.visibleFrozenLeft = 0;\n    _this.visibleFrozenRight = 0;\n    _this.visibleMovable = 0;\n    _this.frozenLeftColumns = [];\n    _this.frozenRightColumns = [];\n    _this.movableColumns = [];\n    _this.media = {};\n    _this.isFreezeRefresh = false;\n    /** @hidden */\n    _this.tableIndex = 0;\n    _this.componentRefresh = Component.prototype.refresh;\n    /** @hidden */\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n    _this.vRows = [];\n    /** @hidden */\n    _this.vcRows = [];\n    /** @hidden */\n    _this.vGroupOffsets = {};\n    /** @hidden */\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n    _this.currentViewData = [];\n    /** @hidden */\n    _this.isManualRefresh = false;\n    /** @hidden */\n    _this.isAutoFitColumns = false;\n    /** @hidden */\n    _this.enableDeepCompare = false;\n    /** @hidden */\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n    _this.prevPageMoving = false;\n    /** @hidden */\n    _this.pageTemplateChange = false;\n    /** @hidden */\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = {};\n    /** @hidden */\n    _this.commandDelIndex = undefined;\n    /** @hidden */\n    _this.asyncTimeOut = 50;\n    /** @hidden */\n    _this.isExportGrid = false;\n    // enable/disable logger for MVC & Core\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} returns the persist data\n   */\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[i]];\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    }\n    var temp = this.pageSettings.template;\n    var settings = Object.assign({\n      template: undefined\n    }, this.pageSettings);\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isAngular) {\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    var persistData = this.addOnPersist(keyEntity);\n    settings.template = temp;\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    return persistData;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the module Declaration\n   * @hidden\n   */\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    this.enableInfiniteAggrgate();\n    var modules = [];\n    if (this.isDestroyed) {\n      return modules;\n    }\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n  Grid.prototype.initProperties = function () {\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No matches found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No matches found',\n      ClearFilter: 'Clear Filter',\n      Clear: 'Clear',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest',\n      Sort: 'Sort'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n    this.getMediaColumns();\n    setColumnIndex(this.columns);\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n    if (this.refreshing) {\n      this.trigger('created');\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showSpinner = function () {\n    if (!this.isExportGrid) {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideSpinner = function () {\n    if (!this.isExportGrid) {\n      hideSpinner(this.element);\n    }\n  };\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @param {Column} col - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @param {number} columnIndex - specifies the column index\n   * @param {MediaQueryList} e - specifies the MediaQueryList\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.' + literals.gridFooter);\n    if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n    if (this.rowRenderingMode === 'Vertical') {\n      if (this.enableHover) {\n        this.setProperties({\n          enableAdaptiveUI: true,\n          enableHover: false\n        }, true);\n        removeClass([this.element], 'e-gridhover');\n      }\n    }\n    if (this.enableAdaptiveUI && this.scrollModule) {\n      this.scrollModule.refresh();\n    }\n  };\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.eventInitializer = function () {\n    //eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n    if (!gridElement) {\n      return;\n    }\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n    if (this.isReact || this.isVue) {\n      this.destroyTemplate(['template']);\n    }\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n    this.toolTipObj.destroy();\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    this.isFreezeRefresh = false;\n  };\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n    this.clipboardModule.destroy();\n    this.printModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {GridModel} newProp - Defines new properties\n   * @param {GridModel} oldProp - Defines old properties\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n    if (this.isDestroyed) {\n      return;\n    }\n    this.log('module_missing');\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n    var properties = Object.keys(newProp);\n    if (properties.indexOf('columns') > -1) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n      }\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n          break;\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n          break;\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n          break;\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n        this.notify(events.rtlUpdated, {});\n        break;\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n      case 'dataSource':\n        // eslint-disable-next-line no-case-declarations\n        var pending_1 = this.getDataModule().getState();\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = pending_1.group || [];\n          for (var i = 0; i < names.length; i++) {\n            gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n          }\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n        this.scrollRefresh();\n        break;\n      case 'enableHover':\n        // eslint-disable-next-line no-case-declarations\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n        this.isSelectedRowIndexUpdating = false;\n        break;\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n      case 'enableAdaptiveUI':\n        this.notify(events.setFullScreenDialog, {});\n        break;\n      case 'rowRenderingMode':\n        this.enableVerticalRendering();\n        this.notify(events.rowModeChange, {});\n        this.refresh();\n        break;\n      case 'enableStickyHeader':\n        this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n        break;\n    }\n  };\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n        _this.off(events.contentReady, fn_1);\n      };\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @param {Object} prop - Defines the property\n   * @param {boolean} muteOnChange - Defines the mute on change\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n    var filterSettings = 'filterSettings';\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setTablesCount = function () {\n    var frozenCols = this.getFrozenColumns();\n    var frozenLeft = this.getFrozenLeftColumnsCount();\n    var frozenRight = this.getFrozenRightColumnsCount();\n    if (frozenCols && !frozenLeft && !frozenRight) {\n      this.tablesCount = 2;\n    } else if (!frozenCols && (frozenLeft || frozenRight)) {\n      if (frozenLeft && !frozenRight || frozenRight && !frozenLeft) {\n        this.tablesCount = 2;\n      } else if (frozenLeft && frozenRight) {\n        this.tablesCount = 3;\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} - Returns the tables count\n   */\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n    var cols = this.getColumns();\n    if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n      var cells = this.contentModule.getHeaderCells();\n      headerCells = cells.length ? cells : headerCells;\n    }\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n    this.updateColumnLevelFrozen();\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n  Grid.prototype.updateColumnLevelFrozen = function () {\n    var cols = this.columnModel;\n    var leftCols = [];\n    var rightCols = [];\n    var movableCols = [];\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var col = cols[i];\n        if (col.freeze === 'Left') {\n          col.freezeTable = literals.frozenLeft;\n          leftCols.push(col);\n        } else if (col.freeze === 'Right') {\n          col.freezeTable = literals.frozenRight;\n          rightCols.push(col);\n        } else {\n          col.freezeTable = 'movable';\n          movableCols.push(col);\n        }\n      }\n      this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n    }\n  };\n  Grid.prototype.updateFrozenColumns = function () {\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      return;\n    }\n    var cols = this.columnModel;\n    var directFrozenCount = this.frozenColumns;\n    var totalFrozenCount = this.getFrozenColumns();\n    var count = 0;\n    for (var i = 0, len = cols.length; i < len; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var col = cols[i];\n      if (directFrozenCount) {\n        if (i < directFrozenCount) {\n          col.freezeTable = literals.frozenLeft;\n        } else {\n          col.freezeTable = 'movable';\n        }\n      }\n      if (col.isFrozen && i >= directFrozenCount) {\n        col.freezeTable = literals.frozenLeft;\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      } else if (totalFrozenCount && !directFrozenCount) {\n        col.freezeTable = 'movable';\n      }\n    }\n  };\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n  };\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   *\n   * @param {boolean} isRefresh - Defines the boolean whether to refresh\n   * @returns {Column[]} - returns the column\n   */\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n    if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length && inview[0] > 0) {\n      var frozenCols = this.contentModule.ensureFrozenCols(columns);\n      columns = frozenCols;\n    }\n    return columns;\n  };\n  /**\n   * @private\n   * @param {string} stackedHeader - Defines the stacked header\n   * @param {Column[]} col - Defines the column\n   * @returns {Column} Returns the Column\n   */\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   * @returns {number[]} Returns the column indexes\n   */\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   * @returns {Query} - returns the query\n   */\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   * @returns {object} - returns the locale constants\n   */\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @param {number[]} indexes - specifies the indexes\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   *\n   * @returns {Column[]} returns the column\n   */\n  Grid.prototype.getVisibleColumns = function () {\n    return this.getCurrentVisibleColumns();\n  };\n  /**\n   * Gets the header div of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   *\n   * @param  {Element} element - Specifies the Grid header.\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   *\n   * @param  {Element} element - Specifies the Grid content table.\n   * @returns {void}\n   */\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   *\n   * @returns {Element} Returns the element\n   */\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   *\n   * @param  {Element} element - Specifies the Grid content.\n   * @returns {void}\n   */\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   *\n   * @param  {Element} element - Specifies the Grid header table.\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   *\n   * @param  {Element} element - Specifies the Grid pager.\n   * @returns {void}\n   */\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets a frozen right tables row element by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getFrozenRightRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   *\n   * @param {Element | EventTarget} target - specifies the element\n   * @returns {RowInfo} returns the row info\n   */\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.' + literals.rowCell);\n      if (!cell) {\n        var row = closest(ele, '.' + literals.row);\n        if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n          var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n          var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n          args = {\n            row: row,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n        return args;\n      }\n      var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.' + literals.row);\n        var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n        var frzCols = this.getFrozenColumns();\n        var tableName = this.columnModel[cellIndex].getFreezeTableName();\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n        if (this.isFrozenGrid()) {\n          if (tableName === literals.frozenLeft) {\n            rows = this.contentModule.getRows();\n          } else if (tableName === 'movable') {\n            index = cellIndex - frzCols - this.frozenLeftCount;\n            rows = this.contentModule.getMovableRows();\n          } else if (tableName === literals.frozenRight) {\n            index = cellIndex - (this.frozenLeftCount + this.movableCount);\n            rows = this.contentModule.getFrozenRightRows();\n          }\n        }\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[index].column;\n        }\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getFrozenRightRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd - specifies includeAdd\n   * @returns {Element[]} returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n      return [];\n    }\n    var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody() : this.getContentTable().querySelector(literals.tbody);\n    var rows = [].slice.call(tbody.children);\n    if (this.frozenRows) {\n      var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody) : this.getHeaderTable().querySelector(literals.tbody);\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @param {HTMLElement[]} fRows - Defines the frozen Rows\n   * @param {HTMLElement[]} mrows - Defines the movable Rows\n   * @returns {HTMLElement[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n    return fRows;\n  };\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n        } else {\n          dRows.push(rows[i]);\n        }\n      }\n    }\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    if (!this.isFrozenGrid()) {\n      return [];\n    }\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   *\n   * @returns {Element[]} Returns the Element\n   */\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n      return [];\n    }\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   * @returns {void}\n   */\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var isRight = this.getFrozenMode() === 'Right';\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var fieldIdx = this.getColumnIndexByField(field);\n    var col = this.getColumnByField(field);\n    var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() : col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n      var movable = this.getMovableColumnsCount();\n      if (this.isRowDragable() && !isRight) {\n        left++;\n      }\n      var frIdx = left + movable;\n      var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n      if (!isNullOrUndefined(td)) {\n        var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n        if (this.groupSettings.columns.length) {\n          fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n          fieldIdx++;\n        }\n        if (this.isRowDragable() && !isRight) {\n          fieldIdx++;\n        }\n        var sRow = selectedRow[cells][fieldIdx - Idx];\n        cell.refreshTD(td, sRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n        if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n          selectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n    var _this = this;\n    if (this.isReact) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.clearTemplate(['columnTemplate'], undefined, function () {\n        var cells = 'cells';\n        var rowIdx = 'index';\n        var rows = _this.getDataRows();\n        var indent = _this.getIndentCount();\n        var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n        for (var j = 0; j < rows.length; j++) {\n          var rowsObj = _this.getRowObjectFromUID(rows[j].getAttribute('data-uid'));\n          if (rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index)) {\n            var cell = rowsObj[cells][cellIndex];\n            var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n            var td = _this.getCellFromIndex(j, cellIndex - indent);\n            cellRenderer.refreshTD(td, cell, rowsObj.data, {\n              index: rowsObj[rowIdx]\n            });\n          }\n        }\n      });\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n    if (this.isReact) {\n      var cells = 'cells';\n      var rowsObj = this.headerModule.rows;\n      var cellIndex = this.getNormalizedColumnIndex(columnUid);\n      for (var j = 0; j < rowsObj.length; j++) {\n        var cell = rowsObj[j][cells][cellIndex];\n        if (cell && cell.column.uid === columnUid) {\n          var headerCellRenderer = new HeaderCellRenderer(this, this.serviceLocator);\n          var td = parentsUntil(this.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n          headerCellRenderer.refresh(cell, td);\n        }\n      }\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {Object} rowData - To update new data for the particular row.\n   * @returns {void}\n   */\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n      return undefined;\n    }\n    var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    var rows = this.getFrozenRightDataRows();\n    return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * Gets a movable column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @param {boolean} isMovable - Defines isMovable\n   * @param {boolean} isFrozenRight - Defines isFrozenRight\n   * @returns {Row<Column>} Returns the row object\n   * @hidden\n   */\n  Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n    if (this.isFrozenGrid()) {\n      if (!row || isMovable || isFrozenRight) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n        if (!row && this.getFrozenMode() === 'Left-Right' || isFrozenRight) {\n          row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n        }\n        return row;\n      }\n    }\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n    return row;\n  };\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n    return null;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n  Grid.prototype.getMovableRowsObject = function () {\n    var rows = [];\n    if (this.isFrozenGrid()) {\n      rows = this.contentModule.getMovableRows();\n    }\n    return rows;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    var rows = [];\n    if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n      rows = this.contentModule.getFrozenRightRows();\n    }\n    return rows;\n  };\n  /**\n   * Gets a column header by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   *\n   * @param {string} uid - Specifies the column uid.\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @param {number} index - Defines the index\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {number} Returns the index by field\n   */\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n      if (item.uid === uid) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * @param {Column[]} columns - Defines the columns\n   * @param {Column[]} stackedColumn - Defines the stacked columns\n   * @returns {Column[]} Returns the columns\n   * @hidden\n   */\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {number} Returns the column by index\n   */\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {string} Returns the column by field\n   */\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item.uid;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets column index by column uid value.\n   *\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @returns {number} Returns the column by field\n   */\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n   * Gets indent cell count.\n   *\n   * @private\n   * @returns {number} Returns the indent count\n   */\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n    if (this.isDetail()) {\n      index++;\n    }\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   *\n   * @returns {string[]} Returns the Field names\n   */\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   *\n   * @returns {Function} Returns the row TEmplate\n   * @private\n   */\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function} Returns the Detail template\n   */\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function}Returns the Edit template\n   */\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   *\n   * @private\n   * @returns {Function} returns template function\n   */\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   *\n   * @returns {string[]} Returns the field names\n   */\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refresh = function () {\n    if (!this.isDestroyed) {\n      this.isManualRefresh = true;\n      this.headerModule.refreshUI();\n      this.updateStackedFilter();\n      this.renderModule.refresh();\n    }\n  };\n  /**\n   * Refreshes the Grid header.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   *\n   * @returns {number[]} Returns the Selected row indexes\n   */\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   *\n   * @returns {number[]} Returns the Selected row cell indexes\n   */\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} Returns the selected records\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   *\n   * @returns {string[]} Returns the selected column uid\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this = this;\n    var uid = [];\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this.getColumns()[i].uid);\n      });\n    }\n    return uid;\n  };\n  /**\n   * Gets the data module.\n   *\n   * @returns {Data} Returns the data\n   */\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen column\n   */\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Right column count\n   */\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Left column\n   */\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the movable column count\n   */\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.splitFrozenCount(this.columns);\n    if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n      this.setProperties({\n        frozenColumns: 0\n      }, true);\n    }\n    this.setTablesCount();\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen left count\n   */\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen Right count\n   */\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible movable count\n   */\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n  Grid.prototype.splitFrozenCount = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columns) {\n        this.splitFrozenCount(columns[i].columns);\n      } else {\n        if (columns[i].freeze === 'Right') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n          this.frozenRightColumns.push(columns[i]);\n          this.frozenRightCount++;\n        } else if (columns[i].freeze === 'Left') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n          this.frozenLeftColumns.push(columns[i]);\n          this.frozenLeftCount++;\n        } else {\n          if (columns[i].visible !== false) {\n            this.visibleMovable++;\n          }\n          this.movableColumns.push(columns[i]);\n          this.movableCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible frozen columns count\n   */\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   *\n   * @returns {FilterUI} Returns the filter UI\n   */\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n    return visibleFrozenColumns;\n  };\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[i].columns) {\n          cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n        } else {\n          if (cols[i].isFrozen && cols[i].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n    return cnt;\n  };\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n      } else {\n        if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n        index++;\n      }\n    }\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @returns {void}\n   */\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   * @returns {void}\n   */\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @returns {void}\n   */\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n  * @hidden\n  * @returns {void}\n  */\n  Grid.prototype.clearGridActions = function () {\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, false);\n    } else {\n      this.freezeRefresh();\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @returns {void}\n   */\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   *\n   * @param {string[]} fields - Defines the Fields\n   * @returns {void}\n   */\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   */\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   * @returns {void}\n   */\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   *\n   * @returns {void}\n   */\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   *\n   * @returns {void}\n   */\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   * @returns {void}\n   */\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   * @returns {void}\n   */\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} Returns the batch changes\n   */\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @returns {void}\n   */\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   *\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   */\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n    var parentOffset = this.element.offsetWidth;\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[index].style.width = newWidth;\n        contentCol[index].style.width = newWidth;\n      } else {\n        headerCol[index].style.width = width + 'px';\n        contentCol[index].style.width = width + 'px';\n      }\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n    if (indentWidth < 1) {\n      indentWidth = 1;\n    }\n    if (this.enableColumnVirtualization || this.isAutoGen) {\n      indentWidth = 30;\n    }\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.resetIndentWidth = function () {\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n    }\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n    if (this.isFrozenGrid() && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n    if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns isRowDragable\n   */\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   *\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   *\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   *\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @returns {void}\n   */\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @param {ReturnType} e - Defines the Return type\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshDataSource = function (e) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @param {boolean} enable -Defines the enable\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   *\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @param {number} x - Defines the number\n   * @param {number} y - Defines the number\n   * @param {Element} target - Defines the Element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n      var this_1 = this;\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[i].field);\n      }\n    }\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n    this.initForeignColumn();\n  };\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n  Grid.prototype.enableVerticalRendering = function () {\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    } else {\n      this.element.classList.remove('e-row-responsive');\n    }\n  };\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    }\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n    this.enableBoxSelection();\n  };\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: literals.content,\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n    this.updateResizeLines();\n  };\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: ''\n    }, this.element);\n  };\n  /** @hidden\n   * @returns {void}\n   */\n  Grid.prototype.freezeRefresh = function () {\n    this.isFreezeRefresh = true;\n    if (this.enableVirtualization) {\n      this.pageSettings.currentPage = 1;\n    }\n    this.componentRefresh();\n  };\n  Grid.prototype.getTooltipStatus = function (element) {\n    var headerTable = this.getHeaderTable();\n    var headerDivTag = 'e-gridheader';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    var width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n    return false;\n  };\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n          this.prevElement = element;\n          var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n          if (col.disableHtmlEncode) {\n            this.toolTipObj.enableHtmlParse = false;\n          }\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n    this.hoverFrozenRows(e);\n  };\n  /**\n   * @param {MouseEvent} e - Defines the mouse event\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.isFrozenGrid()) {\n      var row = parentsUntil(e.target, literals.row);\n      if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n        var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n        for (var i = 0; i < rows.length; i++) {\n          rows[i].classList.remove('e-frozenhover');\n        }\n      } else if (row) {\n        var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n        rows.splice(rows.indexOf(row), 1);\n        for (var i = 0; i < rows.length; i++) {\n          if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n            rows[i].classList.add('e-frozenhover');\n          } else if (rows[i]) {\n            rows[i].classList.remove('e-frozenhover');\n          }\n        }\n      }\n    }\n  };\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n    return false;\n  };\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   *\n   * @param {Element} table - Defines the table\n   * @param {string} tag - Defines the tag\n   * @param {string} type - Defines the type\n   * @returns {HTMLDivElement} Returns the HTML div ELement\n   * @hidden\n   */\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr');\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n  /**\n   * Get current visible data of grid.\n   *\n   * @returns {Object[]} Returns the current view records\n   * @isGenericType true\n   */\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell')) {\n      e.preventDefault();\n    }\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n    this.notify(events.click, e);\n  };\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, literals.row);\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, literals.rowCell) && parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell'));\n  };\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n    this.notify(events.dblclick, e);\n  };\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) && parentsUntil(relatedTarget, 'e-input-group'))) {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n    this.keyPress = false;\n  };\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n    if (gridElement && gridElement.id !== this.element.id || parentsUntil(e.target, 'e-unboundcelldiv') && isNullOrUndefined(gridElement)) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @param {Object} persistedData - Defines the persisted data\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            setColumnIndex(this[key]);\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n      this.isProtectedOnChange = false;\n    }\n  };\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n    var _loop_2 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === storedColumns[i].index;\n      })[0];\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        } else {\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        }\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_2(i);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns the isDetail\n   */\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger('keyPressed', presskey);\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          this.focusModule.focusHeader();\n          this.focusModule.addOutline();\n        }\n      }\n      if (e.keyCode === 87) {\n        //alt w\n        this.focusModule.focusContent();\n        this.focusModule.addOutline();\n      }\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n    if (e.keyCode === 13) {\n      this.notify(events.enterKeyHandler, e);\n    }\n  };\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @param {Function[]} modules - Defines the modules\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   *\n   * @returns {Column[]} Returns Foreign key column\n   */\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns row height\n   */\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshColumns = function () {\n    this.setFrozenCount();\n    var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n    var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n    var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n    var isFrozen = this.getFrozenColumns() !== 0;\n    if (!isFrozen && (!fCnt && this.frozenLeftCount || !frCnt && this.frozenRightCount || fCnt && !this.frozenLeftCount || frCnt && !this.frozenRightCount)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n      this.freezeRefresh();\n    } else if (isColFrozen && (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n      if (this.isFrozenGrid()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n        remove(mTbl.querySelector(literals.colGroup));\n        var colGroup = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup).cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n        if (this.getFrozenMode() === 'Left-Right') {\n          var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n          remove(frTbl.querySelector(literals.colGroup));\n          var colGrp = this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup).cloneNode(true);\n          frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n        }\n      }\n    }\n    if (this.isFrozenGrid()) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.headerModule.getMovableHeader().scrollLeft = left;\n      this.contentModule.getMovableContent().scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns the excelexport\n   */\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns csv export\n   */\n  Grid.prototype.csvExport = function (excelExportProperties,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   *\n   * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns pdfexport\n   */\n  Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to group.\n   * @returns {void}\n   */\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n   * Collapses all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   *\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @returns {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n  /**\n   * Clears all the grouped columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   *\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   *\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * @returns {void}\n   */\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param {number} x - Defines the X axis.\n   * @param {number} y - Defines the Y axis.\n   * @returns {void}\n   */\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n    var refresh = function () {\n      _this.scrollModule.refresh();\n      _this.off(events.contentReady, refresh);\n    };\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns whether context menu is open or not\n   */\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @param {Function} module - Defines the module\n   * @returns {boolean} return the injected modules\n   * @hidden\n   */\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   *\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   * @param {any} index - specifies the index\n   */\n  // eslint-disable-next-line\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @param {string | string[]} type - Defines the type\n   * @param {Object} args - Defines the arguments\n   * @returns {void}\n   * @hidden\n   * @private\n   */\n  Grid.prototype.log = function (type, args) {\n    // eslint-disable-next-line\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @param {Element} element - Defines the element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   * @returns {Object} Returns the previous row data\n   */\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.' + literals.content);\n    var scrollBar = this.getContent().querySelector('.e-scrollbar');\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n    if (this.isFrozenGrid() && scrollBar) {\n      var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n      var mvblChild = this.getContent().querySelector('.e-movablechild');\n      scrollBar.style.display = 'flex';\n      if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n        scrollBar.style.display = 'none';\n        this.notify(events.frozenHeight, 0);\n      }\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   *\n   * @param  {string | Object} value - Defines the primary key value.\n   * @returns {number} Returns the index\n   */\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n    var rows = this.getRowsObject();\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n        continue;\n      }\n      var pKvalue = rows[i].data[pkName];\n      if (pkName.split('.').length > 1) {\n        pKvalue = performComplexDataOperation(pkName, rows[i].data);\n      }\n      if (pKvalue === value) {\n        return rows[i].index;\n      }\n    }\n    return -1;\n  };\n  /**\n   * @param {string} field - Defines the field name\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (field === gCols[i].field) {\n        column = gCols[i];\n      }\n    }\n    return column;\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[i].uid) {\n        column = gCols[i];\n      }\n    }\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   *\n   * @returns {Object[] | Promise<Object>} Returns the filtered records\n   */\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n    return [];\n  };\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @param {TouchEventArgs} e - Defines the TouchEventArgs\n   * @returns {void}\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  // eslint-disable-next-line\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @param {string} prefix - specifies the prefix\n   * @returns {string} returns the row uid\n   * @hidden\n   */\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.movableContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.frozenContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n  };\n  /**\n   * @param {string} uid - specifies the uid\n   * @returns {Element} returns the element\n   * @hidden\n   */\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n    if (this.isFrozenGrid()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n      var frozenRigtRows = [];\n      if (this.tablesCount === 3) {\n        frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n      }\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n        if (this.tablesCount === 3) {\n          var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n          rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n        }\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows).concat(frozenRigtRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n    return rowEle;\n  };\n  /**\n   * Gets the hidden columns from the Grid.\n   *\n   * @returns {Column[]} Returns the Column\n   */\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  /**\n   * calculatePageSizeByParentHeight\n   *\n   * @param {number | string } containerHeight - specifies the container height\n   * @returns {number} returns the page size\n   */\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n        if (containerHeight.indexOf('%') !== -1) {\n          containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n        }\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n    return 0;\n  };\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n    if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n      height += this.element.querySelector('.e-columnheader').clientHeight;\n    }\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n        height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n      }\n    }\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *\n   * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n   * @returns {number} returns the summary values\n   */\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * Sends a Post request to export Grid to Excel file in server side.\n   *\n   * @param  {string} url - Pass Url for server side excel export action.\n   * @returns {void}\n   */\n  Grid.prototype.serverExcelExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to Pdf file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n  Grid.prototype.serverPdfExport = function (url) {\n    this.isExcel = false;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to CSV file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n  Grid.prototype.serverCsvExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * @param {string} url - Defines exporting url\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.exportGrid = function (url) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var grid = this;\n    var query = grid.getDataModule().generateQuery(true);\n    var state = new UrlAdaptor().processQuery(new DataManager({\n      url: ''\n    }), query);\n    var queries = JSON.parse(state.data);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates', 'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n    var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField', 'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n    gridModel.filterSettings.columns = queries.where;\n    gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n    gridModel.sortSettings.columns = queries.sorted;\n    gridModel.columns = this.setHeaderText(gridModel.columns, include);\n    var form = this.createElement('form', {\n      id: 'ExportForm',\n      styles: 'display:none;'\n    });\n    var gridInput = this.createElement('input', {\n      id: 'gridInput',\n      attrs: {\n        name: 'gridModel'\n      }\n    });\n    gridInput.value = JSON.stringify(gridModel);\n    form.method = 'POST';\n    form.action = url;\n    form.appendChild(gridInput);\n    document.body.appendChild(form);\n    form.submit();\n    form.remove();\n  };\n  /**\n   * @param {Column[]} columns - Defines array of columns\n   * @param {string[]} include - Defines array of sting\n   * @returns {Column[]} returns array of columns\n   * @hidden\n   */\n  Grid.prototype.setHeaderText = function (columns, include) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = this.getColumnByUid(columns[i].uid);\n      columns[i].headerText = column.headerText;\n      if (!isNullOrUndefined(column.template)) {\n        columns[i].template = 'true';\n      }\n      if (columns[i].format) {\n        columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n      }\n      if (columns[i].columns) {\n        this.setHeaderText(columns[i].columns, include);\n      }\n      var keys = Object.keys(columns[i]);\n      for (var j = 0; j < keys.length; j++) {\n        if (include.indexOf(keys[j]) < 0) {\n          delete columns[i][keys[j]];\n        }\n      }\n    }\n    return columns;\n  };\n  Grid.prototype.getFormat = function (format) {\n    return typeof format === 'object' ? !isNullOrUndefined(format.format) ? format.format : format.skeleton : format;\n  };\n  /**\n   * @hidden\n   * @returns {boolean} returns the isCollapseStateEnabled\n   */\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} rowData - Defines the rowData\n   * @returns {void}\n   */\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @param {string} field - specifies the field\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n      if (target && filterDlg) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n        if (filterDlg) {\n          if (filterDlg.offsetWidth + fClient.right > gClient.right) {\n            filterDlg.style.left = (fClient.right - filterDlg.offsetWidth - gClient.left).toString() + 'px';\n          } else {\n            filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.renderTemplates = function () {\n    var portals = 'portals';\n    this.notify('reactTemplateRender', this[portals]);\n    this.renderReactTemplates();\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this = this;\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this.processRowChanges(_this.dataToBeUpdated);\n        _this.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[i]]) {\n          compareChanges(this, changes, loopstring[i], keyField);\n        }\n      }\n    }\n  };\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this = this;\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n    if (this.getDataModule().isRemote()) {\n      promise.then(function () {\n        _this.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n  Grid.prototype.setNewData = function () {\n    var _this = this;\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n    remove(tr);\n    if (this.getFrozenColumns()) {\n      var mtr = this.getMovableRows()[index];\n      remove(mtr);\n    }\n  };\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this = this;\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    var _loop_3 = function (i) {\n      if (!result.filter(function (e) {\n        return e[keyField] === rowObj[i].data[keyField];\n      }).length) {\n        this_3.deleteRowElement(rowObj[i]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n      out_i_1 = i;\n    };\n    var this_3 = this,\n      out_i_1;\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_3(i);\n      i = out_i_1;\n    }\n    var _loop_4 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[keyField] === result[i][keyField]) {\n          if (e !== result[i]) {\n            _this.setRowData(result[i][keyField], result[i]);\n          }\n          isRowExist = true;\n        }\n      });\n      if (!isRowExist) {\n        this_4.renderRowElement(result[i], i);\n      }\n    };\n    var this_4 = this;\n    for (var i = 0; i < result.length; i++) {\n      _loop_4(i);\n    }\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    var mTr;\n    var mTbody;\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n      if (this.getFrozenColumns()) {\n        var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n        moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n      }\n    }\n    if (this.getFrozenColumns()) {\n      mTr = renderMovable(tr, this.getFrozenColumns(), this);\n      if (this.frozenRows && index < this.frozenRows) {\n        mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n      } else {\n        mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n      }\n      mTbody.appendChild(mTr);\n      if (this.height === 'auto') {\n        this.notify(events.frozenHeight, {});\n      }\n    }\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector(literals.tbody);\n    } else {\n      tbody = this.getContent().querySelector(literals.tbody);\n    }\n    tbody = this.getContent().querySelector(literals.tbody);\n    tbody.appendChild(tr);\n  };\n  Grid.prototype.addRowObject = function (row, index) {\n    var frzCols = this.getFrozenColumns();\n    if (frzCols) {\n      var mRows = this.getMovableRowsObject();\n      var mRow = row.clone();\n      mRow.cells = mRow.cells.slice(frzCols);\n      row.cells = row.cells.slice(0, frzCols);\n      mRows.splice(index, 1, mRow);\n    }\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateVisibleExpandCollapseRows = function () {\n    var rows = this.getRowsObject();\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if ((rows[i].isDataRow || rows[i].isAggregateRow) && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n        rows[i].visible = false;\n      } else {\n        rows[i].visible = true;\n      }\n    }\n  };\n  /**\n   * @param {string | number} height - specifies the height\n   * @returns {number | string} - specifies the height number\n   * @hidden\n   */\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n      height = parseInt(height, 10) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height, 10);\n    } else {\n      height = this.height;\n    }\n    return height;\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right content\n   */\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.getContent().querySelector('.e-frozen-right-content');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header\n   */\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozen-right-header');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable header tbody\n   */\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getMovableVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable content tbody\n   */\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getMovableVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen header tbody\n   */\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen left content tbody\n   */\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getFrozenVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header tbody\n   */\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getFrozenRightHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @returns {Element} returns frozen right content tbody\n   * @hidden\n   */\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    var cnt = this.getFrozenRightContent();\n    var tbody;\n    if (cnt) {\n      tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n    }\n    return tbody;\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom filter dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n    if (this.filterModule) {\n      this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom sort dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n    if (this.sortModule) {\n      this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * To manually show the vertical row mode filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveFilterDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomFilter(true);\n    }\n  };\n  /**\n   * To manually show the vertical row sort filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveSortDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomSort(true);\n    }\n  };\n  /**\n   * @param {boolean} isColVirtualization - Defines column virtualization\n   * @returns {Column[]} returns array of column models\n   * @hidden\n   */\n  Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n    var cols = [];\n    var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n    for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n      var col = gridCols_1[_i];\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  Grid.prototype.enableInfiniteAggrgate = function () {\n    if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n      this.setProperties({\n        groupSettings: {\n          disablePageWiseAggregates: true\n        }\n      }, true);\n    }\n  };\n  var Grid_1;\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableStickyHeader\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n  __decorate([Property('Horizontal')], Grid.prototype, \"rowRenderingMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAdaptiveUI\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n  __decorate([Property('19.4.56')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\nexport { Grid };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNullOrUndefined","setValue","getValue","Component","ChildProperty","Browser","closest","extend","addClass","removeClass","append","remove","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","UrlAdaptor","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","ispercentageWidth","renderMovable","getNumberFormat","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","performComplexDataOperation","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","RowModelGenerator","literals","HeaderCellRenderer","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","frozenLeftCount","tablesCount","movableCount","visibleFrozenLeft","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","media","isFreezeRefresh","tableIndex","componentRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","isManualRefresh","isAutoFitColumns","enableDeepCompare","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","commandDelIndex","undefined","asyncTimeOut","isExportGrid","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","currentObject","_i","_a","val","temp","template","settings","assign","setProperties","isAngular","pagerTemplate","persistData","addOnPersist","requiredModules","setFrozenCount","enableInfiniteAggrgate","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","Clear","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","Sort","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","refreshing","type","getHeaderContent","getElementsByClassName","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","footerContent","querySelector","gridFooter","scrollHeight","height","checkboxColumn","filter","checkboxMode","rowRenderingMode","enableHover","enableAdaptiveUI","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","gridHeader","gridContent","unwireEvents","destroyDependentModules","isReact","isVue","destroyTemplate","toolTipObj","innerHTML","keyboardModule","focusModule","clipboardModule","printModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","isEllipsisTooltip","close","properties","keys","indexOf","columnModel","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","refreshHeader","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","isQueryInvokedFromData","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult","result","names","group","count","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","isSelectedRowIndexUpdating","selectRow","widthService","setWidthToTable","setFullScreenDialog","enableVerticalRendering","rowModeChange","addStickyListener","enableStickyHeader","fn_1","off","contentReady","on","muteOnChange","filterModule","refreshFilter","setTablesCount","frozenCols","frozenLeft","getFrozenLeftColumnsCount","frozenRight","getFrozenRightColumnsCount","getTablesCount","headerCells","slice","querySelectorAll","stdHdrCell","cols","cells","contentModule","getHeaderCells","cell","updateColumnModel","len","updateColumnLevelFrozen","updateFrozenColumns","updateLockableColumns","leftCols","rightCols","movableCols","freeze","freezeTable","concat","directFrozenCount","frozenColumns","totalFrozenCount","isFrozen","getFrozenLeftCount","isFrozenGrid","getFrozenMode","frozenName","frozenCount","lockColumn","isRefresh","inview","map","v","vLen","ensureFrozenCols","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getCurrentVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","rowCell","row","rowObj","getRowObjectFromUID","getAttribute","rowIndex","parseInt","ariaRowIndex","rowData","data","cellIndex","ariaColIndex","isNaN","row_1","frzCols","tableName","getFreezeTableName","rows","getIndentCount","getMovableRows","getFrozenRightRows","rowsObject","column","getMovableRowElements","getFrozenRightRowElements","getDataRows","getAllDataRows","includeAdd","tbody","getFrozenLeftContentTbody","children","hdrTbody","frozenHeader","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","movableContent","movableHeader","getAllFrozenDataRows","frozenContent","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","isRight","pkName","fieldIdx","getColumnIndexByField","getColumnByField","rowObjects","getFrozenRightRowsObject","selectedRow","tr","left","movable","getMovableColumnsCount","isRowDragable","frIdx","td","getCellFromIndex","Idx","childGrid","sRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","refreshReactColumnTemplateByUid","columnUid","clearTemplate","indent","getNormalizedColumnIndex","j","rowsObj","isDataRow","cellRenderer","refreshReactHeaderTemplateByUid","headerCellRenderer","rowRenderer","changes","getForeignKeyColumns","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableVirtualHeader","getFrozenRightColumnHeaderByIndex","getFrozenRightHeader","getFrozenLeftColumnHeaderByIndex","getFrozenVirtualHeader","isMovable","isFrozenRight","rowObject","rows_1","getRowsObject","getMovableRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","item","getColumnByUid","getStackedColumns","columns_1","getUidByColumnField","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getFrozenRightColumns","getFrozenLeftColumns","getMovableColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","clearGridActions","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","recalcIndentWidth","indentWidth","offsetWidth","headerCol","colGroup","childNodes","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","style","columnWidthChanged","setAttribute","resetIndentWidth","removeAttribute","setWidthToColumns","minWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","textWrapSettings","wrapMode","refreshHandlers","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","isFromGroup","this_1","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","allowResizing","opensOn","getTooltipStatus","headerDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","prevElement","tagName","elemNames","innerText","disableHtmlEncode","enableHtmlParse","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","removeEventListener","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","cancel","recordClick","click","mode","editedRow","addedRow","grid","id","dataRow","recordDoubleClick","dblclick","display","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_2","localCol","tCol","this_2","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","focusHeader","addOutline","focusContent","enterKeyHandler","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","frCnt","isColFrozen","mTbl","getMovableContent","cloneNode","insertBefore","frTbl","getFrozenRightContent","colGrp","scrollLeft","getMovableHeader","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","propertyNames","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","scrollBar","clientHeight","overflowY","mvblScrollBar","mvblChild","frozenHeight","getRowIndexByPrimaryKey","isDetailRow","isCaptionRow","pKvalue","split","grabColumnByFieldFromAllCols","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getRowElementByUID","rowEle","mRows","frozenRigtRows","frHdr","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","contentHeight","Math","floor","showDropArea","getSummaryValues","summaryCol","summaryData","serverExcelExport","isExcel","exportGrid","serverPdfExport","serverCsvExport","state","processQuery","queries","gridModel","include","sorted","setHeaderText","form","gridInput","name","stringify","method","submit","format","getFormat","skeleton","isExpanded","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","header","filterDlg","gClient","fClient","right","toString","renderTemplates","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","then","setNewData","oldValues","bulkRefresh","deleteRowElement","mtr","_loop_3","this_3","out_i_1","_loop_4","isRowExist","this_4","renderRowElement","model","modelData","generateRows","mTr","mTbody","addRowObject","emptyRow","parentNode","moveTbody","mRow","clone","updateVisibleExpandCollapseRows","isAggregateRow","getHeight","Number","isInteger","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","showResponsiveCustomFilter","isCustom","showCustomFilter","showResponsiveCustomSort","showCustomSort","showAdaptiveFilterDialog","showAdaptiveSortDialog","isColVirtualization","gridCols","gridCols_1","disablePageWiseAggregates"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.keyA = false;\n        _this.frozenRightCount = 0;\n        _this.frozenLeftCount = 0;\n        _this.tablesCount = 1;\n        _this.movableCount = 0;\n        _this.visibleFrozenLeft = 0;\n        _this.visibleFrozenRight = 0;\n        _this.visibleMovable = 0;\n        _this.frozenLeftColumns = [];\n        _this.frozenRightColumns = [];\n        _this.movableColumns = [];\n        _this.media = {};\n        _this.isFreezeRefresh = false;\n        /** @hidden */\n        _this.tableIndex = 0;\n        _this.componentRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.isManualRefresh = false;\n        /** @hidden */\n        _this.isAutoFitColumns = false;\n        /** @hidden */\n        _this.enableDeepCompare = false;\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = {};\n        /** @hidden */\n        _this.commandDelIndex = undefined;\n        /** @hidden */\n        _this.asyncTimeOut = 50;\n        /** @hidden */\n        _this.isExportGrid = false;\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        this.setProperties({ pageSettings: settings }, true);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isAngular) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        setColumnIndex(this.columns);\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n        if (this.refreshing) {\n            this.trigger('created');\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            hideSpinner(this.element);\n        }\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + literals.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                removeClass([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (this.isReact || this.isVue) {\n            this.destroyTemplate(['template']);\n        }\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n        this.isFreezeRefresh = false;\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (pending_1.group || []);\n                    for (var i = 0; i < names.length; i++) {\n                        gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(events.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(events.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setTablesCount = function () {\n        var frozenCols = this.getFrozenColumns();\n        var frozenLeft = this.getFrozenLeftColumnsCount();\n        var frozenRight = this.getFrozenRightColumnsCount();\n        if (frozenCols && !frozenLeft && !frozenRight) {\n            this.tablesCount = 2;\n        }\n        else if (!frozenCols && (frozenLeft || frozenRight)) {\n            if ((frozenLeft && !frozenRight) || (frozenRight && !frozenLeft)) {\n                this.tablesCount = 2;\n            }\n            else if (frozenLeft && frozenRight) {\n                this.tablesCount = 3;\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n            var cells = this.contentModule.getHeaderCells();\n            headerCells = cells.length ? cells : headerCells;\n        }\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateColumnLevelFrozen();\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateColumnLevelFrozen = function () {\n        var cols = this.columnModel;\n        var leftCols = [];\n        var rightCols = [];\n        var movableCols = [];\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var col = cols[i];\n                if (col.freeze === 'Left') {\n                    col.freezeTable = literals.frozenLeft;\n                    leftCols.push(col);\n                }\n                else if (col.freeze === 'Right') {\n                    col.freezeTable = literals.frozenRight;\n                    rightCols.push(col);\n                }\n                else {\n                    col.freezeTable = 'movable';\n                    movableCols.push(col);\n                }\n            }\n            this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n        }\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            return;\n        }\n        var cols = this.columnModel;\n        var directFrozenCount = this.frozenColumns;\n        var totalFrozenCount = this.getFrozenColumns();\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var col = cols[i];\n            if (directFrozenCount) {\n                if (i < directFrozenCount) {\n                    col.freezeTable = literals.frozenLeft;\n                }\n                else {\n                    col.freezeTable = 'movable';\n                }\n            }\n            if (col.isFrozen && i >= directFrozenCount) {\n                col.freezeTable = literals.frozenLeft;\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n            else if (totalFrozenCount && !directFrozenCount) {\n                col.freezeTable = 'movable';\n            }\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length\n            && inview[0] > 0) {\n            var frozenCols = this.contentModule.ensureFrozenCols(columns);\n            columns = frozenCols;\n        }\n        return columns;\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.' + literals.rowCell);\n            if (!cell) {\n                var row = closest(ele, '.' + literals.row);\n                if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n                    args = { row: row, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.' + literals.row);\n                var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n                var frzCols = this.getFrozenColumns();\n                var tableName = this.columnModel[cellIndex].getFreezeTableName();\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                if (this.isFrozenGrid()) {\n                    if (tableName === literals.frozenLeft) {\n                        rows = this.contentModule.getRows();\n                    }\n                    else if (tableName === 'movable') {\n                        index = cellIndex - frzCols - this.frozenLeftCount;\n                        rows = this.contentModule.getMovableRows();\n                    }\n                    else if (tableName === literals.frozenRight) {\n                        index = cellIndex - (this.frozenLeftCount + this.movableCount);\n                        rows = this.contentModule.getFrozenRightRows();\n                    }\n                }\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[index].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getFrozenRightRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n            return [];\n        }\n        var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody()\n            : this.getContentTable().querySelector(literals.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.frozenRows) {\n            var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody)\n                : this.getHeaderTable().querySelector(literals.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n                }\n                else {\n                    dRows.push(rows[i]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        if (!this.isFrozenGrid()) {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var isRight = this.getFrozenMode() === 'Right';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() :\n            col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n            var movable = this.getMovableColumnsCount();\n            if (this.isRowDragable() && !isRight) {\n                left++;\n            }\n            var frIdx = left + movable;\n            var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n            if (!isNullOrUndefined(td)) {\n                var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable() && !isRight) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n                    selectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rows = _this.getDataRows();\n                var indent = _this.getIndentCount();\n                var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rows.length; j++) {\n                    var rowsObj = _this.getRowObjectFromUID(rows[j].getAttribute('data-uid'));\n                    if (rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index)) {\n                        var cell = rowsObj[cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n                        var td = _this.getCellFromIndex(j, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj.data, { index: rowsObj[rowIdx] });\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n        if (this.isReact) {\n            var cells = 'cells';\n            var rowsObj = this.headerModule.rows;\n            var cellIndex = this.getNormalizedColumnIndex(columnUid);\n            for (var j = 0; j < rowsObj.length; j++) {\n                var cell = rowsObj[j][cells][cellIndex];\n                if (cell && cell.column.uid === columnUid) {\n                    var headerCellRenderer = new HeaderCellRenderer(this, this.serviceLocator);\n                    var td = parentsUntil(this.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n                    headerCellRenderer.refresh(cell, td);\n                }\n            }\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n            return undefined;\n        }\n        var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        var rows = this.getFrozenRightDataRows();\n        return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @param {boolean} isMovable - Defines isMovable\n     * @param {boolean} isFrozenRight - Defines isFrozenRight\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.isFrozenGrid()) {\n            if (!row || isMovable || isFrozenRight) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                if ((!row && this.getFrozenMode() === 'Left-Right') || isFrozenRight) {\n                    row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n                }\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            rows = this.contentModule.getMovableRows();\n        }\n        return rows;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        var rows = [];\n        if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n            rows = this.contentModule.getFrozenRightRows();\n        }\n        return rows;\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function}Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this.getColumns()[i].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {Data} Returns the data\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.splitFrozenCount(this.columns);\n        if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n            this.setProperties({ frozenColumns: 0 }, true);\n        }\n        this.setTablesCount();\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.splitFrozenCount(columns[i].columns);\n            }\n            else {\n                if (columns[i].freeze === 'Right') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[i]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[i].freeze === 'Left') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[i]);\n                    this.frozenLeftCount++;\n                }\n                else {\n                    if (columns[i].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[i]);\n                    this.movableCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if (!this.frozenLeftCount && !this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[i].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n                }\n                else {\n                    if (cols[i].isFrozen && cols[i].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n            }\n            else {\n                if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n    * @hidden\n    * @returns {void}\n    */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[index].style.width = newWidth;\n                contentCol[index].style.width = newWidth;\n            }\n            else {\n                headerCol[index].style.width = width + 'px';\n                contentCol[index].style.width = width + 'px';\n            }\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[i].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: literals.content, attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({ opensOn: 'custom', content: '' }, this.element);\n    };\n    /** @hidden\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        this.isFreezeRefresh = true;\n        if (this.enableVirtualization) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n                    if (col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    /**\n     * @param {MouseEvent} e - Defines the mouse event\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.isFrozenGrid()) {\n            var row = parentsUntil(e.target, literals.row);\n            if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n                var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].classList.remove('e-frozenhover');\n                }\n            }\n            else if (row) {\n                var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n                rows.splice(rows.indexOf(row), 1);\n                for (var i = 0; i < rows.length; i++) {\n                    if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n                        rows[i].classList.add('e-frozenhover');\n                    }\n                    else if (rows[i]) {\n                        rows[i].classList.remove('e-frozenhover');\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr');\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell'))) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, literals.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, literals.rowCell) &&\n            parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) &&\n                parentsUntil(relatedTarget, 'e-input-group'))) {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if ((gridElement && gridElement.id !== this.element.id) || (parentsUntil(e.target, 'e-unboundcelldiv') &&\n            isNullOrUndefined(gridElement))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        setColumnIndex(this[key]);\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var _loop_2 = function (i) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === storedColumns[i].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n                else {\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_2(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    this.focusModule.focusHeader();\n                    this.focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                this.focusModule.focusContent();\n                this.focusModule.addOutline();\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(events.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.setFrozenCount();\n        var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n        var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n        var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n        var isFrozen = this.getFrozenColumns() !== 0;\n        if (!isFrozen && ((!fCnt && this.frozenLeftCount) || (!frCnt && this.frozenRightCount) || (fCnt && !this.frozenLeftCount)\n            || (frCnt && !this.frozenRightCount))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else if (isColFrozen && ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.isFrozenGrid()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n                remove(mTbl.querySelector(literals.colGroup));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.' + literals.movableHeader).querySelector(literals.colGroup)).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n                if (this.getFrozenMode() === 'Left-Right') {\n                    var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n                    remove(frTbl.querySelector(literals.colGroup));\n                    var colGrp = ((this.getHeaderContent()\n                        .querySelector('.e-frozen-right-header').querySelector(literals.colGroup)).cloneNode(true));\n                    frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n                }\n            }\n        }\n        if (this.isFrozenGrid()) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.headerModule.getMovableHeader().scrollLeft = left;\n            this.contentModule.getMovableContent().scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + literals.content);\n        var scrollBar = this.getContent().querySelector('.e-scrollbar');\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n        if (this.isFrozenGrid() && scrollBar) {\n            var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n            var mvblChild = this.getContent().querySelector('.e-movablechild');\n            scrollBar.style.display = 'flex';\n            if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n                scrollBar.style.display = 'none';\n                this.notify(events.frozenHeight, 0);\n            }\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[i].data[pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = performComplexDataOperation(pkName, rows[i].data);\n            }\n            if (pKvalue === value) {\n                return rows[i].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (field === gCols[i].field) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[i].uid) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.movableContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.frozenContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n            var frozenRigtRows = [];\n            if (this.tablesCount === 3) {\n                frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n            }\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n                if (this.tablesCount === 3) {\n                    var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n                    rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n                }\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows).concat(frozenRigtRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * calculatePageSizeByParentHeight\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[i].uid);\n            columns[i].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[i].template = 'true';\n            }\n            if (columns[i].format) {\n                columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n            }\n            if (columns[i].columns) {\n                this.setHeaderText(columns[i].columns, include);\n            }\n            var keys = Object.keys(columns[i]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[j]) < 0) {\n                    delete columns[i][keys[j]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target && filterDlg) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    if ((filterDlg.offsetWidth + fClient.right) > gClient.right) {\n                        filterDlg.style.left = ((fClient.right - filterDlg.offsetWidth) - gClient.left).toString() + 'px';\n                    }\n                    else {\n                        filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.renderTemplates = function () {\n        var portals = 'portals';\n        this.notify('reactTemplateRender', this[portals]);\n        this.renderReactTemplates();\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this.processRowChanges(_this.dataToBeUpdated);\n                _this.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[i]]) {\n                    compareChanges(this, changes, loopstring[i], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n        remove(tr);\n        if (this.getFrozenColumns()) {\n            var mtr = this.getMovableRows()[index];\n            remove(mtr);\n        }\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_3 = function (i) {\n            if (!result.filter(function (e) { return e[keyField] === rowObj[i].data[keyField]; }).length) {\n                this_3.deleteRowElement(rowObj[i]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_3(i);\n            i = out_i_1;\n        }\n        var _loop_4 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[keyField] === result[i][keyField]) {\n                    if (e !== result[i]) {\n                        _this.setRowData(result[i][keyField], result[i]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_4.renderRowElement(result[i], i);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_4(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        var mTr;\n        var mTbody;\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.getFrozenColumns()) {\n                var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n                (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            }\n        }\n        if (this.getFrozenColumns()) {\n            mTr = renderMovable(tr, this.getFrozenColumns(), this);\n            if (this.frozenRows && index < this.frozenRows) {\n                mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n            }\n            else {\n                mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n            }\n            mTbody.appendChild(mTr);\n            if (this.height === 'auto') {\n                this.notify(events.frozenHeight, {});\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(literals.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(literals.tbody);\n        }\n        tbody = this.getContent().querySelector(literals.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        var frzCols = this.getFrozenColumns();\n        if (frzCols) {\n            var mRows = this.getMovableRowsObject();\n            var mRow = row.clone();\n            mRow.cells = mRow.cells.slice(frzCols);\n            row.cells = row.cells.slice(0, frzCols);\n            mRows.splice(index, 1, mRow);\n        }\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if ((rows[i].isDataRow || rows[i].isAggregateRow) && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n                rows[i].visible = false;\n            }\n            else {\n                rows[i].visible = true;\n            }\n        }\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.getContent().querySelector('.e-frozen-right-content');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozen-right-header');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getMovableVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getMovableVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getFrozenVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getFrozenRightHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        var cnt = this.getFrozenRightContent();\n        var tbody;\n        if (cnt) {\n            tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n        }\n        return tbody;\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('19.4.56')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}