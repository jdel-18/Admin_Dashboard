{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { iterateArrayOrObject, isGroupAdaptive } from '../base/util';\nimport * as events from '../base/constant';\n/**\n * The `ShowHide` module is used to control column visibility.\n */\nvar ShowHide = /** @class */function () {\n  /**\n   * Constructor for the show hide module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @hidden\n   */\n  function ShowHide(parent) {\n    this.parent = parent;\n  }\n  /**\n   * Shows a column by column name.\n   *\n   * @param  {string|string[]} columnName - Defines a single or collection of column names to show.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n  ShowHide.prototype.show = function (columnName, showBy) {\n    var keys = this.getToggleFields(columnName);\n    var columns = this.getColumns(keys, showBy);\n    this.parent.notify(events.tooltipDestroy, {\n      module: 'edit'\n    });\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].visible = true;\n    }\n    this.setVisible(columns);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} columnName - Defines a single or collection of column names to hide.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n  ShowHide.prototype.hide = function (columnName, hideBy) {\n    var keys = this.getToggleFields(columnName);\n    var columns = this.getColumns(keys, hideBy);\n    this.parent.notify(events.tooltipDestroy, {\n      module: 'edit'\n    });\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].visible = false;\n    }\n    this.setVisible(columns);\n  };\n  ShowHide.prototype.getToggleFields = function (key) {\n    var finalized = [];\n    if (typeof key === 'string') {\n      finalized = [key];\n    } else {\n      finalized = key;\n    }\n    return finalized;\n  };\n  ShowHide.prototype.getColumns = function (keys, getKeyBy) {\n    var _this = this;\n    var columns = iterateArrayOrObject(keys, function (key) {\n      return iterateArrayOrObject(_this.parent.columnModel, function (item) {\n        if (item[getKeyBy] === key) {\n          return item;\n        }\n        return undefined;\n      })[0];\n    });\n    return columns;\n  };\n  /**\n   * Shows or hides columns by given column collection.\n   *\n   * @private\n   * @param {Column[]} columns - Specifies the columns.\n   * @param {Column[]} changedStateColumns - specifies the changedStateColumns\n   * @returns {void}\n   */\n  ShowHide.prototype.setVisible = function (columns, changedStateColumns) {\n    var _this = this;\n    if (changedStateColumns === void 0) {\n      changedStateColumns = [];\n    }\n    changedStateColumns = changedStateColumns.length > 0 ? changedStateColumns : columns;\n    var args = {\n      requestType: 'columnstate',\n      cancel: false,\n      columns: changedStateColumns\n    };\n    var cancel = 'cancel';\n    this.parent.trigger(events.actionBegin, args, function (showHideArgs) {\n      var currentViewCols = _this.parent.getColumns();\n      columns = isNullOrUndefined(columns) ? currentViewCols : columns;\n      if (showHideArgs[cancel]) {\n        _this.parent.notify(events.resetColumns, {\n          showHideArgs: showHideArgs\n        });\n        if (columns.length > 0) {\n          columns[0].visible = true;\n        }\n        return;\n      }\n      if (isGroupAdaptive(_this.parent)) {\n        _this.parent.contentModule.emptyVcRows();\n      }\n      if (_this.parent.allowSelection && _this.parent.getSelectedRecords().length && !_this.parent.selectionSettings.persistSelection) {\n        _this.parent.clearSelection();\n      }\n      if (_this.parent.enableColumnVirtualization) {\n        var colsInCurrentView = columns.filter(function (col1) {\n          return currentViewCols.some(function (col2) {\n            return col1.field === col2.field;\n          });\n        });\n        if (colsInCurrentView.length) {\n          _this.parent.notify(events.columnVisibilityChanged, columns);\n        }\n      } else {\n        _this.parent.notify(events.columnVisibilityChanged, columns);\n      }\n      var params = {\n        requestType: 'columnstate',\n        columns: changedStateColumns\n      };\n      _this.parent.trigger(events.actionComplete, params);\n      if (_this.parent.columnQueryMode !== 'All') {\n        _this.parent.refresh();\n      }\n    });\n  };\n  return ShowHide;\n}();\nexport { ShowHide };","map":{"version":3,"names":["isNullOrUndefined","iterateArrayOrObject","isGroupAdaptive","events","ShowHide","parent","prototype","show","columnName","showBy","keys","getToggleFields","columns","getColumns","notify","tooltipDestroy","module","i","length","visible","setVisible","hide","hideBy","key","finalized","getKeyBy","_this","columnModel","item","undefined","changedStateColumns","args","requestType","cancel","trigger","actionBegin","showHideArgs","currentViewCols","resetColumns","contentModule","emptyVcRows","allowSelection","getSelectedRecords","selectionSettings","persistSelection","clearSelection","enableColumnVirtualization","colsInCurrentView","filter","col1","some","col2","field","columnVisibilityChanged","params","actionComplete","columnQueryMode","refresh"],"sources":["C:/Users/Josh/Desktop/School-work/admin_dash/Admin_Dashboard/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { iterateArrayOrObject, isGroupAdaptive } from '../base/util';\nimport * as events from '../base/constant';\n/**\n * The `ShowHide` module is used to control column visibility.\n */\nvar ShowHide = /** @class */ (function () {\n    /**\n     * Constructor for the show hide module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @hidden\n     */\n    function ShowHide(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Shows a column by column name.\n     *\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to show.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    ShowHide.prototype.show = function (columnName, showBy) {\n        var keys = this.getToggleFields(columnName);\n        var columns = this.getColumns(keys, showBy);\n        this.parent.notify(events.tooltipDestroy, { module: 'edit' });\n        for (var i = 0; i < columns.length; i++) {\n            columns[i].visible = true;\n        }\n        this.setVisible(columns);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to hide.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    ShowHide.prototype.hide = function (columnName, hideBy) {\n        var keys = this.getToggleFields(columnName);\n        var columns = this.getColumns(keys, hideBy);\n        this.parent.notify(events.tooltipDestroy, { module: 'edit' });\n        for (var i = 0; i < columns.length; i++) {\n            columns[i].visible = false;\n        }\n        this.setVisible(columns);\n    };\n    ShowHide.prototype.getToggleFields = function (key) {\n        var finalized = [];\n        if (typeof key === 'string') {\n            finalized = [key];\n        }\n        else {\n            finalized = key;\n        }\n        return finalized;\n    };\n    ShowHide.prototype.getColumns = function (keys, getKeyBy) {\n        var _this = this;\n        var columns = iterateArrayOrObject(keys, function (key) {\n            return iterateArrayOrObject(_this.parent.columnModel, function (item) {\n                if (item[getKeyBy] === key) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        });\n        return columns;\n    };\n    /**\n     * Shows or hides columns by given column collection.\n     *\n     * @private\n     * @param {Column[]} columns - Specifies the columns.\n     * @param {Column[]} changedStateColumns - specifies the changedStateColumns\n     * @returns {void}\n     */\n    ShowHide.prototype.setVisible = function (columns, changedStateColumns) {\n        var _this = this;\n        if (changedStateColumns === void 0) { changedStateColumns = []; }\n        changedStateColumns = (changedStateColumns.length > 0) ? changedStateColumns : columns;\n        var args = {\n            requestType: 'columnstate',\n            cancel: false,\n            columns: changedStateColumns\n        };\n        var cancel = 'cancel';\n        this.parent.trigger(events.actionBegin, args, function (showHideArgs) {\n            var currentViewCols = _this.parent.getColumns();\n            columns = isNullOrUndefined(columns) ? currentViewCols : columns;\n            if (showHideArgs[cancel]) {\n                _this.parent.notify(events.resetColumns, { showHideArgs: showHideArgs });\n                if (columns.length > 0) {\n                    columns[0].visible = true;\n                }\n                return;\n            }\n            if (isGroupAdaptive(_this.parent)) {\n                _this.parent.contentModule.emptyVcRows();\n            }\n            if (_this.parent.allowSelection && _this.parent.getSelectedRecords().length &&\n                !_this.parent.selectionSettings.persistSelection) {\n                _this.parent.clearSelection();\n            }\n            if (_this.parent.enableColumnVirtualization) {\n                var colsInCurrentView = columns.filter(function (col1) { return (currentViewCols.some(function (col2) { return col1.field === col2.field; })); });\n                if (colsInCurrentView.length) {\n                    _this.parent.notify(events.columnVisibilityChanged, columns);\n                }\n            }\n            else {\n                _this.parent.notify(events.columnVisibilityChanged, columns);\n            }\n            var params = {\n                requestType: 'columnstate',\n                columns: changedStateColumns\n            };\n            _this.parent.trigger(events.actionComplete, params);\n            if (_this.parent.columnQueryMode !== 'All') {\n                _this.parent.refresh();\n            }\n        });\n    };\n    return ShowHide;\n}());\nexport { ShowHide };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}